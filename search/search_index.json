{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello.","text":"<p>This is Ansh Sachdeva (aka root-ansh ) , a Software Dev from New Delhi,India. I have deep passions for Android App Development, Programming in python, and Data Analysis/Deep Learning.  </p> <p>Sometime ago ,I received Google certification as an Associate Android Developer.</p> <p>Motto</p> <p>Full of curiosities and ambitions, I am here to leave a mark in the world, by building something bigger than myself, for the betterment of humanity</p> <p>My resume can be found here. I also love to share my experiments and findings in the mysterious world of android and tech in general, which are mentioned here  and here.  </p> <p>Once again, Welcome to my website, feel free to explore my Professional Career Summary!</p>"},{"location":"#contact-details","title":"Contact details","text":"<p>      E-mail  \u2022      LinkedIn  \u2022      Github  \u2022      Medium  \u2022      Twitter  \u2022      Hashnode  </p>"},{"location":"removing_the_masks/","title":"Removing the Masks \ud83c\udfad","text":"<p>Weird title, right ? Especially in a time of COVID , a title like this might classify me as insane or a flat-earth conspiracist . </p> <p>But fear not, I am neither asking you to remove your masks nor asking you to believe in flat-earth theories. I am just writing some thoughts that have been bothering me for some time which are related to how the modern safety of anonymity is causing us to become more vile and insecure while at the end uncovering some of my masks . </p> <p>It's always safe to go unnoticed.   </p> <ul> <li>To be the common( read \"ideal\") student in a class than rather be that witty guy who would make funny remarks when teacher would say something, bringing the joy in whole class.   </li> <li>To be the quiet little in-the-background guy doing the work in job, because once something breaks you don't wanna be the \"guy who caused the damage\" .  </li> <li>To be the cool silent  guy by the corner of drinks counter in a wedding than rather be that drunk boasting dude on Dance floor  </li> <li>To be the \"devilsBrother69\" on reddit and other social media throwing racist comments in posts and chats than rather attach your name and face to it.  </li> <li>To be the guy who follows the  religion of majority, who goes where the majority goes, does which majority does. Basically a Herd Immunity. </li> </ul> <p>The recent pandemic and other lifestyle changes have only added to more frequent usage of Anonymity to represent yourselves to others. We can't visit each other physically but even opening a camera in a meeting is sometimes seen as a taboo. And human brain takes a different wild form when it realizes that no one is watching. Just from a harmless yoga pants while working from home to spreading hate on social media under some pseudo-identity , one can reach different levels of vileness.</p>"},{"location":"removing_the_masks/#not-all-masks-are-bad","title":"Not all masks are bad.","text":"<p>Sometimes it's necessary to wear the cloak of invisibility as being identifiable will do more damage than good. for eg,  - you would think twice to share your Addresses , phone number and identity cards info to various websites for the obvious reason that they could use this for  powering  malicious motives.  - You would create 2 public and work profiles on various platforms to keep the associated audience from overlapping as neither would benefit knowing the others : Your aunts and uncles might judge you for the company/product you work upon, while your potential recruiters and companies might judge you for the personal life you have.   - (Even your company doesn't want you to be representing your work as yours but rather the company, that might be why the first thing they do while you join is give you a different email ID (just kidding))  </p>"},{"location":"removing_the_masks/#uncovering-the-masks-to-do-or-not-to-do-is-the-question","title":"Uncovering the masks : to do or not to do, is the question?","text":"<p>So far I have tried to address both sides of a coin with an unbiased opinion. Having a mask  of anonymity is both a good thing a bad thing, and it mainly depends on you for how you use that mask.  </p> <p>But what about removing this anonymity ? Should you do it? would it be useful ? Is someone already doing it ? I can no longer be unbiased anymore, as this thing has been bothering me for sometime and I personally feel that not having an absolute  cloak of invisibility over me might be  more beneficial.</p> <ol> <li>I am obviously not going to go out post my bank details or voter id card numbers. However some people have done some crazy social experiments  with positive results.(Disclaimer: Try at your own risk)  So I would take the moral of the story to be confident, a little crazy and open enough to raise your thoughts for who you are , rather than being an invisible eye watching the whole world burning itself down.  </li> <li>The sense of confidence that you get , when you are true, same person everywhere is something the goes long way for helping you get comfortable. You don't have to awkwardly accept drinks and food that you don't like if you remain firm on your stances than rather stumbling down over the peer pressure.  </li> <li>Attaching a profile on your posts and comments makes you responsible for those actions. People would look at your face and trust you, judge you, respect you or hate you for such thoughts. Thus I think this is a step towards improving your own thoughts as they are getting criticised publicly and correctly.  </li> <li>Expressing yourself is the key to be happy. If you think something is wrong , express your concern. If you think something is funny, laugh it out. If you think something is making you uncomfortable, let it be known to the associated authorities (friends , family coworkers , etc) Keeping your thoughts to yourself sometimes causes a regret that could be avoided by just being a little open.  </li> <li>Stop using \"Trying\" often.  \"Trying\" is a phase, it has a beginning and an end. The act of \"trying\" is itself a mask on its own . \"I am trying to become a better person\" , \"I am trying to learn this tech\" , ... well OK!! what is your current state? when is this trial phase ending ? Every \"trying\" should come with a deadline. like , \"i have been trying to lose weight for last 4 months and i have lost 6 pounds\" or  \"I tried doing yoga every day in January, but i could not attend more than 15 sessions, so I left it\" Be firm about your action related to \"trying\"  </li> </ol>"},{"location":"removing_the_masks/#hello-world","title":"Hello World .","text":"<p>It would be a little hypocritical of me to write an article on anonymity without telling a little about myself. So here goes nothing. </p> <ul> <li>I am an Indian, Delhi-based guy in his 20s working as an Android Engineer in an ed-tech startup and learning various tools and technologies along the way . Over the last few years, I have achieved fluency as a Associate Engineer in making mobile apps and now am trying to gain more senior level skills (with a goal of  next 1 year)</li> <li>Personally am an animal lover,  vegetarian and simplistic guy with curiosities and dreams to travel distant places . I have been to some valleys of nanital and jammu . Our home always has some adopted cats or kittens running around.</li> <li>I am a follower of Shri Prabhat Ranjan Sarkar (also known as Anandmurti or Baba)  as religion. He was a great spiritual guru , a philosopher and a composer of 1000s of folk songs . Some of the teachings that a strict follower of  Shri Shri Anandamurti does are: <ul> <li>Doing Exercise and Asanas twice a day</li> <li>Eating \"Satvik\" food:  Plant based food with simple flavours , low calories and avoiding foods that have a sedative effect on the mind and body (like onion, garlic , mushrooms , meat etc)</li> <li>keeping yourself fresh, clean , doing monthly fasting, the practise of meditation and ultimate surrender to a supreme power, self realisation and service to all , ... and many more . you can read more about him here </li> </ul> </li> </ul> <p>There are many more masks that I might like to uncover, but  they might be suited for a better time.</p> <p>With love, Ansh</p>"},{"location":"tab_blogs/bloglist/","title":"Blogs","text":"<p>I often write some blogs on various platforms .</p> <ul> <li> <p>Securing your keys with gradle|Medium</p> </li> <li> <p>Navigation drawer with a twist|Medium</p> </li> <li> <p>Multi Level Marketting and ebiz|Medium </p> </li> <li> <p>My journey in google india scholarship|Medium</p> </li> <li> <p>Experiments with Android : Camera (Part 2</p> </li> <li> <p>Experiments with Android : Camera (Part 1)</p> </li> </ul>"},{"location":"tab_edu/edu_details/","title":"Education details","text":""},{"location":"tab_edu/edu_details/#academic","title":"Academic","text":"Class 10th Class 12th Cambridge Foundation School, New Delhi, India. Cambridge Foundation School, New Delhi, India.(2016) batch of 2014 Batch of 2016 Central Board Of Secondary Education(CBSE) Central Board Of Secondary Education(CBSE) CGPA  9.0 76.4% B.Tech, Computer Science Engineering JIMS Engineering Management Technical Campus(JEMTEC) batch 2016-20 (Ongoing) GGSIP University CGPA 7.1"},{"location":"tab_edu/edu_details/#non-academic","title":"Non Academic","text":""},{"location":"tab_edu/edu_details/#certifications","title":"Certifications.","text":"Google Certified Associate Android Developer      I recently received Associate Android Developer Certification from Google. More      details can be found here."},{"location":"tab_edu/edu_details/#scholarships","title":"Scholarships.","text":"Winner of Edugrad Data Analytics Scholarship                Reciepent of Google India Scholarship, First Round                Reciepent of Facebook Pytorch Scholarship, First Round"},{"location":"tab_edu/edu_details/#courses","title":"Courses.","text":"Java Core Programming.         Coding Blocks, Dwarka.                Android App Development Basics.         Coding Blocks, Dwarka."},{"location":"tab_notes/blog_summary/","title":"Welcome!","text":"<p>Here you would find somethings that i wanna write about. These are all just rough random notes that i like to take while learning something new. once i am confident about these stuff, i move them to blogs section( or sometimes even just forget about that too) The important thing here is rough notes. they neither show my complete knowledge, nor are they unique to me just a bunch of stuff i collected from the internet. You are free to comment and point to the mistakes, copy paste etc If you find some proprietary stuff  or stuff that needs to be attributed, let me know via the disqus forums and i would rightfully attribute.</p> <p>-- Ansh. </p> <p>PS: These notes are intended to be of my personal use and might contain mix of  hindi,english/klingon,high valyrian,dothraki and binary. There is also a  hidden link on this page having some extra content that i would like to keep hidden,  but kudos if you find it :)</p>"},{"location":"tab_notes/android/android_studio_settings/","title":"Fasting Up Android Studio","text":""},{"location":"tab_notes/android/android_studio_settings/#1-disabling-plugins","title":"1. Disabling plugins .","text":"<p>This article says to disable the following plugins via  settings/plugins:  </p> <ul> <li>Android APK Support  </li> <li>Android Games  </li> <li>Android NDK  </li> <li>App Links Assistant  </li> <li>Copyright  </li> <li>Coverage  </li> <li>CVS Integeration  </li> <li>Editor Config  </li> <li>Fabric for Android Studio  </li> <li>Firebase (App Indexing, Services, Testing)  </li> <li>Github  </li> <li>Google (Cloud Tools Core, Cloud Tools for Android, Developer Samples, - Login, Services)  </li> <li>Markdown Support  </li> <li>Mercurial integration  </li> <li>hg4idea  </li> <li>Settings repository  </li> <li>Subversion integration  </li> <li>Task management  </li> <li>Test recorder  </li> <li>TestNG-J  </li> <li>YAML  </li> </ul>"},{"location":"tab_notes/android/android_studio_settings/#2-adding-exclusions-to-firewall","title":"2. Adding exclusions to firewall","text":"<p>As Per dev site here, add these to the windows defender exclusions:  </p> <ul> <li>C:\\Program Files\\Android\\Android Studio  </li> <li>C:\\Users\\anshs.android   </li> <li>C:Wsers\\anshA.AndroidStudio3.5  </li> <li>C:\\Users\\anshs.gradle  </li> <li>C:\\Users\\anshs\\AppData\\Local\\Android\\Sdk   </li> <li>P:\\  </li> <li>java.exe  </li> <li>studio64.exe  </li> </ul>"},{"location":"tab_notes/android/android_studio_settings/#3-custom-vm-options","title":"3. custom VM Options","text":"<p>These are working for me as of october 2019:  </p> <pre><code>-Xms1024m\n-Xmx4096m\n-XX:MaxPermSize=1024m\n-XX:ReservedCodeCacheSize=256m\n-XX:+UseCompressedOops\n</code></pre>"},{"location":"tab_notes/android/enums_and_intDefs/","title":"Enums and @IntDefs","text":"<p>Enumerations serve the purpose of representing a group of named constants in a programming language We often use <code>Enums</code> to make our cool, restricted group of values tht a function or statement could take. But they are usually considered a bad practise in android because Enums often require more than twice as much memory as static constants.</p>"},{"location":"tab_notes/android/enums_and_intDefs/#enter-intdef","title":"Enter <code>IntDef</code>","text":"<p><code>@IntDef</code> is a way of replacing an integer enum where there's a parameter that should only  accept explicit int values.We can use IntDef to ensure that the value is one of the expected values  by adding this annotation. For eg: <pre><code>public class example {\n   @IntDef( {Type.TYPE_MUSIC,Type.TYPE_PHOTO,Type.TYPE_TEXT})\n    public  @interface  Type{\n        int TYPE_MUSIC = 0;\n        int TYPE_PHOTO = 21;\n        int TYPE_TEXT = 42;\n    }\n\n  // Mark the argument as restricted to these enumerated types\n  public void getItemType(@Type int itemType) {\n    int res = itemType;\n  }\n}\n</code></pre></p> <p>The function will allow user to pass any integer value, but will give a lint warning if value is not <code>Type.TYPE_MUSIC</code>,<code>Type.TYPE_PHOTO</code>or<code>Type.TYPE_TEXT</code>(yes, even if 0,21 or 42 are passed directly  too ).</p>"},{"location":"tab_notes/android/exoplayer_classes/","title":"Exoplayer classes","text":"<pre><code>Ac3Extractor,Ac3Reader,Ac3Util,Ac3Util.SyncFrameInfo,Ac3Util.SyncFrameInfo.StreamType,Ac4Extractor,\nAc4Reader,Ac4Util,Ac4Util.SyncFrameInfo,ActionFileUpgradeUtil,ActionFileUpgradeUtil.DownloadIdProvider,\nAdaptationSet,AdaptiveMediaSourceEventListener,AdaptiveTrackSelection,AdaptiveTrackSelection.Factory,AdPlaybackState,AdPlaybackState.AdGroup,\nAdPlaybackState.AdState,AdsLoader,AdsLoader.AdViewProvider,AdsLoader.EventListener,AdsMediaSource,AdsMediaSource.AdLoadException,\nAdsMediaSource.AdLoadException.Type,AdsMediaSource.MediaSourceFactory,AdtsExtractor,AdtsExtractor.Flags,AdtsReader,AesCipherDataSink,AesCipherDataSource,AesFlushingCipher,Allocation,Allocator,AmrExtractor,AmrExtractor.Flags,AnalyticsCollector,AnalyticsCollector.Factory,AnalyticsListener,AnalyticsListener.EventTime,ApicFrame,AspectRatioFrameLayout,AspectRatioFrameLayout.AspectRatioListener,AspectRatioFrameLayout.ResizeMode,Assertions,AssetDataSource,AssetDataSource.AssetDataSourceException,AtomicFile,\nAudioAttributes,AudioAttributes.Builder,AudioCapabilities,AudioCapabilitiesReceiver,AudioCapabilitiesReceiver.Listener,AudioDecoderException,AudioFocusManager,AudioFocusManager.PlayerCommand,AudioFocusManager.PlayerControl,AudioListener,AudioProcessor,AudioProcessor.UnhandledFormatException,AudioRendererEventListener,AudioRendererEventListener.EventDispatcher,AudioSink,AudioSink.ConfigurationException,AudioSink.InitializationException,AudioSink.Listener,AudioSink.WriteException,AuxEffectInfo,AvcConfig,BandwidthMeter,BandwidthMeter.EventListener,BaseAudioProcessor,BaseDataSource,BaseMediaChunk,BaseMediaChunkIterator,BaseMediaChunkOutput,BaseMediaSource,BasePlayer,BasePlayer.ListenerHolder,BasePlayer.ListenerInvocation,BaseRenderer,BaseTrackSelection,\nBehindLiveWindowException,BinaryFrame,BinarySearchSeeker,BinarySearchSeeker.BinarySearchSeekMap,BinarySearchSeeker.DefaultSeekTimestampConverter,BinarySearchSeeker.OutputFrameHolder,BinarySearchSeeker.SeekOperationParams,BinarySearchSeeker.SeekTimestampConverter,BinarySearchSeeker.TimestampSearchResult,BinarySearchSeeker.TimestampSeeker,Buffer,BufferSizeAdaptationBuilder,BufferSizeAdaptationBuilder.DynamicFormatFilter,ByteArrayDataSink,ByteArrayDataSource,C,C.AudioContentType,C.AudioFlags,C.AudioFocusGain,C.AudioUsage,C.BufferFlags,C.ColorRange,C.ColorSpace,C.ColorTransfer,C.ContentType,C.CryptoMode,C.Encoding,C.NetworkType,\nC.PcmEncoding,C.Projection,C.RoleFlags,C.SelectionFlags,C.StereoMode,C.StreamType,C.VideoScalingMode,Cache,Cache.CacheException,Cache.Listener,CacheDataSink,CacheDataSink.CacheDataSinkException,CacheDataSinkFactory,CacheDataSource,CacheDataSource.CacheIgnoredReason,CacheDataSource.EventListener,CacheDataSource.Flags,CacheDataSourceFactory,CachedRegionTracker,CacheEvictor,CacheKeyFactory,CacheSpan,CacheUtil,CacheUtil.ProgressListener,CameraMotionListener,CameraMotionRenderer,CanvasRenderer,CaptionStyleCompat,CaptionStyleCompat.EdgeType,CastPlayer,Cea608Decoder,Cea708Decoder,Cea708InitializationData,CeaUtil,ChapterFrame,ChapterTocFrame,Chunk,ChunkExtractorWrapper,ChunkExtractorWrapper.TrackOutputProvider,ChunkHolder,ChunkIndex,ChunkSampleStream,ChunkSampleStream.ReleaseCallback,ChunkSource,ClippingMediaPeriod,ClippingMediaSource,ClippingMediaSource.IllegalClippingException,\nClippingMediaSource.IllegalClippingException.Reason,Clock,CodecSpecificDataUtil,ColorInfo,ColorParser,CommentFrame,CompositeMediaSource,CompositeSequenceableLoader,CompositeSequenceableLoaderFactory,ConcatenatingMediaSource,ConditionVariable,ConstantBitrateSeekMap,ContainerMediaChunk,ContentDataSource,ContentDataSource.ContentDataSourceException,ContentMetadata,ContentMetadataMutations,ControlDispatcher,CronetDataSource,CronetDataSource.InterruptedIOException,CronetDataSource.OpenException,CronetDataSourceFactory,CronetEngineWrapper,CronetEngineWrapper.CronetEngineSource,CryptoInfo,Cue,Cue.AnchorType,Cue.LineType,Cue.TextSizeType,DashChunkSource,DashChunkSource.Factory,DashDownloader,DashManifest,DashManifestParser,DashManifestParser.RepresentationInfo,DashManifestStaleException,DashMediaSource,DashMediaSource.Factory,DashSegmentIndex,DashUtil,DashWrappingSegmentIndex,DatabaseIOException,DatabaseProvider,DataChunk,DataSchemeDataSource,DataSink,DataSink.Factory,DataSource,DataSource.Factory,DataSourceException,DataSourceInputStream,DataSpec,DataSpec.Flags,DataSpec.HttpMethod,DebugTextViewHelper,Decoder,DecoderCounters,\nDecoderInputBuffer,DecoderInputBuffer.BufferReplacementMode,DecryptionException,DecryptionResource,DecryptionResource.Owner,DefaultAllocator,DefaultAnalyticsListener,DefaultAudioSink,DefaultAudioSink.AudioProcessorChain,DefaultAudioSink.DefaultAudioProcessorChain,DefaultAudioSink.InvalidAudioTrackTimestampException,DefaultBandwidthMeter,DefaultBandwidthMeter.Builder,DefaultCastOptionsProvider,DefaultCompositeSequenceableLoaderFactory,DefaultContentMetadata,DefaultControlDispatcher,DefaultDashChunkSource,DefaultDashChunkSource.Factory,DefaultDashChunkSource.RepresentationHolder,DefaultDashChunkSource.RepresentationSegmentIterator,DefaultDatabaseProvider,DefaultDataSource,DefaultDataSourceFactory,DefaultDownloaderFactory,DefaultDownloadIndex,DefaultDrmSessionEventListener,DefaultDrmSessionManager,DefaultDrmSessionManager.MissingSchemeDataException,DefaultDrmSessionManager.Mode,DefaultExtractorInput,DefaultExtractorsFactory,DefaultHlsDataSourceFactory,DefaultHlsExtractorFactory,DefaultHlsPlaylistParserFactory,DefaultHlsPlaylistTracker,DefaultHttpDataSource,DefaultHttpDataSourceFactory,DefaultLoadControl,DefaultLoadControl.Builder,DefaultLoadErrorHandlingPolicy,DefaultMediaSourceEventListener,DefaultRenderersFactory,DefaultRenderersFactory.ExtensionRendererMode,DefaultSsChunkSource,DefaultSsChunkSource.Factory,DefaultTimeBar,DefaultTrackNameProvider,DefaultTrackSelector,\nDefaultTrackSelector.AudioTrackScore,DefaultTrackSelector.Parameters,DefaultTrackSelector.ParametersBuilder,DefaultTrackSelector.SelectionOverride,DefaultTsPayloadReaderFactory,DefaultTsPayloadReaderFactory.Flags,DeferredMediaPeriod,DeferredMediaPeriod.PrepareErrorListener,Descriptor,DolbyVisionConfig,Download,Download.FailureReason,Download.State,DownloadCursor,Downloader,Downloader.ProgressListener,DownloaderConstructorHelper,DownloaderFactory,DownloadException,DownloadHelper,DownloadHelper.Callback,DownloadIndex,DownloadManager,DownloadManager.Listener,DownloadNotificationHelper,DownloadNotificationUtil,DownloadProgress,\nDownloadRequest,DownloadRequest.UnsupportedRequestException,DownloadService,DrmInitData,DrmInitData.SchemeData,DrmSession,DrmSession.DrmSessionException,DrmSession.State,DrmSessionManager,DtsReader,DtsUtil,DummyDataSource,DummyExtractorOutput,DummySurface,DummyTrackOutput,DvbDecoder,DvbSubtitleReader,DynamicConcatenatingMediaSource,EbmlProcessor,EbmlProcessor.ElementType,EGLSurfaceTexture,EGLSurfaceTexture.GlException,EGLSurfaceTexture.SecureMode,EGLSurfaceTexture.TextureImageListener,ElementaryStreamReader,EmptySampleStream,ErrorMessageProvider,ErrorStateDrmSession,EventDispatcher,EventDispatcher.Event,EventLogger,EventMessage,EventMessageDecoder,EventMessageEncoder,EventStream,ExoDatabaseProvider,ExoMediaCrypto,ExoMediaDrm,ExoMediaDrm.KeyRequest,\nExoMediaDrm.KeyStatus,ExoMediaDrm.OnEventListener,ExoMediaDrm.OnKeyStatusChangeListener,ExoMediaDrm.ProvisionRequest,ExoPlaybackException,ExoPlaybackException.Type,ExoPlayer,ExoPlayer.ExoPlayerComponent,ExoPlayer.ExoPlayerMessage,ExoPlayerFactory,ExoPlayerLibraryInfo,Extractor,Extractor.ReadResult,ExtractorInput,ExtractorMediaSource,ExtractorMediaSource.EventListener,ExtractorMediaSource.Factory,ExtractorOutput,ExtractorsFactory,FfmpegAudioRenderer,FfmpegDecoderException,FfmpegLibrary,FileDataSource,\nFileDataSource.FileDataSourceException,FileDataSourceFactory,FilterableManifest,FilteringHlsPlaylistParserFactory,FilteringManifestParser,FixedTrackSelection,FixedTrackSelection.Factory,FlacDecoderException,FlacExtractor,FlacExtractor.Flags,FlacLibrary,\nFlacStreamMetadata,FlvExtractor,Format,FormatHolder,ForwardingTimeline,FragmentedMp4Extractor,FragmentedMp4Extractor.Flags,FrameRotationQueue,FrameworkMediaCrypto,FrameworkMediaDrm,GaplessInfoHolder,GeobFrame,GlUtil,GlViewGroup,GvrAudioProcessor,GvrPlayerActivity,H262Reader,H264Reader,H265Reader,HandlerWrapper,HevcConfig,HlsDataSourceFactory,HlsDownloader,HlsExtractorFactory,HlsExtractorFactory.Result,HlsManifest,HlsMasterPlaylist,HlsMasterPlaylist.Rendition,HlsMasterPlaylist.Variant,HlsMediaPeriod,HlsMediaPlaylist,HlsMediaPlaylist.PlaylistType,HlsMediaPlaylist.Segment,HlsMediaSource,HlsMediaSource.Factory,HlsPlaylist,HlsPlaylistParser,HlsPlaylistParserFactory,HlsPlaylistTracker,HlsPlaylistTracker.Factory,HlsPlaylistTracker.PlaylistEventListener,HlsPlaylistTracker.PlaylistResetException,HlsPlaylistTracker.PlaylistStuckException,HlsPlaylistTracker.PrimaryPlaylistListener,\nHlsTrackMetadataEntry,HlsTrackMetadataEntry.VariantInfo,HttpDataSource,HttpDataSource.BaseFactory,HttpDataSource.Factory,HttpDataSource.HttpDataSourceException,HttpDataSource.HttpDataSourceException.Type,HttpDataSource.InvalidContentTypeException,HttpDataSource.InvalidResponseCodeException,HttpDataSource.RequestProperties,HttpMediaDrmCallback,IcyDecoder,IcyHeaders,IcyInfo,Id3Decoder,Id3Decoder.FramePredicate,Id3Frame,Id3Peeker,Id3Reader,IllegalSeekPositionException,ImaAdsLoader,ImaAdsLoader.Builder,InitializationChunk,InternalFrame,JobDispatcherScheduler,JobDispatcherScheduler.JobDispatcherSchedulerService,KeysExpiredException,LatmReader,LeanbackPlayerAdapter,LeastRecentlyUsedCacheEvictor,LibflacAudioRenderer,LibopusAudioRenderer,LibraryLoader,LibvpxVideoRenderer,LoadControl,Loader,Loader.Callback,Loader.Loadable,Loader.LoadErrorAction,Loader.ReleaseCallback,Loader.UnexpectedLoaderException,LoaderErrorThrower,LoaderErrorThrower.Dummy,LoadErrorHandlingPolicy,LocalMediaDrmCallback,Log,LongArray,LoopingMediaSource,MappingTrackSelector,MappingTrackSelector.MappedTrackInfo,MatroskaExtractor,MatroskaExtractor.Flags,MdtaMetadataEntry,MediaChunk,MediaChunkIterator,MediaChunkListIterator,MediaClock,MediaCodecAudioRenderer,MediaCodecInfo,MediaCodecRenderer,\nMediaCodecRenderer.DecoderInitializationException,MediaCodecRenderer.KeepCodecResult,MediaCodecSelector,MediaCodecUtil,MediaCodecUtil.DecoderQueryException,MediaCodecVideoRenderer,MediaCodecVideoRenderer.CodecMaxValues,MediaDrmCallback,MediaFormatUtil,MediaItem,MediaItem.Builder,MediaItem.DrmScheme,MediaItem.UriBundle,MediaItemQueue,MediaPeriod,MediaPeriod.Callback,MediaSessionConnector,MediaSessionConnector.CommandReceiver,MediaSessionConnector.CustomActionProvider,MediaSessionConnector.DefaultMediaMetadataProvider,MediaSessionConnector.MediaButtonEventHandler,MediaSessionConnector.MediaMetadataProvider,MediaSessionConnector.PlaybackActions,MediaSessionConnector.PlaybackPreparer,MediaSessionConnector.QueueEditor,MediaSessionConnector.QueueNavigator,MediaSessionConnector.RatingCallback,MediaSource,MediaSource.MediaPeriodId,MediaSource.SourceInfoRefreshListener,MediaSourceEventListener,MediaSourceEventListener.EventDispatcher,MediaSourceEventListener.LoadEventInfo,MediaSourceEventListener.MediaLoadData,MergingMediaSource,MergingMediaSource.IllegalMergeException,MergingMediaSource.IllegalMergeException.Reason,Metadata,Metadata.Entry,MetadataDecoder,MetadataDecoderFactory,MetadataInputBuffer,MetadataOutput,MetadataRenderer,MetadataRenderer.Output,\nMimeTypes,MlltFrame,Mp3Extractor,Mp3Extractor.Flags,Mp4Extractor,Mp4Extractor.Flags,Mp4WebvttDecoder,MpegAudioHeader,MpegAudioReader,NalUnitUtil,NalUnitUtil.PpsData,NalUnitUtil.SpsData,NoOpCacheEvictor,NoSampleRenderer,NotificationUtil,NotificationUtil.Importance,OfflineLicenseHelper,OggExtractor,OkHttpDataSource,OkHttpDataSourceFactory,OpusDecoderException,OpusLibrary,OutputBuffer,ParsableBitArray,ParsableByteArray,ParsableNalUnitBitArray,ParserException,ParsingLoadable,ParsingLoadable.Parser,Period,\nPesReader,PgsDecoder,PictureFrame,PlatformScheduler,PlatformScheduler.PlatformSchedulerService,PlaybackControlView,PlaybackControlView.ControlDispatcher,PlaybackParameters,PlaybackPreparer,Player,Player.AudioComponent,Player.DefaultEventListener,Player.DiscontinuityReason,Player.EventListener,Player.MetadataComponent,Player.RepeatMode,Player.TextComponent,Player.TimelineChangeReason,Player.VideoComponent,PlayerControlView,PlayerControlView.ProgressUpdateListener,PlayerControlView.VisibilityListener,PlayerEmsgHandler,PlayerEmsgHandler.PlayerEmsgCallback,PlayerMessage,PlayerMessage.Sender,PlayerMessage.Target,PlayerNotificationManager,PlayerNotificationManager.CustomActionReceiver,PlayerNotificationManager.MediaDescriptionAdapter,PlayerNotificationManager.NotificationListener,PlayerNotificationManager.Priority,PlayerNotificationManager.Visibility,PlayerView,PlayerView.ShowBuffering,PointerRenderer,PositionHolder,Predicate,PriorityDataSource,PriorityDataSourceFactory,PriorityTaskManager,PriorityTaskManager.PriorityTooLowException,PrivateCommand,PrivFrame,ProgramInformation,ProgressiveDownloader,ProgressiveMediaSource,ProgressiveMediaSource.Factory,Projection,Projection.DrawMode,Projection.Mesh,Projection.SubMesh,ProjectionDecoder,PsExtractor,PsshAtomUtil,\nRandomTrackSelection,RandomTrackSelection.Factory,RangedUri,RawCcExtractor,RawResourceDataSource,RawResourceDataSource.RawResourceDataSourceException,Renderer,Renderer.State,RendererCapabilities,RendererConfiguration,RenderersFactory,RepeatModeActionProvider,\nRepeatModeUtil,RepeatModeUtil.RepeatToggleModes,Representation,Representation.MultiSegmentRepresentation,Representation.SingleSegmentRepresentation,Requirements,Requirements.RequirementFlags,RequirementsWatcher,RequirementsWatcher.Listener,ResolvingDataSource,ResolvingDataSource.Factory,ResolvingDataSource.Resolver,ReusableBufferedOutputStream,RtmpDataSource,RtmpDataSourceFactory,\nSampleQueue,SampleQueue.UpstreamFormatChangedListener,SampleQueueMappingException,SampleStream,SceneRenderer,Scheduler,SectionPayloadReader,SectionReader,SeekMap,SeekMap.SeekPoints,SeekMap.Unseekable,SeekParameters,SeekPoint,SegmentBase,SegmentBase.MultiSegmentBase,SegmentBase.SegmentList,SegmentBase.SegmentTemplate,SegmentBase.SegmentTimelineElement,SegmentBase.SingleSegmentBase,\nSegmentDownloader,SegmentDownloader.Segment,SequenceableLoader,SequenceableLoader.Callback,SessionAvailabilityListener,ShuffleOrder,ShuffleOrder.DefaultShuffleOrder,ShuffleOrder.UnshuffledShuffleOrder,SilenceMediaSource,SilenceSkippingAudioProcessor,SimpleCache,SimpleDecoder,SimpleDecoderAudioRenderer,SimpleExoPlayer,SimpleExoPlayer.VideoListener,SimpleExoPlayerView,SimpleOutputBuffer,SimpleSubtitleDecoder,SinglePeriodAdTimeline,SinglePeriodTimeline,SingleSampleMediaChunk,SingleSampleMediaSource,SingleSampleMediaSource.EventListener,SingleSampleMediaSource.Factory,SingleTapListener,SlidingPercentile,SonicAudioProcessor,SphericalSurfaceView,SpliceCommand,SpliceInfoDecoder,SpliceInfoSectionReader,SpliceInsertCommand,SpliceInsertCommand.ComponentSplice,\nSpliceNullCommand,SpliceScheduleCommand,SpliceScheduleCommand.ComponentSplice,SpliceScheduleCommand.Event,SsaDecoder,SsChunkSource,\nSsChunkSource.Factory,SsDownloader,SsManifest,SsManifest.ProtectionElement,SsManifest.StreamElement,SsManifestParser,SsManifestParser.MissingFieldException,SsMediaSource,SsMediaSource.Factory,SsUtil,StandaloneMediaClock,StatsDataSource,StreamKey,SubripDecoder,\nSubtitle,SubtitleDecoder,SubtitleDecoderException,SubtitleDecoderFactory,SubtitleInputBuffer,SubtitleOutputBuffer,SubtitleView,\nTeeAudioProcessor,TeeAudioProcessor.AudioBufferSink,TeeAudioProcessor.WavFileAudioBufferSink,TeeDataSource,TextInformationFrame,\nTextOutput,TextRenderer,TextRenderer.Output,TimeBar,TimeBar.OnScrubListener,TimedValueQueue,Timeline,Timeline.Period,Timeline.Window,TimelineQueueEditor,TimelineQueueEditor.MediaIdEqualityChecker,TimelineQueueEditor.MediaSourceFactory,TimelineQueueEditor.QueueDataAdapter,TimelineQueueNavigator,TimeSignalCommand,TimestampAdjuster,TimestampAdjusterProvider,TraceUtil,Track,Track.Transformation,TrackBitrateEstimator,TrackEncryptionBox,TrackGroup,TrackGroupArray,TrackNameProvider,TrackOutput,TrackOutput.CryptoData,TrackSelection,TrackSelection.Definition,TrackSelection.Factory,TrackSelectionArray,TrackSelectionDialogBuilder,TrackSelectionDialogBuilder.DialogCallback,TrackSelectionParameters,TrackSelectionParameters.Builder,TrackSelectionUtil,TrackSelectionUtil.AdaptiveTrackSelectionFactory,TrackSelectionView,TrackSelectionView.TrackSelectionListener,TrackSelector,TrackSelector.InvalidationListener,\nTrackSelectorResult,TransferListener,TsExtractor,TsExtractor.Mode,TsPayloadReader,TsPayloadReader.DvbSubtitleInfo,TsPayloadReader.EsInfo,TsPayloadReader.Factory,TsPayloadReader.Flags,TsPayloadReader.TrackIdGenerator,TsUtil,TtmlDecoder,Tx3gDecoder,UdpDataSource,UdpDataSource.UdpDataSourceException,UnrecognizedInputFormatException,UnsupportedDrmException,UnsupportedDrmException.Reason,\nUriUtil,UrlLinkFrame,UrlTemplate,UtcTimingElement,Util,VersionTable,VideoFrameMetadataListener,VideoFrameReleaseTimeHelper,VideoListener,VideoRendererEventListener,VideoRendererEventListener.EventDispatcher,VorbisComment,VpxDecoderException,VpxLibrary,VpxOutputBuffer,\nVpxOutputBufferRenderer,VpxVideoSurfaceView,WavExtractor,WavUtil,WebvttCssStyle,WebvttCssStyle.FontSizeUnit,WebvttCssStyle.StyleFlags,WebvttCue,WebvttCue.Builder,WebvttCueParser,WebvttDecoder,WebvttExtractor,WebvttParserUtil,WidevineUtil,WindowedTrackBitrateEstimator,WorkManagerScheduler,WorkManagerScheduler.SchedulerWorker,WritableDownloadIndex,XmlPullParserUtil\n</code></pre>"},{"location":"tab_notes/android/exoplayer_p1/","title":"Exoplayer","text":"<p>17/9/19  </p> <p>A good video player library for implementing A decent video player in your app, coz the other option of video_view from the default android sdk is less useful  </p>"},{"location":"tab_notes/android/exoplayer_p1/#steps-to-implement","title":"Steps to implement","text":"<ol> <li>Add Exoplayer library : Which is actually a group of 6-7 individual libraries having a jillion files.  </li> </ol> <pre><code>    implementation 'com.google.android.exoplayer:exoplayer:2.10.4'\n</code></pre> <p>adding this would add fucking 800 classes of this massive library. So let us see what it has to offer.  </p> <p>Some basic Details. </p> <p>The library has the following modules. Adding a dependency to the full ExoPlayer library is equivalent to adding dependencies on all of the library modules individually:  </p> <pre><code>- exoplayer-core: Core functionality (required).\n- exoplayer-dash: Support for DASH content.\n- exoplayer-hls: Support for HLS content.\n- exoplayer-smoothstreaming: Support for SmoothStreaming content.\n- exoplayer-ui: UI components and resources for use with ExoPlayer.\n</code></pre> <p>In addition to library modules, ExoPlayer has multiple extension modules that depend on external libraries to provide additional functionality. Browse the extensions directory(https://github.com/google/ExoPlayer/tree/release-v2/extensions/) and their individual READMEs for details. Also java 8 support is compulsory for this library.  </p>"},{"location":"tab_notes/android/exoplayer_p1/#the-bare-minimmums","title":"the Bare Minimmums.","text":"<p>The smallest code that we need to implement would be:  </p> <pre><code>     protected void onCreate(Bundle savedInstanceState) {\n        ...\n\n        Context ctx =this;\n        String CONTENT_URL = \"https://www.radiantmediaplayer.com/media/bbb-360p.mp4\";\n        int playerID=R.id.pv_main;\n        int appNameStringRes = R.string.app_name;\n        startPlayingVideo(this,CONTENT_URL,playerID,appNameStringRes);\n\n    }\n\n    //\n    private void startPlayingVideo(Context ctx , String CONTENT_URL, int playerID, String appNameRes) {\n\n        PlayerView pvMain = ctx.findViewById(playerID);\n\n        //BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\n        //TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory(bandwidthMeter);        \n        //TrackSelector trackSelectorDef = new DefaultTrackSelector(videoTrackSelectionFactory);\n        TrackSelector trackSelectorDef = new DefaultTrackSelector();\n\n        SimpleExoPlayer absPlayerInternal = ExoPlayerFactory.newSimpleInstance(ctx, trackSelectorDef);\n\n        String userAgent = Util.getUserAgent(ctx, ctx.getString(appNameRes));\n\n        DefaultDataSourceFactory defdataSourceFactory = new DefaultDataSourceFactory(ctx,userAgent);\n        Uri uriOfContentUrl = Uri.parse(CONTENT_URL);\n        MediaSource mediaSource = new ProgressiveMediaSource.Factory(defdataSourceFactory).createMediaSource(uriOfContentUrl);\n\n        absPlayerInternal.prepare(mediaSource);\n        absPlayerInternal.setPlayWhenReady(true);\n\n        pvMain.setPlayer(absPlayerInternal);\n\n    }\n\n    private void stopPlayer(PlayerView pv,SimpleExoPlayer absPlayer){\n        pv.setPlayer(null);\n        absPlayer.release();\n        absPlayer = null;\n    }\n</code></pre> <p>How this works?  </p> <ul> <li>We add a <code>PlayerView</code> widget in our xml and refer its instance in java.  </li> <li>Then we attach an instance of <code>SimpleExoPlayer</code> to it , which will handle all downloading, decoding and rendering of video.  </li> </ul> <p>In More Details, but with a tiny off topic context: </p> <p>Suppose I am the creator of baby shark video song. I have made this large 48 mb sized HD, bluray video and uploaded it to my fast, responsive,hypothetical aws server. I want the an app which is able to fetch this video into user's mobile without downloading it on their mobiles.  </p> <p>This is what I call static streaming . The video player is supposed to download some small chunks(Say, 2-12 second of a video at a time) of video one by one, at real time and show it to the users on the spot. </p> <p>But The biggest problem with streaming is connectivity. Their are mobile users with super fast internet speeds, users with fluctuating speeds and users with terribly ugly internet speeds. Even though a 6 sec HD video would be just 700-800 KB data, it might take 4-5 seconds for a user with poor connection.  </p> <p>So exo player has this <code>TrackSelector</code> class, that is  responsible for choosing which file chunks to download based on perceived bandwidth changes. </p> <p>So, for eg, if a high quality chunk would take too long to download, the TrackSelector will choose something of lower quality to show the user. And since each chunk is usually about 2 to 12 seconds long, it\u2019s not  bad if the user gets a lower quality chunk of media once in while for the benefit of a smooth experience.  </p> <p>It Uses <code>BandwidthMeter</code> class to get user's current bandwidth speeds  and a bunch of  other classes nd factories to create different tracks of video stream chuncks or packets of different sizes and qualities.  </p> <p>(Later we will expand more on this: what are tracks, how tracks are created, track selection and creators, How it interacts with <code>absPlayerInstance</code> etc ).  </p> <p>So, to summarise, TrackSelector basically makes a setting in our exoplayer environment to download either  high quality HD packets(i.e a complete packet) or low quality 144p or 360p packets(or optimised/compressed/low quality version of a packet) from a stream usually on the basis of user's Internet Connection Bandwidth and/or other factors. </p> <p>Using this track selector we can create an almost ready to run ExoPlayer instance. Let's look into <code>SimpleExoPlayer</code>.  </p> <p>At the core of the ExoPlayer library is the <code>Player</code> interface. This is the most powerful interface as it has definations for functions like:  </p> <ul> <li> <p><code>isPlayingAd()</code>: weather the player is playing an ad or not.  </p> </li> <li> <p><code>getCurrentAdGroupIndex()</code> : index of current ad group(if ad is being played)  </p> </li> <li> <p><code>getCurrentAdIndexInAdGroup()</code> : index of current ad in current ad group(if ad is being played)  </p> </li> <li> <p><code>getContentDuration()</code> : returns either the total duration of contents(+ the ads) or <code>C.TIME_UNSET</code> (a constant indicating remaining time is unknown)  </p> </li> <li> <p><code>getContentPosition()</code> : position of content from where it will be resumed playing after ads are finished. (if ads aren't playing, will simply return same as <code>getPosition()</code>)  </p> </li> <li> <p><code>getContentBufferedPosition()</code> : returns an estimate of the content position in the current content window up to which data is buffered, in milliseconds.(if ads aren't playing, will simply return same as <code>getBufferedPosition()</code>)  </p> </li> <li> <p>get/setVolume()  </p> </li> <li> <p>getAudioComponent(),getVideoComponent(),MetaDataComponent() // not exactly what you are thinking  </p> </li> <li> <p>add/remove audio/videoListener  </p> </li> <li> <p>addEventListener(),addErrorListener  </p> </li> <li> <p>setPlayWhenRead()/ setRepeatMode()/ seekTo()/ stop()/reset()/ isLoading()/release()  </p> </li> <li> <p>getCurrentTrackGroups/getTrackSelections()/geTCurrentManifest()  </p> </li> <li> <p>setPlayBackParams() //like speed/pith  </p> </li> </ul> <p>Instances can be created through ExoPlayerFactory class.  <code>SimpleExoPlayer</code> instance is a class which implements Player functions. ExoPlayer exposes traditional high-level media player functionality such as getAudioFormat, getCurrentPositon, getDuration, setVolume, seekTo, setPlayWhenReady, stop and much more. Just like I have mentioned before ExoPlayer uses many components to achieve its modularity and customizability. It delegates work to components which have to be injected when we create and prepare an ExoPlayer instance.  </p> <p>The next part is specifying a <code>MediaSource</code>. We have assumed that their will be a video on some server that will be continuously sending us data some large chunks of data packages and our track selector and other libs will download small chuncks of it based on user bandwidth.  </p> <p>But there is something missing, something incomplete. How is this continuous stream coming?Where is it coming from? why is it coming automatically and continuously?When and how did it started coming? How is it forever running?Why isn't data getting wasted if packet downloading speed is so fast while streaming speed is slow?Can I listen to the packets being received/decoded/...(whatever are the stages before player starts to render it and user sees it)...?   </p> <p>These are good questions that will be obviously answered. But let's first work on our assumptions.  </p> <ol> <li>Our first assumption is very correct: There IS some server that has our video loaded in it. So our first task would be to inform our app's video handling environment, i.e the exoplayer about it.  </li> </ol> <p>A <code>{@link Factory}</code> that produces <code>{@link DefaultDataSource}</code> instances that delegate to <code>* {@link DefaultHttpDataSource}</code>s for non-file/asset/content URIs.  </p> <p>Your choice of MediaSource is going to depend on the type of media you're trying to play.In this example, we're going to be playing an MP4, so we're going to use an <code>ProgressiveMediaSource</code> which supports formats  like MP4, MP3, Matroska, and so on.  </p> <p>If you wanted to play Dash or HLS or smooth streaming streams, then you would use the corresponding MediaSources for those different formats.  </p>"},{"location":"tab_notes/android/exoplayer_p1/#extras","title":"Extras","text":"<ul> <li>Why exoplayer does not support progress listener: Link According to them, it's the \"client that knows the points at which it wants a position update\". What if the client just wants to listen to the video current position updates?  </li> </ul> <p>Constantly checking getCurrentPosition (e.g. with the help of Timer().scheduleAtFixedRate) is a very inefficient solution. IMHO, it would be great if ExoPlayer had a specialized method for this, somethings like setCurrentPositionListener which the developers could use to get notified about the video position changes.  </p> <p>Since the player manages its own getCurrentPosition property it already knows when to emit onPositionChanged events. The client can only use the polling technique for this:  </p> <pre><code>/**\n// TrackSelector class\n * The component of an {@link ExoPlayer} responsible for selecting tracks to be consumed by each of\n * the player's {@link Renderer}s. The {@link DefaultTrackSelector} implementation should be\n * suitable for most use cases.\n *\n * &lt;h3&gt;Interactions with the player&lt;/h3&gt;\n *\n * The following interactions occur between the player and its track selector during playback.\n *\n * &lt;p&gt;\n *\n * &lt;ul&gt;\n *   &lt;li&gt;When the player is created it will initialize the track selector by calling {@link\n *       #init(InvalidationListener, BandwidthMeter)}.\n *   &lt;li&gt;When the player needs to make a track selection it will call {@link\n *       #selectTracks(RendererCapabilities[], TrackGroupArray, MediaPeriodId, Timeline)}. This\n *       typically occurs at the start of playback, when the player starts to buffer a new period of\n *       the media being played, and when the track selector invalidates its previous selections.\n *   &lt;li&gt;The player may perform a track selection well in advance of the selected tracks becoming\n *       active, where active is defined to mean that the renderers are actually consuming media\n *       corresponding to the selection that was made. For example when playing media containing\n *       multiple periods, the track selection for a period is made when the player starts to buffer\n *       that period. Hence if the player's buffering policy is to maintain a 30 second buffer, the\n *       selection will occur approximately 30 seconds in advance of it becoming active. In fact the\n *       selection may never become active, for example if the user seeks to some other period of\n *       the media during the 30 second gap. The player indicates to the track selector when a\n *       selection it has previously made becomes active by calling {@link\n *       #onSelectionActivated(Object)}.\n *   &lt;li&gt;If the track selector wishes to indicate to the player that selections it has previously\n *       made are invalid, it can do so by calling {@link\n *       InvalidationListener#onTrackSelectionsInvalidated()} on the {@link InvalidationListener}\n *       that was passed to {@link #init(InvalidationListener, BandwidthMeter)}. A track selector\n *       may wish to do this if its configuration has changed, for example if it now wishes to\n *       prefer audio tracks in a particular language. This will trigger the player to make new\n *       track selections. Note that the player will have to re-buffer in the case that the new\n *       track selection for the currently playing period differs from the one that was invalidated.\n * &lt;/ul&gt;\n *\n * &lt;h3&gt;Renderer configuration&lt;/h3&gt;\n *\n * The {@link TrackSelectorResult} returned by {@link #selectTracks(RendererCapabilities[],\n * TrackGroupArray, MediaPeriodId, Timeline)} contains not only {@link TrackSelection}s for each\n * renderer, but also {@link RendererConfiguration}s defining configuration parameters that the\n * renderers should apply when consuming the corresponding media. Whilst it may seem counter-\n * intuitive for a track selector to also specify renderer configuration information, in practice\n * the two are tightly bound together. It may only be possible to play a certain combination tracks\n * if the renderers are configured in a particular way. Equally, it may only be possible to\n * configure renderers in a particular way if certain tracks are selected. Hence it makes sense to\n * determined the track selection and corresponding renderer configurations in a single step.\n *\n * &lt;h3&gt;Threading model&lt;/h3&gt;\n *\n * All calls made by the player into the track selector are on the player's internal playback\n * thread. The track selector may call {@link InvalidationListener#onTrackSelectionsInvalidated()}\n * from any thread.\n */\npublic abstract class TrackSelector {\n}\n</code></pre> <ul> <li>ProgressiveMediaSource(a class) extends BaseMediaSource(a class) extends Media Source(an interface) </li> </ul> <p>Some code:  </p> <pre><code>/**\n * Provides one period that loads data from a {@link Uri} and extracted using an {@link Extractor}.\n *\n * &lt;p&gt;If the possible input stream container formats are known, pass a factory that instantiates\n * extractors for them to the constructor. Otherwise, pass a {@link DefaultExtractorsFactory} to use\n * the default extractors. When reading a new stream, the first {@link Extractor} in the array of\n * extractors created by the factory that returns {@code true} from {@link Extractor#sniff} will be\n * used to extract samples from the input stream.\n *\n * &lt;p&gt;Note that the built-in extractor for FLV streams does not support seeking.\n */\npublic final class ProgressiveMediaSource extends BaseMediaSource\n    implements ProgressiveMediaPeriod.Listener {\n\n\n  /* Factory for creating instances of ProgressiveMediaSource class, using the extractors provided by {DefaultExtractorsFactory}  (OR something else too, idk). */\n  public static final class Factory implements AdsMediaSource.MediaSourceFactory {\n      ...\n      ...\n\n    public Factory(DataSource.Factory dataSourceFactory) {\n      this(dataSourceFactory, new DefaultExtractorsFactory());\n    }\n....\n}\n</code></pre> <p>Some more code:  </p> <pre><code>/**\n * Base {@link MediaSource} implementation to handle parallel reuse and to keep a list of {@link\n * MediaSourceEventListener}s.\n *\n * &lt;p&gt;Whenever an implementing subclass needs to provide a new timeline and/or manifest, it must\n * call {@link #refreshSourceInfo(Timeline, Object)} to notify all listeners.\n */\npublic abstract class BaseMediaSource implements MediaSource {\n\n  private final ArrayList&lt;SourceInfoRefreshListener&gt; sourceInfoListeners;\n  private final MediaSourceEventListener.EventDispatcher eventDispatcher;\n\n  @Nullable private Looper looper;\n  @Nullable private Timeline timeline;\n  @Nullable private Object manifest;\n\n  public BaseMediaSource() {\n    sourceInfoListeners = new ArrayList&lt;&gt;(/* initialCapacity= */ 1);\n    eventDispatcher = new MediaSourceEventListener.EventDispatcher();\n  }\n</code></pre> <p>Even more code:  </p> <pre><code>/**\n * Defines and provides media to be played by an {@link com.google.android.exoplayer2.ExoPlayer}. A\n * MediaSource has two main responsibilities:\n *\n * &lt;ul&gt;\n *   &lt;li&gt;To provide the player with a {@link Timeline} defining the structure of its media, and to\n *       provide a new timeline whenever the structure of the media changes. The MediaSource\n *       provides these timelines by calling {@link SourceInfoRefreshListener#onSourceInfoRefreshed}\n *       on the {@link SourceInfoRefreshListener}s passed to {@link\n *       #prepareSource(SourceInfoRefreshListener, TransferListener)}.\n *   &lt;li&gt;To provide {@link MediaPeriod} instances for the periods in its timeline. MediaPeriods are\n *       obtained by calling {@link #createPeriod(MediaPeriodId, Allocator, long)}, and provide a\n *       way for the player to load and read the media.\n * &lt;/ul&gt;\n *\n * All methods are called on the player's internal playback thread, as described in the {@link\n * com.google.android.exoplayer2.ExoPlayer} Javadoc. They should not be called directly from\n * application code. Instances can be re-used, but only for one {@link\n * com.google.android.exoplayer2.ExoPlayer} instance simultaneously.\n */\npublic interface MediaSource {\n\n  /** Listener for source events. */\n  interface SourceInfoRefreshListener {\n\n    /**\n...\n} \n</code></pre>"},{"location":"tab_notes/android/exoplayer_p1/#exo-resources","title":"exo resources :","text":"<ol> <li> <p>https://android.jlelse.eu/streaming-video-on-android-using-exoplayer-3087d604095 This guy implements basic streaming but has some content that i haven't yet read.  </p> </li> <li> <p>https://medium.com/@pawankgupta.se/live-video-streaming-using-exoplayer-2-x-41cc7f9301d6 basic video rendering using HLS  </p> </li> <li> <p>http://www.tothenew.com/blog/playing-different-videos-with-exo-player-in-android-tv/  basic exoplayer. might have something new.  </p> </li> <li> <p>https://blog.hotstar.com/when-hotstar-met-exoplayer-5b9ea500bd0 : good theory regarding exo  </p> </li> <li> <p>https://github.com/Tubitv/TubiPlayer : tubi player : a player build around exoplayer  </p> </li> </ol>"},{"location":"tab_notes/android/exoplayer_p1/#non-exo-player-resources","title":"non exo player resources","text":"<p>Good article on how video straming woks :   1. https://www.swipetips.com/android-video-streaming-videoview-tutorial/ video view streaming </p> <ol> <li> <p>https://instagram-engineering.com/improving-video-playback-on-android-2f6c6a0058d </p> </li> <li> <p>https://medium.com/@onix_systems/rtmp-protocol-enable-instant-video-streaming-for-android-apps-44cd9de6f339   </p> </li> <li> <p>http://www.tothenew.com/blog/adaptive-video-streaming-hls/ very good theory </p> </li> <li> <p>https://medium.com/p/cddc0b1bf764/responses/show(bad , promotional content, but good theory) </p> </li> <li> <p>https://medium.com/@judeosby/creating-a-video-streaming-app-in-android-using-mvvm-rxjava-pagination-library-and-the-normal-e7b120653d19  (good, practical one with github/open source use cases uses deprecated bvp player )  </p> </li> <li> <p>https://www.streamingmedia.com/Default.aspx website on streaming.  </p> </li> <li> <p>https://imagen.io/resources/what-are-svod-tvod-avod/ : VOD business  </p> </li> <li> <p>jw player : they have implemented everything we want.</p> </li> </ol>"},{"location":"tab_notes/android/mobile_ads_1/","title":"The World of mobile ads (Part1)","text":"<p>Disclaimer: The below article is very crude and mostly a collection of ideas and intutions. I might formalise and verify my guesses someday, but until then, its just a collection of thoughts i felt during working with IMA Ads SDK and some non verified internet comments.</p> <p>After working as an intern for a month, i can't tell you how much am excited to write  about this stuff, its so cool! I can't write the whole article right now, but here are  some parts of it.</p> <ul> <li> <p>data is a trillion doller indusry and ads are the no. 1 source of data, and therefore    ads are the source of revenue for 80% of the businesses.</p> </li> <li> <p>But mobile industry has seen a particular downfall of Ads. people don't like clicking on   ads now. the banner ads in android have been found out to be least clickable areas of an   app in numerous studies . </p> </li> <li> <p>Native ads are the future. Native ads are..<code>todo</code>.................</p> </li> </ul>"},{"location":"tab_notes/android/mobile_ads_1/#how-ima-works-with-a-video-player","title":"How IMA works with a video player?","text":"<p>First we should talk about videos and video view in android . We know that in Android,  a <code>VideoView</code> is a component that  plays video. how it plays videos? well there are 4  types of video rendering, as i see them :  </p> <ul> <li> <p>Static Offline Video Rendering : There is a video on user's device,the player simply    opens an <code>input stream</code> and starts rendering bitstream on a view</p> </li> <li> <p>Static Online Video Rendering : there is a video present on some server, the player   downloads data in small chunks, stores them in cache, play them accordingly and then    clears cache.   It includes many type of fetching and caching techniques and these techniques are    applied to offline static video rendering too, for better results.(Although none of    those optimisation settings are provided by the VideoView in default)</p> </li> <li> <p>Dynamic Offline Video Rendering(or video recording) : video is being rendered as    soon  as input is received from a camera sensor.   This would not be technically called a video \"rendering\", because it is not controllable   to start/pause/forward/reverse the playback. we just press the button to start    recording the rendered bits, i.e at the press of a button, the rendered bits will also   start getting saved to a file.</p> </li> <li> <p>Dynamic online video rendering(or video streaming) : A camera app or software is   present somewhere in a  user's mobile that is uploading image bits at runtime to some    server, which passes it as response to millions of user devices in a fraction of second,   and which these device render immediately . Most video streamer apps provide a rewind    option like youtube, but some do not, like instagram. </p> </li> </ul> <p>There are a lot of components involved in there too : infact, the whole  \"renderer\"  called <code>Media Player</code>  is a different thing which sends bitmaps to a view called  <code>surface view</code> . other things are buffers and buffer sizes, adaptive downloading, network loss handling, cache cleaning,etc.  i will cover these ina seperate article  on video_view and exoplayer respectively.  </p>"},{"location":"tab_notes/android/mobile_ads_1/#back-to-ads","title":"Back to ads","text":"<p>So where were we? yeah, video ads .video Ads are rendered in a unique mechanism : the  most famous video ad sdk is the ima sdk , which will work alongside your video player to play ads like those you see on youtube:  </p> <ul> <li>startroll ads: small ads that plays before the content plays</li> <li>midroll ads  : small ads that play in between the content playback</li> <li>endroll ads  : small ads that play at the end of content playback.</li> <li>ad-list : group of small ads in which consequtive ads starts as soon as the previous ad    ended. can be start/mid/endroll </li> <li>skippable/non skippable ads : long ads, but with/without a skip button, can be    startroll/midroll/enndroll/ad-list. </li> </ul> <p>The playing of an ad on paper looks simple : there is an advideo/ list of advideos,  simply when the video reaches a particular time, pause the video, start playing ads &amp;  then resume the video. But here is when the real stuff begins:</p>"},{"location":"tab_notes/android/mobile_ads_1/#question-1","title":"Question 1","text":"<p>how can a video player be able to change its playing stream in between? suppose it was previously playing a video for 60 seconds and then you wanna show an ad. How can you  change its bitstream that is already loading(as i explained in the point about video  players above)?  </p>"},{"location":"tab_notes/android/mobile_ads_1/#solution","title":"Solution","text":"<p>So that's either not possible or i couldn't find it, but what i found a solution to this  was that Ads are actually displayed over a video_view, not inside it . yes!, the  parent view of your video player view will becomea kind of video player itself and the  surface would use to play ad videos, while your content video remains hidden and paused  into background</p>"},{"location":"tab_notes/android/mobile_ads_1/#question-2","title":"Question 2","text":"<p><code>&lt;some question i had but forgot&gt;</code></p>"},{"location":"tab_notes/android/mobile_ads_1/#solution_1","title":"Solution","text":"<p><code>&lt;some answer i might but forgot&gt;</code></p>"},{"location":"tab_notes/android/mobile_ads_1/#question-3","title":"Question 3","text":"<p>How will streaming of ad work? Will we be loading ads just like we load content video? </p>"},{"location":"tab_notes/android/mobile_ads_1/#solution_2","title":"Solution.","text":"<p>Well, yes, and no. let's look at some ad based terms:</p> <p>VAST(Video Ad Serving Template) TAG is standard response from any server with an ad  video. Sending a req to this vast based server will send you an xml response with url to  the advideo. And your video player can then simply start showing ads immediately or at a  particular time instance of your choice(that is ofcourse if you have a client side code for creating and rendering an ad above current player and fortunely most of it is done by  ima sdk, you just need to implement their partially visible code for that)</p> <p>VMAP (Video Multiple Ad Playlist) : are  list of vast ads but with even more  information like at whatt time each vast ad/ vast ad-group will run. A VMAP based server  will also return an xml having urls of vast tag along with timestamps about which url to  load ad from and at what time. This is also handled by ima sdk and its extensions and we  just need to integrate it</p> <p>VPAID ads are based on a small lie of mine: a VAST ad does not always necessarily  contain video urls but sometimes a js function called vpaid is also present. in web dev,  this function is suppose to run directly on the clients machine and shows ads but it does not seem to work in mobile version of the ima sdk.  </p> <pre><code>So let me come to the topic that should be a little above current content: what are \nadevrtisements? what is google ads? why google has so many ad services ? what is the \ncategory of people that interact with what part of each service? what is IMA? what part \nfrom the company that wants to show ads to a particular app to the company that actually \nmakes those ads to the rendering handling components to the aapps/websites that will be \nshowing ads to the users wathing and clicking ads to the trackers to everyone , \nwho benefit from this.  \n</code></pre> <p>So here , IMA sdk for android fails in mysterious ways:  </p> <ul> <li> <p>\"ima sdk exoplayer-extension for android\" fails because it is very limited    and black boxed. It only works with vmap, handles all the stuff on its own and not even   sends any callbacks.(As per my knowledge) </p> </li> <li> <p>\"ima sdk (library) for android\" is  a little   flexible, allowing both vast tags and handling of vmap but it still won't allow vpaid    ads. these vpaid ads are officially not supported for android sdk, but supported for    html 5 sdk. plus we loose all those optimisation features of exoplayer if that's    acceptable.</p> </li> </ul>"},{"location":"tab_notes/android/basics/af1_the_architecture/","title":"Android Fundamentals : Part 1 ,The architecture","text":"<p><code># Android Fundamentals : Part 2 ,The application components</code></p> <p>So Before getting into advance stuff, i need to get my mind off the basics . These were done by me so long ago, that i have forgotten most of the theory part of it and have got the practical part of it as unconsious reflexes reflex.</p> <p>We write apps in java,kotlin,dart,..etc in many languages. But before even writing, when we create a new project, a lot of stuff gets automatically generated.  </p> <pre><code>So what are these things ? Why are they created? which of those files are necessary? \nWhat is their use? why I get an Appcompat- extended Activity class when beginning an app?\n Why so many xml folders ? what is gradle? How are they all combining to make an apk that \n file? how is this apk being run by my system? how are these apk apps able to interact \n with my hardware, like camera and stuff? How do android maintains contacts, sms , media\n files and other stuff that can be viewed by so many apps? where is the security in it? \n\n Whe-\n</code></pre> <p>phew! Take a break mr curious! They are a hell lot of questions which we will be covering in detail. Let's try covering them part by part.  </p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#architecture","title":"Architecture.","text":"<p>If you ask me How a mobile works, then the most crude defination will simply be \"Power is connected to hardware, firmwares and switches. when pressed a hardware button, the battery starts giving power to firmware having a software bootloader. The bootloader loads the software and then the software controls everything\" (That's pretty much defination of every OS based device system).  </p> <p>So, aside from a little stuff about hardware, bootloader, firmware and circuits, the Software is pretty much the main thing. And that's what Android is: the OS for mobiles. To know more about How this single thing , \"Android OS\" is able to handle everything so gracefully, We have to first learn about its architecture.  </p> <p>A simple analogy will be that of a human: \"How Newton is able to think about gravity?\". Well, his heart pumbed blood to his brain and eyes, his eyes saw apple falling,his nerves send that stimulus to brain, his brain proceeded ...\"and that's how he thought of gravity\" . Even though this is not the right answer, it is technically correct: this was the actual procedure on how any human would think. Te correct answer would be \"He was a skilled man with a great ackquired knowledge, he got tinto a correct interesting environment and automatically got an idea\" .  </p> <p>This is so much like an app! You are not required to understand a deep architecture of OS to make an app, infact you could just have a comfortable environment setup completely by android studio, build everything by modules , generators and libraries and you just pressing the build button. But of you do, you might make a better more optimised app.    </p> <p>So let\u2019s start with this only, What is an architecture?  (Note: This entire article(after the tldr) below is copied from  deepam goel's amazing article , which i cannot explain any better. ) </p> <p>So any software or system is based on some set of components that work together to accomplish some certain task or to perform some specific function. This is a vast topic and without discussing much about it lets see what components Android is made up of and how they all work together to make things happen.  </p> <p>What are Android OS Components? </p> <p>Android OS is based on the stack of 5 main components, viz: 1. System Applications 2. Application Framework 3. Libraries 4. Android Runtime 5. Hardware Abstraction Layer (HAL) 6. Linux Kernel  </p> <p></p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#application","title":"Application","text":"<p>(more info )     These are the application that we all make and use. They reside on the topmost layer of Android Architecture.</p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#application-framework","title":"Application Framework","text":"<p>(more info )      </p> <p>The Application Framework layer provides many higher-level services to applications in the form of Java classes and also contains other APIs. Application developers are allowed to make use of these services in their applications.</p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#libraries","title":"Libraries","text":"<p>(more info )    </p> <p>Above Linux kernel, there is a set of libraries including open-source Web browser engine WebKit, well-known library libc, SQLite database, libraries to play and record audio and video, SSL libraries responsible for Internet security etc. All Java based libraries that are needed for building Android app also resides here.</p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#android-runtime","title":"Android Runtime","text":"<p>(more info ) This portion contains one of the most important components Dalvik Virtual Machine, DVM. This is a kind of JVM that is specially optimized and made for Android. It enables every android app to run its own process which enables us to run many applications at same time. It basically converts .java file into .Dex format.</p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#hardware-abstraction-layer-hal","title":"Hardware Abstraction Layer (HAL)","text":"<p>( more info ) </p> <p>A HAL defines a standard interface for hardware vendors to implement, which enables Android to be agnostic about lower-level driver implementations. Using a HAL allows you to implement functionality without affecting or modifying the higher level system. HAL implementations are packaged into modules and loaded by the Android system at the appropriate time.</p>"},{"location":"tab_notes/android/basics/af1_the_architecture/#linux-kernel","title":"Linux Kernel","text":"<p>(more info )  </p> <p>Kernel is core of any OS. The Linux Kernel sits at the bottom of Android architecture. The Android platform is built on top of the Linux 2.6 Kernel. The Linux Kernel provides support for many features like memory management, security management, process management, and device management etc. It also contains all the driver that helps Android device to communicate with other hardware devices.  </p> <p>Note </p> <p>DVM was officially replaced by Android Run Time, ART in Lollipop version. It has many advantages over DVM. To know more about ART, Check this post .</p> <p>Other references - Ref1 : good look at linux architecture on which android architecture is based upon.  </p> <ul> <li> <p>Ref2 : good link with similar content but in more detail(i also downloaded a pdf of it with name <code>[Android] android_architecture.pdf</code>)  </p> </li> <li> <p>Ref3 : same content in a video.  </p> </li> <li> <p>Ref4: HAL, Ref5 : ART  </p> </li> <li> <p>Ref6 General info about android(added this link because it has got specific more info on other aspects of android like apk, bundles, system updates, etc)  </p> </li> <li> <p>Ref7: video on android Security  </p> </li> <li> <p>Ref8: Linus torvalds on linux</p> </li> </ul>"},{"location":"tab_notes/android/basics/af2_parts_of_an_app/","title":"Android Fundamentals : Parts of an app","text":"<p>In part 1 we got atleast 1 thing figured out: Android OS is a distinctive, layered, linux based OS in which multiple layers are involved to perform an action.</p> <p>As we may remember, in the topmost layer resides softwares called Apps, System Apps and  UserApps. These are super busy chunks of code, as they need to provide an interface of  communication among  user and internal components. They are executable with an extension  as <code>.apk</code> and each Android app lives in its own security sandbox, protected by  Android  security features like: - The Android operating system is a multi-user Linux system in which each app is a    different user.  </p> <ul> <li> <p>By default, the system assigns each app a unique Linux user ID (the ID is used only by    the system and is unknown to the app). The system sets permissions for all the files in    an app so that only the user ID assigned to that app can access them.  </p> </li> <li> <p>Each process has its own virtual machine (VM), so an app's code runs in isolation from    other apps.</p> </li> <li>By default, every app runs in its own Linux process. The Android system starts the    process when any of the app's components need to be executed, and then shuts down the    process when it's no longer needed or when the system must recover memory for other    apps.  </li> </ul> <p>The Android system implements the principle of least privilege. That is, each app, by  default, has access only to the components that it requires to do its work and no more.  This creates a very secure environment in which an app cannot access parts of the system  for which it is not given permission. However, there are ways for an app to share data  with other apps and for an app to access system services:</p> <ul> <li> <p>It's possible to arrange for two apps to share the same Linux user ID, in which case they are able to access each other's files. To conserve system resources, apps with the  same user ID can also arrange to run in the same Linux process and share the same VM.  The apps must also be signed with the same certificate.  </p> </li> <li> <p>An app can request permission to access device data such as the device's location,    camera, and Bluetooth connection. The user has to explicitly grant these permissions.  </p> </li> <li> <p>A app usually have many components. These components are the essential building blocks of an Android app. Each component is an entry point through which the system or a user can enter your app. Some components depend on others.  </p> </li> </ul> <p>There are four different types of app components: - Activities - Services - Broadcast receivers - Content providers  </p> <p>Each type serves a distinct purpose and has a distinct lifecycle that defines how the component is created and destroyed. Let's see what each of them has to offer.</p>"},{"location":"tab_notes/android/basics/pia_intro/","title":"Patterns  in android : Introduction","text":"<p>Okay, I have had enough of this! Since last 2 years of Android dev life , I have been hearing stuff like \"this repo uses MVVM architecture, observer pattern, MVP ,MVC, CLEAN, architecture pattern, repository pattern, pattern,pattern....\" and it goes on and on. I have to work on this someday coz people consider an app's code without these \"Patterns\" as bad, coupled and non expandable. And they are right i considering that, These patterns are important if we wanna right professional softwares. So let's get started.  </p> <p>I am going to follow straight wikipedia for learning about these patterns in general, and then relating them with how much is used in android. I was hoping to write a single all in one article for everything about patterns, but looks like there are a lot of them , so i already changed this article's title to \"Patterns  in android : Introduction\" (indicating a possible sequel) from \"All about Patterns\"(\"indicating an overview\"). For each \"pattern\", i don't know what am going to write, but i would possiby try to add summarized information regarding how could it be addded in an app, possible advantages/disadvantages and use cases. I am also thiking of dedicating seperate articles for adavnce usages,best practises, optimisations and more examples for each pattern, but let's see how long it goes.  </p>"},{"location":"tab_notes/android/basics/pia_intro/#introduction","title":"Introduction","text":"<p>wiki. In software engineering, a Software design pattern or simply a Pattern is a general,reusable solution to a common problem.Note that by defination, design patterns are not direct code but just a description/template , a set of best practises on how to solve a problem that can be used in many different situations.  </p> <p>wiki Architectural patterns are similar to software design patterns but have a broader scope. The architectural patterns address various issues in software engineering, such as computer hardware performance limitations, high availability and minimization of a business risk. Some architectural patterns have been implemented within software frameworks. </p> <p>github link with lots of books Patterns were first defined by Christopher Alexander in 1977-78. These Design patterns were originally grouped into the categories: -  creational patterns, -  structural patterns, and -  behavioral patterns, and described using the concepts of delegation, aggregation, and consultation.  </p>"},{"location":"tab_notes/android/basics/pia_intro/#creational-design-patterns","title":"Creational Design Patterns","text":"Name Description Abstract factory Pattern Provide an interface for creating  families of related or dependent objects without specifying their concrete classes. Builder Pattern Separate the construction of a complex object from its representation, allowing the same construction process to create various representations. Dependency Injection A class accepts the objects it requires from an injector instead of creating(and handling??) the objects directly. Factory method Define an interface for creating a  single object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses Lazy initialization Tactic of delaying the creation of an object, the calculation of a value, or some other expensive process until the first time it is needed. This pattern appears in the GoF catalog as \"virtual proxy\", an implementation strategy for the Proxy pattern. Multiton Ensure a class has only named instances, and provide a global point of access to them Object pool Avoid expensive acquisition and release of resources by recycling objects that are no longer in use. Can be considered a generalisation of connection pool and thread pool patterns. Prototype Specify the kinds of objects to create using a prototypical instance, and create new objects from the 'skeleton' of an existing object, thus boosting performance and keeping memory footprints to a minimum. Resource acquisition is initialization (RAII) Ensure that resources are properly released by tying them to the lifespan of suitable objects. Singleton Ensure a class has only one instance, and provide a global point of access to it"},{"location":"tab_notes/android/basics/pia_intro/#structural-patterns","title":"Structural patterns","text":"Name Description Adapter, Wrapper, or Translator Convert the interface of a class into another interface clients expect. An adapter lets classes work together that could not otherwise because of incompatible interfaces. The enterprise integration pattern equivalent is the translator Bridge Decouple an abstraction from its implementation allowing the two to vary independently. Composite Compose objects into tree structures to represent part-whole hierarchies. Composite lets clients treat individual objects and compositions of objects uniformly. Decorator Attach additional responsibilities to an object dynamically keeping the same interface. Decorators provide a flexible alternative to subclassing for extending functionality. Extension Object Adding functionality to a hierarchy without changing the hierarchy. Facade Provide a unified interface to a set of interfaces in a subsystem. Facade defines a higher-level interface that makes the subsystem easier to use. Flyweight Use sharing to support large numbers of similar objects efficiently Front Controller The pattern relates to the design of Web applications. It provides a centralized entry point for handling requests. Marker Empty interface to associate metadata with a class. Module Group several related elements, such as classes, singletons, methods, globally used, into a single conceptual entity Proxy Provide a surrogate or placeholder for another object to control access to it. Twin Twin allows modeling of multiple inheritance in programming languages that do not support this feature."},{"location":"tab_notes/android/basics/pia_intro/#behavioral-patterns","title":"Behavioral Patterns","text":"Name Description Blackboard/Blackboard System Artificial intelligence pattern for combining disparate sources of data (see blackboard system) Chain of responsibility Avoid coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. Chain the receiving objects and pass the request along the chain until an object handles it. Command Encapsulate a request as an object, thereby allowing for the parameterization of clients with different requests, and the queuing or logging of requests. It also allows for the support of undoable operations. Interpreter Given a language, define a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language. Iterator Provide a way to access the elements of an aggregate object sequentially without exposing its underlying representation Mediator Define an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it allows their interaction to vary independently. Memento Without violating encapsulation, capture and externalize an object's internal state allowing the object to be restored to this state later. Null Object Avoid null references by providing a default object. Observer or Publisher-Subscriber pattern Define a one-to-many dependency between objects where a state change in one object results in all its dependents being notified and updated automatically Servant/Utility class Pattern Define common functionality for a group of classes. The servant pattern is also frequently called helper class or utility class implementation for a given set of classes. The helper classes generally have no objects hence they have all static methods that act upon different kinds of class objects Specification Recombinable business logic in a Boolean fashion. State Allow an object to alter its behavior when its internal state changes. The object will appear to change its class. Strategy Define a family of algorithms, encapsulate each one, and make them interchangeable. Strategy lets the algorithm vary independently from clients that use it Template method Define the skeleton of an algorithm in an operation, deferring some steps to subclasses. Template method lets subclasses redefine certain steps of an algorithm without changing the algorithm's structure Visitor Represent an operation to be performed on the elements of an object structure. Visitor lets a new operation be defined without changing the classes of the elements on which it operates"},{"location":"tab_notes/android/basics/pia_intro/#concurrency-patterns","title":"Concurrency Patterns","text":"Name Description Active Object Decouples method execution from method invocation that reside in their own thread of control. The goal is to introduce concurrency, by using asynchronous method invocation and a scheduler for handling requests Balking Only execute an action on an object when the object is in a particular state. Binding Properties Combining multiple observers to force properties in different objects to be synchronized or coordinated in some way. Compute kernel The same calculation many times in parallel, differing by integer parameters used with non-branching pointer math into shared arrays, such as GPU-optimized Matrix multiplication or Convolutional neural network. Double-checked locking Reduce the overhead of acquiring a lock by first testing the locking criterion (the 'lock hint') in an unsafe manner; only if that succeeds does the actual locking logic proceed. Can be unsafe when implemented in some language/hardware combinations. It can therefore sometimes be considered an anti-pattern. Event-based Asynchronous Addresses problems with the asynchronous pattern that occur in multithreaded programs Guarded Suspension Manages operations that require both a lock to be acquired and a precondition to be satisfied before the operation can be executed Join Join-pattern provides a way to write concurrent, parallel and distributed programs by message passing. Compared to the use of threads and locks, this is a high-level programming model. Lock One thread puts a \"lock\" on a resource, preventing other threads from accessing or modifying it Messaging design Pattern(MDP) Allows the interchange of information (i.e. messages) between components and applications. Monitor Object An object whose methods are subject to mutual exclusion, thus preventing multiple objects from erroneously trying to use it at the same time. Reactor A reactor object provides an asynchronous interface to resources that must be handled synchronously. Read-Write Lock Allows concurrent read access to an object, but requires exclusive access for write operations. Scheduler Explicitly control when threads may execute single-threaded code. Thread Pool A number of threads are created to perform a number of tasks, which are usually organized in a queue. Typically, there are many more tasks than threads. Can be considered a special case of the object pool pattern. Thread speciefic storage Static or \"global\" memory local to a thread. <p>Other than these design pattern, there are architeture patterns, which, as we said earlier cover a broader scope than a design pattern. They are meant to be best practises for whole product or module, So they often encapsulates multiple design patterns. Their are many architecture patterns out there based onthe domains  it is being used, wiki covers them in great detail.  </p> <p>Personally I would rather have a new entry being added to this table in Domain named \"Application Design and Development\" with Architecture patterns like: - MV* Family(MVP/MVC/MVVM/MVI/CLEAN) - JetPack's Navigation Architecture And lifecycle classes - Kotlin's coroutie pattern - The Repository pattern - Reactive, offline first app pattern </p> <p>The same book documents patterns based on following nomenclature:  </p> <ul> <li>Pattern Name and Classification: A descriptive and unique name that helps in identifying and referring to the pattern.  </li> <li>Intent: A description of the goal behind the pattern and the reason for using it.  </li> <li>Also Known As: Other names for the pattern.  </li> <li>Motivation (Forces) : A scenario consisting of a problem and a context in which this pattern can be used.  </li> <li>Applicability: Situations in which this pattern is usable; the context for the pattern.  </li> <li>Structure: A graphical representation of the pattern. Class diagrams and Interaction diagrams may be used for this purpose.  </li> <li>Participants: A listing of the classes and objects used in the pattern and their roles in the design.  </li> <li>Collaboration: A description of how classes and objects used in the pattern interact with each other.  </li> <li>Consequences: A description of the results, side effects, and trade offs caused by using the pattern.  </li> <li>Implementation: A description of an implementation of the pattern; the solution part of the pattern.  </li> <li>Sample Code: An illustration of how the pattern can be used in a programming language.  </li> <li>Known Uses: Examples of real usages of the pattern.  </li> <li>Related Patterns: Other patterns that have some relationship with the pattern; discussion of the differences between the pattern and similar patterns.  </li> </ul> <p>i will be covering them in this manner only.  </p> <p>Ciao  </p>"},{"location":"tab_notes/android/networking/image_load_overview/","title":"Networking Basics : Image Loading","text":"<p>As we saw in networking , there are a no. of concepts involved, like downloading the reponse , parsing reponse handling background thread, keeping this object alive, etc.  </p> <p>Image downloading is similar , except the fact that use case of image are a lot.  </p> <ul> <li>Image could be used as background and needs to be loaded as fast as possible</li> <li>Image could be used in list as profile pic or contact imagge, and needs to be loaded on demand/ on click + cached so that multiple network calls does not happen  </li> <li> <p>Shimmer/Loading Blur/placeholder effect could be expected from images while being loaded   </p> </li> <li> <p>gif support could be required  </p> </li> <li>transformations like streching the image, contracting the image, resizing the image, rotation of image, cropping of image, etc could be expected from the downloader.  </li> <li>and many more.  </li> </ul> <p>The natie code for a basic image loading is again large, but simple. However the implicity is limited to that only. For anything advance, the code grows and gets more complicated/inefficient. That's where Libraries thrive.  There are many libraries, but I have used only Glide and Picasso for most of my needs. you can check this link  for more info.  </p> <p>Let's check some of them.  </p>"},{"location":"tab_notes/android/networking/image_load_overview/#glide","title":"Glide","text":"<p>Glide is developed by bumptech and its one of the most popular mage library out there, i mean you can not expect less from a product recommended by Google, its currently in version 4.0.0. Glide is about 476 kb in size and has a method count of 2879.  </p> <p>To use it you will have to add the this your project dependency:  </p> <pre><code>compile 'com.github.bumptech.glide:glide:3.7.0'\n</code></pre> <p>Getting started with glide is as easy as follows  </p> <pre><code>Glide\n    .with(mContext)\n    .load(img_url)\n    .centerCrop()\n    .placeholder(R.drawable.loading_spinner)\n    .into(mImageView);\n</code></pre> <p>Additional configuration for glide:  </p> <pre><code>.error(Image_uri); this is the image shown in case of error\n.fitcenter(); this makes the image to be centered in the imageView\n.centerCrop()\n.fades()\n.transform()\n.fetch()\n</code></pre> <p>Pros </p> <ul> <li>Very easy to use.  </li> <li>it support gif loading.  </li> <li>it requires little configuration.  </li> <li>its been actively maintained.  </li> <li>it download image with the Size of the view been loaded into, this will reduce time and computation required to display the image.  </li> </ul> <p>Cons </p> <ul> <li>its kind of large in terms of size and memory.  </li> <li>it requires large amount of caching space cause it saves different sizes of image separately.  </li> </ul>"},{"location":"tab_notes/android/networking/image_load_overview/#picasso","title":"Picasso","text":"<p>Picasso is named after the Spanish artist Pablo Picasso and its developed by square. its uses Fluent Api just like Glide, this library is not only powerful and fast but also very light in weight, its 121 kb in size with a total method count of 849. its currently in it version 2.5.2.  </p> <p>To use Picasso in your project add the this to your dependency <pre><code>compile 'com.squareup.picasso:picasso:2.5.2'\n</code></pre></p> <p>Using Picasso is very easy too  </p> <pre><code>Picasso\n   .with(mContext)\n   .load(img_url)//insert the image url\n   .placeholder(R.drawable.user_image)\n   .into(mImageView);\n</code></pre> <p>Additional configurations  </p> <pre><code>.rotate(float degree)\n.resize(int height,int breath)\n.fade()\n.transform(Transformation trans)\n.centerCrop\n.fit()\n</code></pre> <p>Pros </p> <ul> <li>Small size and method count</li> <li>very easy to use</li> <li>little configuration to set up</li> <li>very easy to configure with the builder class  </li> </ul> <p>Cons </p> <ul> <li>it cannot load gif  </li> <li>it cannot be used to load a very large file  </li> <li>it download and cache the the original image which will be re-sized to the view its been loaded to, this is an additonal computation at display time.  </li> </ul>"},{"location":"tab_notes/android/networking/image_load_overview/#fresco","title":"Fresco","text":"<p>This is developed by Facebook, its built to present the best optimization for image loading and processing, when you have over one billion user to tend to, you cant possibly settle for less. As the popular adage has it \u201cwith greater power comes greater resposibility\u201d, Fresco is freaking 1.6mb and has a method count of 5714 thats huge if you are working against the 64k method count.  </p> <p>Getting started with Fresco <pre><code>compile 'com.facebook.fresco:fresco:1.3.0'\n</code></pre></p> <p>You will use the custom view SimpleDraweeView instead of imageView  </p> <pre><code>&lt;com.facebook.drawee.view.SimpleDraweeView\n    android:id=\"@+id/my_image_view\"\n    android:layout_width=\"130dp\"\n    android:layout_height=\"130dp\"\n    fresco:placeholderImage=\"@drawable/my_drawable\"\n  /&gt;\n</code></pre> <p>Then you just specify the image url:  </p> <pre><code>Uri uri = Uri.parse(image_url);\ndraweeView = (SimpleDraweeView) findViewById(R.id.my_image_view);\ndraweeView.setImageURI(uri);\n</code></pre> <p>pros </p> <ul> <li>its has a custom view for its configuration, which makes it very easy to use  </li> <li>its well optimized in terms of memory usage and allocation  </li> <li>its has a lot of configuration option  </li> <li>its has a very verbose documentation  </li> <li>its easy to configure  </li> <li>its load progressive JPEG,webP, gif  </li> <li>it does not require alot configuration to get started  </li> </ul> <p>Cons </p> <ul> <li>its very large  </li> <li>its documentation are kind of complicated   </li> </ul>"},{"location":"tab_notes/android/networking/image_load_overview/#extras","title":"Extras:","text":"<p>Resources </p> <ul> <li>Glide </li> <li>Picasso </li> <li>Getting Started with Fresco </li> <li>this article i heavily copy from </li> <li>This SO post on glide vs frseco vs picasso vs... everything.  </li> <li>Other libs</li> </ul> <p>Other Notable Libraries </p> <ul> <li>Universal Image Loader </li> <li>Ion image loader </li> <li>Volley Image loader</li> </ul>"},{"location":"tab_notes/android/networking/networking_get_post_basics/","title":"Networking Basics : Making a Get Post Connection(Theory)","text":"<p>Networking would refer to the use of internet inside an app. There could be a million and 1 way to be using internet in an app: your app could be a chat app for sending/receiving messages , reddit like social media app, instagram like pictures app, or even a feed app like google news app. During network transmissions,  there are many things that need to be kept in mind : paging, caching, asynchronous loading and transmission,  realtime ui updates,etc  </p> <p>So let\u2019s start from the very basics.  </p> <p>chek this out : https://guides.codepath.com/android#networking-and-models  </p>"},{"location":"tab_notes/android/networking/networking_get_post_basics/#1-adding-permissions","title":"1.   Adding permissions.","text":"<p>We have to add the following permission to allow our app to receive and send data via a network connection:</p> <p><pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n&lt;uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /&gt;\n</code></pre> The second permission is to check weather the user\u2019s device is connected to a network or not. Since both permissions are safe and not dangerous, we do not need to provide a runtime check</p>"},{"location":"tab_notes/android/networking/networking_get_post_basics/#2-checking-the-connection","title":"2. Checking the connection.","text":"<p>Here comes the code part. We have to first check weather our system is connected to the internet a Network. For this, we use the following piece of code: <pre><code>private boolean isConnectedToMobileDataOrWify(){ \n     ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n     NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\n     return\n              networkInfo != null &amp;&amp;\n              networkInfo.isConnected() &amp;&amp;\n                        (networkInfo.getType() == ConnectivityManager.TYPE_WIFI || networkInfo.getType() == ConnectivityManager.TYPE_MOBILE);\n    }\n</code></pre> ( We would be later using A decoupled asynctask, therefore it would be eventually broken and used in a different manner.)</p> <p>Note that this specifically refers to a network type of Wify or Mobile. There DOES exist other types of network, specifically:  </p> Type,value type,value (psfi) TYPE_NONE = -1; (psfi) TYPE_MOBILE = 0; (psfi) TYPE_WIFI = 1; (psfi) TYPE_MOBILE_MMS = 2; (psfi) TYPE_MOBILE_SUPL = 3; (psfi) TYPE_MOBILE_DUN = 4; (psfi) TYPE_MOBILE_HIPRI = 5; (psfi) TYPE_WIMAX = 6; (psfi) TYPE_BLUETOOTH = 7; (psfi) TYPE_DUMMY = 8; (psfi) TYPE_MOBILE_FOTA = 10; (psfi) TYPE_MOBILE_IMS = 11; (psfi) TYPE_MOBILE_CBS = 12; (psfi) TYPE_WIFI_P2P = 13; (psfi) TYPE_MOBILE_IA = 14; (psfi) TYPE_MOBILE_EMERGENCY = 15; (psfi) TYPE_PROXY = 16; (psfi) TYPE_VPN = 17; (psfi) TYPE_ETHERNET = 9; <p>Update: usage of these integers is deprecated. Now, <code>networkCapabilitiesObj.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)</code>;Or <code>connectivityManager.requestNetwork(networkRequestObj,networkCallbackObj)</code> is used.</p>"},{"location":"tab_notes/android/networking/networking_get_post_basics/#3-making-a-connectiontheory","title":"3.  Making a connection(Theory)","text":"<p>Next we would be establishing a connection. Before we establish a connection, one thing should be pretty clear:  </p> <p>Danger</p> <p>All the network fetching / uploading / other network related tasks should be performed on a separate thread. </p> <p>The ui operations would obviously be performed on the ui thread , therefore we use a Threadsafe Asynctask(  An Asynctask created in a headless fragment along with callbacks to prevent leaking ) which could perform a network task and safely update ui for task progress and later, task completion.  </p> <p>There are some other concepts in regard to a network task:  </p> <p>Http Connection: HttpURLConnection is the official Android Api   for creating an http connection In android.According to   geeksforgeeks, The \u201cHypertext Transfer Protocol (HTTP) is an   application-level protocol that uses TCP as an underlying   transport and typically runs on port 80. HTTP is a stateless    protocol i.e. server maintains no information about past client    requests.\u201d   </p> <p>This hidden link has    a lot of info regarding different functions and features of   HttpConnection class.  </p> <p>Get and Post(): something about security, blah blah blah. Would look into networking someday. Not important in android  development.  </p> <p>From what I know from my app dev experience in claro, both <code>get()</code> and <code>post()</code> request is like calling a server and demanding a response. Our calling method would contain a custom query(like  google.com?q=animal where \u201canimal\u201d is a search result we want). Both  methods  will give us a json or XML response against the query . - In <code>get()</code> ,the request to server itself contains queries like  </p> <p><code>https://api.stackexchange.com/2.2/questions?pagesize=5&amp;order=desc&amp;sort=activity&amp;site=stackoverflow\"</code> </p> <ul> <li>In <code>post()</code>, we have to pass queries alongside the request to  server in a json string. This json string is hidden inside a <code>requestBody</code> obj. libraries like okhttp help create and  pass  these json string alongside request in a very simple way, like <code>request.putString(\u201cpagesize\u201d,\u201d5\u201d)</code> or  <code>putString(\u201cemail\u201d,\u201cansh@example.com\u201d)</code>. in native http way, we have  to perform a lot of steps for such thing , like adding it to  outputstream\u2019s buffer, creating aurl encoded string, etc.  </li> </ul> <p>This reason for this distinguishment is most probably the security  issues. I guess the code behind checking the <code>get</code> request is either  very small or none at all. But in case of <code>post</code> request there might  be some encoding decoding algorithms involved. If you ask a web dev,  they would simply say \"get me to url me hi sbkuch pass hota hai, to  isse passwords leak hone ka khatra hai but post chhipa rehega to no  khatra\".  </p>"},{"location":"tab_notes/android/networking/networking_get_post_basics/#4-making-a-connection-codeto-be-continued","title":"4. Making a Connection (Code)(to be continued)","text":"<p>The above was the the set of general and commone things that are needed in making a get/post connection.  Next we will be seeing the code for it. Now before heading to code, there is a thing to handle threads. Now, threads cause a lot of memory and context leaks which needs to be handled. So we will be seeing the native code for doing this(which handles problem of thread leakage using Threadsafe asynctasks enclosed in Fragments ) and then we will be seeing Libraries made for performing get/post requests which i don't know how or weather they are handling these or not.</p>"},{"location":"tab_notes/android/networking/networking_get_post_gson/","title":"Networking Basics : Making a Get Post Connection(gson)","text":"<p>This article is not actually about downloading a response, but rather how to convert it into meaningful form  In the previous articles, we saw how data can be downloaded as a response string . When we say \"reponse string\", we mean something like this:  </p> <pre><code>{\n  \"items\": [\n    {\n      \"owner\": {\n        \"reputation\": 36476,\n        \"user_id\": 7207392,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 73,\n        \"profile_image\": \"https://www.gravatar.com/avatar/dadc9567dde5f02b09a29695eca1ce40?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"Paul Panzer\",\n        \"link\": \"https://stackoverflow.com/users/7207392/paul-panzer\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568059,\n      \"last_edit_date\": 1570568059,\n      \"creation_date\": 1570566735,\n      \"answer_id\": 58293716,\n      \"question_id\": 58292546\n    },\n    {\n      \"owner\": {\n        \"reputation\": 21,\n        \"user_id\": 12165300,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://www.gravatar.com/avatar/05ad0547978cace7429e947736861196?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"rsomji\",\n        \"link\": \"https://stackoverflow.com/users/12165300/rsomji\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568055,\n      \"creation_date\": 1570568055,\n      \"answer_id\": 58293951,\n      \"question_id\": 58289314\n    },\n    {\n      \"owner\": {\n        \"reputation\": 1982,\n        \"user_id\": 2042457,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 56,\n        \"profile_image\": \"https://i.stack.imgur.com/xQVEN.jpg?s=128&amp;g=1\",\n        \"display_name\": \"aksappy\",\n        \"link\": \"https://stackoverflow.com/users/2042457/aksappy\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568054,\n      \"creation_date\": 1570568054,\n      \"answer_id\": 58293950,\n      \"question_id\": 58290873\n    },\n    {\n      \"owner\": {\n        \"reputation\": 472124,\n        \"user_id\": 1491895,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 69,\n        \"profile_image\": \"https://www.gravatar.com/avatar/82f9e178a16364bf561d0ed4da09a35d?s=128&amp;d=identicon&amp;r=PG\",\n        \"display_name\": \"Barmar\",\n        \"link\": \"https://stackoverflow.com/users/1491895/barmar\"\n      },\n      \"is_accepted\": true,\n      \"score\": 1,\n      \"last_activity_date\": 1570568051,\n      \"last_edit_date\": 1570568051,\n      \"creation_date\": 1570514725,\n      \"answer_id\": 58280936,\n      \"question_id\": 58280903\n    },\n    {\n      \"owner\": {\n        \"reputation\": 220,\n        \"user_id\": 11601996,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://www.gravatar.com/avatar/51c452c987f2541f3c4d661a80359878?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"Peter Li\",\n        \"link\": \"https://stackoverflow.com/users/11601996/peter-li\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568046,\n      \"creation_date\": 1570568046,\n      \"answer_id\": 58293947,\n      \"question_id\": 58264206\n    }\n  ],\n  \"has_more\": true,\n  \"backoff\": 10,\n  \"quota_max\": 10000,\n  \"quota_remaining\": 9995\n}\n</code></pre> <p>To make it useful, we must convert it into some form of object or object list via a parser. Here is when  GSON comes useful. Now before diving straight into gson, let's see how we would have done in native code:  </p> <pre><code>public class  RvAdapterData{\n    String questionText,url;\n    public RvAdapterData(String questionText, String url) {  /*..*/} /*..*/    \n}\nprivate ArrayList&lt;RvAdapterData&gt; convertJSONToAdapterDataList(String responseString) {\n    ArrayList&lt;RvAdapterData&gt; result= new ArrayList();\n    try {\n        JSONObject root = new JSONObject(responseString);\n        JSONArray itemsArr= root.getJSONArray(\"Items\");\n\n        for (int i=0;i&lt;itemsArr.length();i++){\n            JSONObject item= itemsArr.getJSONObject(i);\n            String questionText= item.getString(\"title\");\n            String url= item.getString(\"link\");\n\n            RvAdapterData data = new RvAdapterData(questionText, url);\n            result.add(data);\n        }\n        String serverResponse = root.getString(\"val\");\n    }\n    catch (JSONException e) {\n        e.printStackTrace();\n    }\n    return  result;\n}\n</code></pre> <p>There could be a chance that you might mistake in passing the correct keys in <code>getJsonObject()</code> or <code>getString()</code>. I personally use http://www.jsonschema2pojo.org to first convert my json to a set of java files and then write the above code. I do not like GSON library, it so easy to use that site, we could get a pojo in just a few checkboxes clicked(although, be very careful with that, the pojo is not generated if some checks are wrong)  </p> <p>You can check more about  How GSON simplifies the process of json parsing here: https://guides.codepath.com/android/leveraging-the-gson-library </p>"},{"location":"tab_notes/android/networking/networking_get_post_native/","title":"Networking Basics : Making a Get Post Connection(Native Way)","text":"<p>In the 1st article of Networking series we, discussed the different terminologies related to networking in Android, along with some basic steps. As per 1st article, - We need Internet and access network Permissions for creating a connection - We might need to check for Internet availability  before  making a    connection and during the data transfer(usually handled automatically) refer 1st article</p> <p>So let's see how we can use Native HttpConnection libaries to make a connection. We would be creating an http connection inside an asynctask(a nice version of thread that handles supplying progress updates on the main thread)whose object would be handled by headless fragment (very nice article) , in order to prevent network from failing on configuration change. you can handle that in a service as well, but the main file remains the Downloader task , the callback class , and the Response Class.  </p>"},{"location":"tab_notes/android/networking/networking_get_post_native/#the-result-class","title":"The Result Class","text":"<p>The Result class is the final encapsulation of reponse received. When data is recieved by the user's device, it is in the form of a stream of bits. The Java's Inputstream class is either able to fetch that input stream or throws some relevent exception .  </p> <p>The downloader will either Convert that stream to string and put it in this class's Object or take the exception and put it in this class's Object and return this class's Object (Too much repeatitio, I know :/). <pre><code>class Result {\n    String resultValue;\n    Exception exception;\n    Result(String resultValue) {\n        this.resultValue = resultValue;\n    }\n    Result(Exception exception) {\n        this.exception = exception;\n    }\n}\n</code></pre></p>"},{"location":"tab_notes/android/networking/networking_get_post_native/#the-download-listener-and-progress-interface","title":"The Download Listener and Progress interface.","text":"<p>The download listener is a listener implemented by Activity and used by the Downloader for communication. The downloader would push updates to this interface's object  regarding downloading started, progress updates, errors ,etc.  </p> <pre><code>public interface DownloadListener&lt;T&gt; {\n    interface Progress {\n        int ERROR = -1;\n        int CONNECT_SUCCESS = 0;\n        int GET_INPUT_STREAM_SUCCESS = 1;\n        int PROCESS_INPUT_STREAM_IN_PROGRESS = 2;\n        int PROCESS_INPUT_STREAM_SUCCESS = 3;\n    }\n\n    void updateFromDownloader(@Nullable Result result);\n    NetworkInfo getActiveNetworkInfo();\n    void onProgressUpdate(int progressCode, int percentComplete);//todo define a way for showing partial updated\n    void onDownloadingFinished(@Nullable Result result);\n\n}\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_native/#the-downloader-asynctask","title":"The Downloader Asynctask","text":"<p>The downloader Asynctask is the main Downloading Body here . It downloads the response from an api as input stream, converts it to a <code>Result</code> class's object and returns the result using <code>Download Listener</code>'s object.</p> <pre><code>public class DownloadTask extends AsyncTask&lt;String, Integer, Result&gt; {\n\n    private DownloadListener&lt;String&gt; downloadListener;\n\n    DownloadTask(DownloadListener&lt;String&gt; downloadListener) {\n        setDownloadListener(downloadListener);\n    }\n    private void setDownloadListener(DownloadListener&lt;String&gt; downloadListener) {\n        this.downloadListener = downloadListener;\n    }\n\n    @Override\n    protected void onPreExecute() {\n        if (downloadListener != null) {\n            NetworkInfo networkInfo = downloadListener.getActiveNetworkInfo();\n            if (networkInfo == null || !networkInfo.isConnected() ||\n                    (networkInfo.getType() != ConnectivityManager.TYPE_WIFI &amp;&amp;\n                            networkInfo.getType() != ConnectivityManager.TYPE_MOBILE)) {\n\n                downloadListener.updateFromDownloader(null);\n                cancel(true);\n            }\n        }\n    }\n\n    @Override\n    protected Result doInBackground(String... urls) {\n        Result result = null;\n        if (!isCancelled() &amp;&amp; urls != null &amp;&amp; urls.length &gt; 0) {\n            String urlString = urls[0];\n            try {\n                URL url = new URL(urlString);\n                String resultString = downloadUrl(url);\n                if (resultString != null) {\n                    result = new Result(resultString);\n                } else {\n                    throw new IOException(\"No response received.\");\n                }\n            } catch(Exception e) {\n                result = new Result(e);\n            }\n        }\n        downloadListener.updateFromDownloader(result);\n        return result;\n    }\n    private String downloadUrl(URL url) throws IOException {\n        InputStream stream = null;\n        HttpsURLConnection connection = null;\n        String result = null;\n        try {\n            connection = (HttpsURLConnection) url.openConnection();\n            connection.setReadTimeout(30000);\n            connection.setConnectTimeout(30000);\n            connection.setRequestMethod(\"GET\");\n            connection.setDoInput(true);\n            connection.connect();\n            publishProgress(DownloadListener.Progress.CONNECT_SUCCESS);\n            int responseCode = connection.getResponseCode();\n            if (responseCode != HttpsURLConnection.HTTP_OK) {\n                throw new IOException(\"HTTP error code: \" + responseCode);\n            }\n            stream = connection.getInputStream();\n            publishProgress(DownloadListener.Progress.GET_INPUT_STREAM_SUCCESS, 0);\n            if (stream != null) {\n                result = readStream(stream);\n            }\n        } finally {\n            if (stream != null) {\n                stream.close();\n            }\n            if (connection != null) {\n                connection.disconnect();\n            }\n        }\n        return result;\n    }\n    private String readStream(InputStream stream) throws IOException {\n        int maxReadSize=500;\n        Reader reader;\n        reader = new InputStreamReader(stream, StandardCharsets.UTF_8);\n        char[] rawBuffer = new char[maxReadSize];\n        int readSize;\n        StringBuilder buffer = new StringBuilder();\n        while (((readSize = reader.read(rawBuffer)) != -1) &amp;&amp; maxReadSize &gt; 0) {\n            if (readSize &gt; maxReadSize) {\n                readSize = maxReadSize;\n            }\n            buffer.append(rawBuffer, 0, readSize);\n            maxReadSize -= readSize;\n        }\n        return buffer.toString();\n\n        //for bitmap\n        //InputStream inputStream = null;\n        //...\n        //Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\n        //ImageView imageView = (ImageView) findViewById(R.id.image_view);\n        //imageView.setImageBitmap(bitmap);\n\n    }\n\n    @Override\n    protected void onPostExecute(Result result) {\n        if (result != null &amp;&amp; downloadListener != null) {\n            downloadListener.onDownloadingFinished(result);\n        }\n    }\n\n\n    @Override\n    protected void onProgressUpdate(Integer... values) {\n        super.onProgressUpdate(values);\n        //downloadListener.onProgressUpdate(int progressCode, int percentComplete);\n        // ^ todo define a way for showing partial updated\n    }\n\n    @Override\n    protected void onCancelled() {\n        super.onCancelled();\n    }\n}\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_native/#the-network-fragment","title":"The Network Fragment","text":"<p>This is the main Fragment that will be handling Downloader's Instance and preventing it from getting killed on changes like activity pausing or Screen getting rotated. It is not as permanent solution as that of a forgeround service(forground, because background service is now deprecated), which could run even if activity is destroyed, but it is still a hard core solution for downloading without worrying about configuration changes or screen lock or pause/play stuff .  More about Headless fragment is discussed here . </p> <pre><code>public class NetworkFragment2 extends Fragment {\n    private static final String TAG = \"NetworkFragment\";\n    private static final String URL_KEY = \"UrlKey\";\n\n    private @Nullable DownloadListener&lt;String&gt; downloadListener;\n    private DownloadTask downloadTask;\n    private String urlString;\n\n    static NetworkFragment2 getInstance(FragmentManager fragmentManager, String url) {\n        NetworkFragment2 networkFragment = new NetworkFragment2();\n        Bundle args = new Bundle();\n        args.putString(URL_KEY, url);\n        networkFragment.setArguments(args);\n        fragmentManager.beginTransaction().add(networkFragment, TAG).commit();\n        return networkFragment;\n    }\n\n    @Override\n    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        if (getArguments() != null) {\n            urlString = getArguments().getString(URL_KEY);\n        }\n    }\n\n    @Override\n    public void onAttach(@NonNull Context context) {\n        super.onAttach(context);\n        downloadListener = (DownloadListener&lt;String&gt;) context;\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        downloadListener = null;\n    }\n\n    @Override\n    public void onDestroy() {\n        cancelDownload();\n        super.onDestroy();\n    }\n    void startDownload() {\n        cancelDownload();\n        downloadTask = new DownloadTask(downloadListener);\n        downloadTask.execute(urlString);\n    }\n    void cancelDownload() {\n        if (downloadTask != null) {\n            downloadTask.cancel(true);\n        }\n    }\n\n}\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_native/#the-activity-class","title":"The Activity class","text":"<p>finally the activity class. We simply create an instance of network fragment(which automatically attaches itself to our activity) and implement the downloadlistener callback.  </p> <pre><code>public class MainActivity extends AppCompatActivity implements DownloadListener&lt;String&gt; {\n\n    private NetworkFragment2 networkFragment;\n    private boolean isDownloading = false;\n\n    TextView tvText;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        //tvText = findViewById(R.id.tv_text);\n\n        String api = \"http://a.vdo.ai/core/ir24/ads_vmap.php\";\n        networkFragment = NetworkFragment2.getInstance(getSupportFragmentManager(), api);\n        //NetworkFragment2.DownloadListener&lt;String&gt; listener = getNetWorkListener();\n                //can't do above  thing. in this method, we are creating a fragment that\n                // gets attached to our view, so our view must have those methods defined already,\n                // and it will call those methods when needed. We will rather just press \n                //start here or in onStart and let fragment call them on its own\n\n        startConnection();\n    }\n    private void startConnection() {\n        if (!isDownloading &amp;&amp; networkFragment != null) {\n            // Execute the async download.\n            networkFragment.startDownload();\n            isDownloading = true;\n        }\n    }\n\n    //-----------------------funcs called by fragment's callbacks-----------------------------------\n\n    @Override\n    public void updateFromDownloader(Result result) {\n        updateUiFromResult(result);\n    }\n    private void updateUiFromResult(Result result) {\n        if (result.exception != null) {\n            tvText.setText(\"ErrorOccurred!\" + result.exception.getMessage());\n        } else if (result.resultValue != null) {\n            tvText.setText(result.resultValue);\n\n        }\n    }\n\n    @Override\n    public NetworkInfo getActiveNetworkInfo() {\n        ConnectivityManager connectivityManager =\n                (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n        if (connectivityManager != null) {\n            NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n            return networkInfo;\n        }\n        return null;\n    }\n\n    @Override\n    public void onProgressUpdate(int progressCode, int percentComplete) {\n        updateUiWithDownloaderMetaData(progressCode, percentComplete);\n\n    }\n    private void updateUiWithDownloaderMetaData(int progressCode, int percentComplete) {\n        switch (progressCode) {\n            // You can add UI behavior for progress updates here.\n            // its not being handled in fragment. its like we assumed there is a pipe with flowing\n            // water and we attached our  nozel to it, but there is no one sending water to this\n            // pipe. no code is sending updates , so these will never be called.\n            case Progress.ERROR:\n                tvText.append(\"\\n==================================\\nERROR_HAPPENED\");\n                break;\n            case Progress.CONNECT_SUCCESS:\n                tvText.append(\"\\n==================================\\nCONNECT_SUCCESS\");\n\n                break;\n            case Progress.GET_INPUT_STREAM_SUCCESS:\n                tvText.append(\"\\n==================================\\nGET_INPUT_STREAM_SUCCESS\");\n                break;\n            case Progress.PROCESS_INPUT_STREAM_IN_PROGRESS:\n                tvText.append(\"\\n==================================\\nPROCESS_INPUT_STREAM_IN_PROGRESS\");\n                break;\n            case Progress.PROCESS_INPUT_STREAM_SUCCESS:\n                tvText.append(\"\\n==================================\\nPROCESS_INPUT_STREAM_SUCCESS\");\n                break;\n        }\n    }\n\n    @Override\n    public void onDownloadingFinished(Result result) {\n        closeConnection(result);\n    }\n    private void closeConnection(Result result) {\n        isDownloading = false;\n        if (networkFragment != null) {\n            networkFragment.cancelDownload();\n        }\n    }\n\n    //--------------------------------------------------------------------------------------------\n    // not useful anymore function:\n    private DownloadListener&lt;String&gt; getNetWorkListener() {\n        return new DownloadListener&lt;String&gt;() {\n            @Override\n            public void updateFromDownloader(Result result) {\n                updateUiFromResult(result);\n            }\n\n            @Override\n            public NetworkInfo getActiveNetworkInfo() {\n                ConnectivityManager connectivityManager =\n                        (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n                if (connectivityManager != null) {\n                    NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n                    return networkInfo;\n                }\n                return null;\n            }\n\n            @Override\n            public void onProgressUpdate(int progressCode, int percentComplete) {\n                updateUiWithDownloaderMetaData(progressCode, percentComplete);\n\n            }\n\n            @Override\n            public void onDownloadingFinished(Result result) {\n                closeConnection(result);\n\n            }\n        };\n    }\n}\n</code></pre> <p>Well that's it.I usually have these all as just 2 classes instead of 4: <pre><code>- MainActivity implements...{...}\n- NetWorkFragment{\n    - Result{...}\n    - DownloadListener{...}\n    - DownloaderTask{...}\n}\n</code></pre></p> <p>Next, We would be seeing how Simple it is to download a response via okhttp or  volley. its so small , that it would be covered in first quarter of article and later we would rather be covering more advance topics like conveting this reponse string to a list of objects, downloading images, etc.  </p>"},{"location":"tab_notes/android/networking/networking_get_post_native_2023/","title":"Networking Basics : Making a Get Post Connection(Native Way) (2023)","text":"<p>So what has changed in 2023 for native ? well nothing,  except that i am a bit more experienced in android dev \ud83d\ude05\ud83d\ude05 Moreover, in the native section, you will see that the whole code is mixed with android classes of activity and fragments and user does not find it interestisting to read about the (or even remember it, as in my case. i forgot that i have gone through this before :/ )</p> <p>So here are my shorter points:</p> <ul> <li>We use <code>HttpURLConnection</code>, a java api to create connection . unlike other libs of retrofit/volley, it simply takes url/headers/params/body etc of request in the same java object as the one in which it returns the response content</li> <li>one important point : use setDo input followed by actually setting up the body ONLY IF your connection is a POST request. for get request, it overrides it to POST and it will fail if your server is not returning a response for POST</li> <li>some headers like connection and accept-encoding are common and important for each server. okhttp adds them, so we add them too</li> <li>most servers send data as per request headers. but some ignore them too. so use appropriate input stream decoders</li> <li>the code for deocding connection response to json below is shitty difficult to understand, written by chatgpt, but looks nice.</li> </ul> <p>So here is a function to create a httpclient based request without any dependencies:</p> <p>(* fun fact: Android provides json library as a part of its own sdks as <code>api</code>. but actual java implementation has no json library! so we did technically added  <code>implementation(\"org.json:json:20230227\")</code> library :P)</p> <pre><code>object BasicNetworkConnection {\n    private const val server = \"REDACTED\" // checkout https://github.com/root-ansh/web_project_test_server for actual server url that i created\n    private  val queryParams = hashMapOf(\"delay\" to \"0\")\n    private  val reqHeaders = hashMapOf(\n        \"Connection\" to \"Keep-Alive\",\n        \"Accept-Encoding\" to \"gzip\",\n    )\n\n    fun connect(url :String = server, query:Map&lt;String,String&gt; = queryParams, headers:Map&lt;String,String&gt; = reqHeaders, log:(Any)-&gt;Unit = { println(it) }){\n        log(\"connect() called with: url = $url, query = $query, headers = $headers, log = $log\")\n        val finalUrl = buildString {\n            append(url)\n            append(\"?\")\n            append(query.map { \"${it.key}=${it.value}\"}.joinToString(\"&amp;\"))\n        }\n        log(finalUrl)\n        val urlObj = URL(finalUrl)\n\n\n        val connection:HttpURLConnection? = urlObj.openConnection() as? HttpURLConnection\n        if(connection==null) {\n            log(\"connection failed\")\n            return\n        }\n\n        connection.let {\n            it.requestMethod = \"GET\"\n            it.connectTimeout = 10_000\n            it.readTimeout = 10_000\n\n            headers.forEach { (t,u)-&gt; connection.setRequestProperty(t,u) }\n\n            //it.doOutput = true //android has very strict library that generates requests in contrast to browsers. if we set doutput to true, it will automatically make a post request, which in turn will fail on the server if a post server is not available\n\n            //-------\n            val respCode = connection.responseCode\n            val respHeaders= connection.headerFields\n            var contentJson : JSONObject? = null\n\n\n            //either make sure that server returns gzip data, or remove GZIPInputStream wrapper from here\n            runCatching {\n               val content = BufferedReader(InputStreamReader(GZIPInputStream(connection.inputStream))).useLines { lines -&gt;\n                   lines.fold(StringBuilder()) { acc, line -&gt; acc.append(line) }\n               }\n                log(\"content string = $content\")\n                contentJson = JSONObject(content.toString())\n           }.getOrElse { e-&gt;e.printStackTrace() }\n\n            log(\"response code: $respCode\")\n            log(\"response headers: $respHeaders\")\n            log(\"response string: $contentJson\")\n\n\n        }\n\n    }\n\n}\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/","title":"Networking Basics : Making a Get Post Connection(Okhttp)","text":"<p>In the 1st article of Networking series we, discussed the different terminologies related to networking in Android, along with some basic steps. As per 1st article, - We need Internet and access network Permissions for creating a connection - We might need to check for Internet availability  before  making a connection and during the data transfer(usually handled automatically) (refer 1st article )</p>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/#okhttp","title":"okhttp","text":"<p>This is not as advanced as volley library, but still reduces our code by a lot. It was originally made to be an internal part of retrofit library, which is the actual massive library for multiple usages, but on popular demand, it was derived as a separate library for simpler use cases . thus we have to handle the asynchronous threading of netwrk by ourselves.</p>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/#adding-to-project","title":"Adding to project:","text":"<pre><code>   implementation 'com.squareup.okhttp3:okhttp:4.0.0-RC1'\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/#usagetheory","title":"Usage(theory):","text":"<p>meh. see code. very small stuff</p>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/#usage-code","title":"Usage (Code):","text":"<pre><code>public class Activity3 extends AppCompatActivity {\n    private static final String TAG = \"Activity3&gt;&gt;\";TextView tv3;Button bt3;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_3);\n        tv3 = findViewById(R.id.tv3);\n        bt3 = findViewById(R.id.bt3);\n        bt3.setOnClickListener(v -&gt; startNetworkRequest());\n    }\n\n    private void startNetworkRequest() {\n        String pagesize = \"5\";\n        String order = \"desc\";\n        String urlPost = \"http://api.stackexchange.com/2.2/questions?\";\n        String urlGet = \"https://api.stackexchange.com/2.2/questions?pagesize=5&amp;order=desc\";\n\n        new Thread(() -&gt; {\n            String responseGet = apiRequestGet(urlGet);  // String responsePost=apiRequestPOST(urlPost,pagesize,order);// can't check,not sure about it\n            runOnUiThread(()-&gt;tv3.setText(responseGet));\n        }).start();\n    }\n\n    private String apiRequestGet(String urlToUploadto) {\n        String responseJsonString = \"\";\n\n        OkHttpClient client = new OkHttpClient();\n\n        Request request = new Request.Builder().url(urlToUploadto).build();\n        try {\n            Response response = client.newCall(request).execute();\n            responseJsonString = response.body().string();\n        } catch (IOException e) {\n            e.printStackTrace();//this might be caused due response is not being recieved\n\n        }\n        return responseJsonString;\n    }\n\n    private String apiRequestPOST(String urlToUploadto, String pagesize, String order) {\n        String responseJsonString = \"\";\n\n        OkHttpClient client = new OkHttpClient();\n        RequestBody jsonFormBody = new FormBody.Builder()\n                .add(\"pagesize\", pagesize)\n                .add(\"order\", order).build();\n        Request request = new Request.Builder().url(urlToUploadto).post(jsonFormBody).build();\n        try {\n            Response response = client.newCall(request).execute();\n            responseJsonString = response.body().string();\n        } catch (IOException e) {\n            e.printStackTrace();//this might be caused due response is not being recieved\n\n        }\n        return responseJsonString;\n    }\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_okhttp/#advance-operations","title":"Advance Operations:","text":"<p>there is an excellent guide at https://github.com/chaostools/okhttp/blob/master/RECIPES.md (my fork of ok http, just in case ok http removes them later) covering some advanced usecases like video streaming post,  response caching, etc</p>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/","title":"Networking Basics : Making a Get Post Connection(Volley)","text":"<p>Bug</p> <p>**This library is fairly advanced and i have covered a very small part of it. **  </p> <p>In the 1st article of Networking series we, discussed the different terminologies related to networking in Android, along with some basic steps. As per 1st article, - We need Internet and access network Permissions for creating a connection - We might need to check for Internet availability  before  making a connection and during the data transfer(usually handled automatically) (refer 1st article )</p> <p>We also saw how volley and okhttp are used to perform network calling and parsing so easy. They were also able to handle get/post requests . Now let's checkout Retrofit, a special library specifically designed for advanced network requests and continuous calling</p>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/#retrofit","title":"Retrofit.","text":"<p>Retrofit is an advance networking library by square. It can do a lot of powerful operations, so we will learn about them when they come up. For now, let\u2019s work on creating a simple stackoverflow app.</p>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/#implementation","title":"Implementation","text":"<pre><code>implementation 'com.squareup.retrofit2:retrofit:2.6.0'\nimplementation 'com.squareup.retrofit2:converter-gson:2.6.0'\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/#usagetheory","title":"Usage(Theory).","text":"<p>Retrofit doesn\u2019t do any networking by itself. It is build upon okhttp layer  which handles.Its basic usage is very similar to that of volley.</p> <p>suppose we want to receive  list of user \u2018root-ansh\u2019 repos from the following github api:  https://api.github.com/users/root-ansh/repos . here, <code>Https://api.github.com/</code> is the base url and <code>users/{user-name}/repos</code>  is a dynamic query url. The query gives the following result:  </p> <p></p>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/#usagecode","title":"Usage(Code).","text":"<p>1.Define a model class for GSON. As we can see, the root itself is of type  jsonArray. If you had this response as a string, you would have to use the previous mentioned json code to extract value of name key(3rd key in 0{} )  </p> <p>In retrofit, we define a model like this: </p> <pre><code>public class GitHubRepo { // the class name could be anything we like\n    private String name; //note that this var name should be exactly same as the key name in response or use @SerializedName(\"key\") annotatation\n\n    public GitHubRepo(String name) {this.name = name;}\n\n    public String getName() {return name; }\n\n    public void setName(String name) { this.name = name; }\n}\n</code></pre> <p>2.    Define a response client interface. </p> <pre><code> public interface GitHubClient {\n\n    @GET(Constants.DYNAMIC_QUERY_URL)                                                     //String DYNAMIC_QUERY_URL=\"/users/{user}/repos\";\n    Call&lt;List&lt;GitHubRepo&gt;&gt; getReposForUser(@Path(\"user\") String user);\n\n     // another cool way(not used in this project)\n     @GET(\"answers\")\n        Call&lt;StackApiResponse&gt; getAnswers(@Query(\"page\") int page, @Query(\"pagesize\") int pagesize, @Query(\"site\") String site);\n\n        //actual complete api = https://api.stackexchange.com/2.2/answers?page=1&amp;pagesize=50&amp;site=stackoverflow\n        // thus the getter part = answers?page=1&amp;pagesize=50&amp;site=stackoverflow , being created dynamically\n\n}\n</code></pre> <p>3. In main Activity. Our network call would be made on a We follow the following steps:  </p> <ul> <li>Create a pojo convertor instance.  </li> <li>Create retrofit instance using baseurl and pojo convertor  </li> <li>Create the response client interface instance  </li> <li>Create a Retrofit Call using  client instance  </li> <li>Create a response handler which will receive asynchronously updates from the network call(There is a synchnous(on the same thread) method to do this too.)  </li> <li>Start the network call using call.enque(response handler)    </li> </ul> <pre><code>  @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        ...\n        String baseurl=Constants.BASE_URL; String userName=\"root-ansh\";\n        bt4.setOnClickListener(v -&gt; {\n\n            GsonConverterFactory pojoConvertor=GsonConverterFactory.create();   //step 1\n            Retrofit retrofit =  new Retrofit.Builder().baseUrl(baseurl).addConverterFactory(pojoConvertor).build();  //step2\n            GitHubClient client = retrofit.create(GitHubClient.class);  //step3\n            Call&lt;ArrayList&lt;GitHubRepo&gt;&gt; call = client.getReposForUser(userName);  //step4\n            Callback&lt;ArrayList&lt;GitHubRepo&gt;&gt; responseHandler = getResponseHandler(); //step5\n\n            call.enqueue(responseHandler);  //step6\n        });\n\n    }\n    //step4\n    private Callback&lt;ArrayList&lt;GitHubRepo&gt;&gt; getResponseHandler() {\n        return new Callback&lt;ArrayList&lt;GitHubRepo&gt;&gt;() {\n            @Override\n            public void onResponse(@NotNull Call&lt;ArrayList&lt;GitHubRepo&gt;&gt; call, @NotNull Response&lt;ArrayList&lt;GitHubRepo&gt;&gt; response) {\n                ArrayList&lt;GitHubRepo&gt; respReposList = response.body();\n                if(respReposList!=null) {  tv4.setText(respReposList.toString()); }\n\n           }\n\n            @Override\n            public void onFailure(@NotNull Call&lt;ArrayList&lt;GitHubRepo&gt;&gt; call, @NotNull Throwable t) {\n                tv4.setText(String.format(\"%s\", t));\n            }\n        };\n    }\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_retrofit/#other-resources","title":"Other Resources","text":"<p>There can be some advance usages like creating a post request( i.e passing objects in the network call) or creating a synchronous call or calling for nested attributes, etc. More are covered here :https://academy.realm.io/posts/advanced-retrofit-mobilization-2017/</p>"},{"location":"tab_notes/android/networking/networking_get_post_volley/","title":"Networking Basics : Making a Get Post Connection(Volley)","text":"<p>In the 1st article of Networking series we, discussed the different terminologies related to networking in Android, along with some basic steps. As per 1st article, - We need Internet and access network Permissions for creating a connection - We might need to check for Internet availability  before  making a connection and during the data transfer(usually handled automatically) (refer 1st article )</p> <p>In the 2nd article , we saw how data can be downloaded using network fragment as a response string and how it could be set on the ui straightly.But production level apps doesn\u2019t do that.They rather have a pretty ui where the data is set with full animations and loading screens. Even when we say \"reponse string\", we meant something like this: <pre><code>{\n  \"items\": [\n    {\n      \"owner\": {\n        \"reputation\": 36476,\n        \"user_id\": 7207392,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 73,\n        \"profile_image\": \"https://www.gravatar.com/avatar/dadc9567dde5f02b09a29695eca1ce40?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"Paul Panzer\",\n        \"link\": \"https://stackoverflow.com/users/7207392/paul-panzer\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568059,\n      \"last_edit_date\": 1570568059,\n      \"creation_date\": 1570566735,\n      \"answer_id\": 58293716,\n      \"question_id\": 58292546\n    },\n    {\n      \"owner\": {\n        \"reputation\": 21,\n        \"user_id\": 12165300,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://www.gravatar.com/avatar/05ad0547978cace7429e947736861196?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"rsomji\",\n        \"link\": \"https://stackoverflow.com/users/12165300/rsomji\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568055,\n      \"creation_date\": 1570568055,\n      \"answer_id\": 58293951,\n      \"question_id\": 58289314\n    },\n    {\n      \"owner\": {\n        \"reputation\": 1982,\n        \"user_id\": 2042457,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 56,\n        \"profile_image\": \"https://i.stack.imgur.com/xQVEN.jpg?s=128&amp;g=1\",\n        \"display_name\": \"aksappy\",\n        \"link\": \"https://stackoverflow.com/users/2042457/aksappy\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568054,\n      \"creation_date\": 1570568054,\n      \"answer_id\": 58293950,\n      \"question_id\": 58290873\n    },\n    {\n      \"owner\": {\n        \"reputation\": 472124,\n        \"user_id\": 1491895,\n        \"user_type\": \"registered\",\n        \"accept_rate\": 69,\n        \"profile_image\": \"https://www.gravatar.com/avatar/82f9e178a16364bf561d0ed4da09a35d?s=128&amp;d=identicon&amp;r=PG\",\n        \"display_name\": \"Barmar\",\n        \"link\": \"https://stackoverflow.com/users/1491895/barmar\"\n      },\n      \"is_accepted\": true,\n      \"score\": 1,\n      \"last_activity_date\": 1570568051,\n      \"last_edit_date\": 1570568051,\n      \"creation_date\": 1570514725,\n      \"answer_id\": 58280936,\n      \"question_id\": 58280903\n    },\n    {\n      \"owner\": {\n        \"reputation\": 220,\n        \"user_id\": 11601996,\n        \"user_type\": \"registered\",\n        \"profile_image\": \"https://www.gravatar.com/avatar/51c452c987f2541f3c4d661a80359878?s=128&amp;d=identicon&amp;r=PG&amp;f=1\",\n        \"display_name\": \"Peter Li\",\n        \"link\": \"https://stackoverflow.com/users/11601996/peter-li\"\n      },\n      \"is_accepted\": false,\n      \"score\": 0,\n      \"last_activity_date\": 1570568046,\n      \"creation_date\": 1570568046,\n      \"answer_id\": 58293947,\n      \"question_id\": 58264206\n    }\n  ],\n  \"has_more\": true,\n  \"backoff\": 10,\n  \"quota_max\": 10000,\n  \"quota_remaining\": 9995\n}\n</code></pre> This is a reponse from the stack overflow Answers API .It has various fileds like  questionid, answereId, creationdata, etc but we didn\u2019t even converted this  json string to some list of objects or strings, we just dumped it in our textview as it is.  </p> <p>In a prettier version of our app : 1. Our data string would have been downloaded in a background thread, just like this 2. there would have been a recyclerview showing each question , with picture in left , title in top and subtitle below that. 3. We would then define a class \u2018EachRowData\u2019 with fields like id, question title, answertitle , creation date,etc ., with all those constructers and getters and setters 4. We would then convert out downloaded jsonString to the List by first converting  this string to JSONObject class\u2019s object and then iterating through each object.This process is called converting from JSON to POJO (POJO:plain old java object)   <p>These are a lot of steps and their code, as we know, ends up being a massive monster. So there are many libraries build to perform above tasks in a simpler manner.  - Volley/Okhttp/Retrofit are libraries which simplifies the process of downloading jsonString from api ( and some other tasks)  </p> <ul> <li>GSON is a popuar google library used for converting the json to pojo.  </li> <li>Picasso/glide/fresco/volley image are libraries build to simplify downloading and displaying of images. This is because  a downloaded bitstream would not be converted to a string and would require some extra functions like scaling ,transformation,etc</li> </ul>"},{"location":"tab_notes/android/networking/networking_get_post_volley/#volley","title":"volley","text":"<p>Volley is an HTTP library that makes networking for Android apps easier and, most importantly, faster. For more information about Volley and how to use it, visit the Android developer training page.  </p>"},{"location":"tab_notes/android/networking/networking_get_post_volley/#adding-to-project","title":"Adding to project:","text":"<pre><code>   Implementation  'com.android.volley:volley:1.1.1'\n</code></pre>"},{"location":"tab_notes/android/networking/networking_get_post_volley/#usagetheory","title":"Usage(theory):","text":"<ol> <li>create a response listener</li> <li>create an error listener</li> <li>create a response request</li> <li>create a request queue</li> <li>add request to queue</li> </ol>"},{"location":"tab_notes/android/networking/networking_get_post_volley/#usage-code","title":"Usage (Code):","text":"<pre><code>public class Activity2 extends AppCompatActivity {\n    TextView tv2; Button bt2;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_2);\n\n        tv2=findViewById(R.id.tv2);\n        bt2=findViewById(R.id.bt2);\n\n        String url = \"https://api.stackexchange.com/2.2/questions?pagesize=5&amp;order=desc&amp;sort=activity&amp;site=stackoverflow\";\n\n        Response.Listener&lt;String&gt; responseListener = getResponseListener();\n        Response.ErrorListener errorListener = getErrorListener();\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, url,responseListener,errorListener );\n        RequestQueue queue = Volley.newRequestQueue(this);\n\n        bt2.setOnClickListener(v-&gt; queue.add(stringRequest));\n    }\n    private Response.ErrorListener getErrorListener() {\n        return new Response.ErrorListener() {\n            @Override\n            public void onErrorResponse(VolleyError error) {\n                tv2.setText(\"That didn't work!\");\n            }};\n    }\n    private Response.Listener&lt;String&gt; getResponseListener() {\n        return new Response.Listener&lt;String&gt;() {\n            @Override\n            public void onResponse(String response) {\n                // Display the first 500 characters of the response string.\n                tv2.setText(\"Response is:\\n\" + response);\n            }\n        };\n    }\n</code></pre> <p>Advantages of volley:  </p> <ul> <li>Automatic scheduling of network requests.  </li> <li>Multiple concurrent network connections.  </li> <li>Transparent disk and memory response caching with standard HTTP cache coherence.  </li> <li>Support for request prioritization.  </li> <li>Cancellation request API. You can cancel a single request, or you can set blocks or scopes of requests to cancel.  </li> <li>Ease of customization, for example, for retry and backoff.  </li> <li>Strong ordering that makes it easy to correctly populate your UI with data fetched asynchronously from the network.  </li> <li>Debugging and tracing tools.  </li> </ul>"},{"location":"tab_notes/android/networking/networking_get_post_volley/#advance-operations","title":"Advance Operations:","text":"<ul> <li>Post Request </li> </ul> <p>https://stackoverflow.com/a/33578202 </p> <ul> <li>Handling  request cancelling </li> </ul> <pre><code>//before adding string request in queue:\nObject TAG = \"Hi\";\nstringRequest.setTag(TAG);  \n\n\n// cancelling the request on click:\nbtCancelLoading.setOnClickListener(v-&gt;{\n                   queue.cancelAll(TAG);\n});\n</code></pre> <ul> <li> <p>Making a custom Network queue with custom caching and thread handling:  https://developer.android.com/training/volley/requestqueue</p> </li> <li> <p>Making a custom Network request : like a direct json object request or direct pojo request : https://developer.android.com/training/volley/request-custom#example:-gsonrequest . the example there shows ho we can use gson library alongside volley  to directly receive a list of pojos by extending Network request class</p> </li> </ul>"},{"location":"tab_notes/android/ui_recycler/misc_notes/","title":"Miscellaneous Code Snippets","text":""},{"location":"tab_notes/android/ui_recycler/misc_notes/#1-minor-lifecycle-bug-fix","title":"1. Minor Lifecycle Bug fix","text":"<pre><code>override fun onOptionsItemSelected(item: MenuItem): Boolean {\n\n        if(item.itemId==android.R.id.home){\n            onBackPressed()// necessary otherwise old screen will be recreated(??), causing unnecessary  oncreate calls\n            return true\n        }\n        return super.onOptionsItemSelected(item)\n    }\n</code></pre>"},{"location":"tab_notes/android/ui_recycler/quick_recycler/","title":"A Quick RecylerView Adapter","text":"<p>What if I told you, that your recylerview adapter with all the actions for clicking, changing ui, displaying data... etc will just take 15 lines to be created and used? Something like this: <pre><code>EasyAdapter(object : EasyAdapterInfo&lt;DataType&gt; {\n            override fun getHolderInflater() = layoutInflater\n            override fun getLayoutRes() = R.layout.item_link\n            override fun onCreate(itemView: View) {}\n            override fun onBind(itemView: View, item: DataType) {\n                with(itemView) {\n                    tv_url?.text = item.url\n                    iv_cancel?.setOnClickListener { onDeleteItemClicked(item) }\n                    setOnClickListener { onUrlListItemClicked(item) }\n                    setOnLongClickListener {\n                        onUrlListItemClicked(item)\n                        true\n                    }\n                }\n            }\n        })\n</code></pre></p> <p>well its possible now, just use this piece of code:</p> <pre><code>class EasyAdapter&lt;T&gt;(private val info: EasyAdapterInfo&lt;T&gt;):RecyclerView.Adapter&lt;EasyHolder&gt;(){\n\n    var itemsList = mutableListOf&lt;T&gt;()\n       set(value) {\n           field = value\n           notifyDataSetChanged()\n\n       }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): EasyHolder {\n        val easyHolder = EasyHolder(\n            info.getHolderInflater().inflate(info.getLayoutRes(), parent, false)\n        )\n        info.onCreate(easyHolder.itemView)\n        return  easyHolder\n    }\n\n    override fun onBindViewHolder(holder: EasyHolder, position: Int) {\n        info.onBind(holder.itemView,itemsList[position])\n    }\n    override fun getItemCount()= itemsList.size\n\n}\n\nclass EasyHolder(v:View):RecyclerView.ViewHolder(v)\n\n//todo:Improve it( add defaults)\ninterface EasyAdapterInfo&lt;MODEL_TYPE&gt;{\n    fun getHolderInflater():LayoutInflater\n    fun getLayoutRes(): Int\n    fun onCreate(itemView: View)\n    fun onBind(itemView: View, item:MODEL_TYPE)\n}\n</code></pre> <p>here <code>MODEL_TYPE</code> and <code>T</code> will be your data model for the list of items that you wanna show. go full on recycler!</p>"},{"location":"tab_notes/android/ui_recycler/selectable_tags_adp/","title":"Selectable Items Adapter","text":"<p>Recently I came across a ui design that we needed to implement in our App. The design looked something like the image above. Seems a simple design using a <code>Recycler View</code> and Google's <code>Flexbox layout manager</code>. But There was more to it.</p> <p>You see , in terms of selection, there can be many decisions to choose from: 1. min-0 | single select : the user should be able to select no item or at most 1 item. pressing the item again is going to mark item as unselected and thus the list could have 0 selections at a time</p> <ol> <li> <p>min-0 | multi select : the user should be able to select 0 or more items. pressing the item again is going to mark item as unselected and thus the list could have 0 selections at a time</p> </li> <li> <p>MIN-1 | SINGLE-SELECT : The user should be able to select at-most 1 item. clicking the other items is going to change user selection to other item, but clicking same item will not have any effect. list should have 1 item as selected by default and thus the list will always have only 1 item as selected</p> </li> <li> <p>MIN-1 | MULTI-SELECT : the user should be able to select 1 or more items. list should have 1 item as selected by default and pressing the item again is going to mark item as unselected  ONLY IF there is more than 1 selections in the list and thus the list will always have at least 1 or more items</p> </li> </ol>"},{"location":"tab_notes/android/ui_recycler/selectable_tags_adp/#problem-statement","title":"Problem statement.","text":"<p>So these are some of the various things to keep in mind while making a selectable item adapter. The problems that i was dealing with, had 2 such uis in which one ui required single selection (min-0) and one required multiple selections(min-0). The solution described below is for these cases only, but could also be easily converted to support all 4 selection cases.</p>"},{"location":"tab_notes/android/ui_recycler/selectable_tags_adp/#solution","title":"Solution.","text":"<p>In terms of Android and Recycler view, this is achieved by keeping a model which has a boolean for each item, like this:  </p> <pre><code>data class SelectableItem(val data:Interest, var isSelected:Boolean = false)\ndata class Interest(val  title:String)\n</code></pre> <p>For viewholder, this was again a simple code as the data clearly defines which ui to show for which state of the item :  </p> <pre><code>class SelectableVH(v:View) : RecyclerView.ViewHolder(v) {\n\n    constructor(parent:ViewGroup, type:Int):this(\n        LayoutInflater.from(parent.context).inflate(R.layout.item_tag,parent,false)\n    )\n\n    fun bindData(item: SelectableItem){\n        with(itemView){\n            val btTag = findViewById&lt;MaterialButton&gt;(R.id.btTag)\n             btTag.text = item.data.title\n\n            if(item.isSelected){\n                btTag.backgroundTintList = ContextCompat.getColorStateList(context,R.color.purple_700)\n                btTag.setTextColor(ContextCompat.getColor(context,R.color.white))\n            }\n            else{\n                btTag.backgroundTintList = ContextCompat.getColorStateList(context,R.color.white)\n                btTag.setTextColor(ContextCompat.getColor(context,R.color.purple_700))\n                btTag.strokeColor = ContextCompat.getColorStateList(context,R.color.purple_700)\n            }\n\n        }\n    }\n}\n</code></pre> <p>The interesting part comes in the adapter. I know, the adapter is supposed to be simple and just do the task of inflating ui and attaching the data. But imagine having many of such recycler views in your screen. if you go with a simple adapter that just inflates the ui and attaches data via list on the ui, you will end up doing the following tasks in your activity :</p> <ol> <li>changing the state of model for the clicked item. for eg, if user clicks an item <code>Elon Musk</code> in the list, you need to set its <code>isSelected = true/false</code> based on its previous state</li> <li>changing the state of other items based on the state of currently clicked item . For eg, if its a single selection adapter, you need to run a loop over all the items to mark them as unselected</li> <li>maintaining a list of selectable items: for multi selection, you need to maintain a list of selected items</li> </ol> <p>and although it would be a good thing to do, the cases of min-0/min-1 and  single/multi selection options are similar enough to be controlled via a single adapter. check this out:</p> <pre><code>class SelectableAdapter() :RecyclerView.Adapter&lt;SelectableVH&gt;() {\n\n    override fun onCreateViewHolder(parent: ViewGroup, type: Int) = SelectableVH(parent,type)\n    override fun getItemCount() = adapterItems.size\n\n    var multiSelect = false\n        set(value) { field = value;notifyDataSetChanged() }\n\n    var onItemClick : ((SelectableItem) -&gt; Unit)? = null\n        set(value) { field = value;notifyDataSetChanged() }\n\n    var adapterItems = mutableListOf&lt;SelectableItem&gt;()\n        set(value) { field = value;notifyDataSetChanged() }\n\n    var selectedItems = mutableListOf&lt;SelectableItem&gt;()\n        set(value) { field = value;notifyDataSetChanged() }\n\n    override fun onBindViewHolder(holder: SelectableVH, position: Int) {\n        holder.bindData(adapterItems[position])\n        updateSelectedItemsList()\n        holder.itemView.setOnClickListener { performOnClickActions(adapterItems[position]) }\n\n    }\n\n    fun performOnClickActions(item: SelectableItem) {\n        val index = adapterItems.indexOfFirst { it.data.title == item.data.title}\n        if (index != -1) {\n            toggleSelection(index)\n            updateSelectedItemsList()\n            onItemClick?.invoke(item)\n            notifyDataSetChanged()\n\n        }\n    }\n\n    private fun toggleSelection(position: Int) {\n        // will set tag as either selected or unselected .\n        if (!multiSelect) {\n            adapterItems.forEachIndexed { index, _ -&gt;\n                if(index!= position) (adapterItems[index]).isSelected = false\n            }\n        }\n        val isPreviouslySelected =adapterItems[position].isSelected\n        (adapterItems[position]).isSelected = !isPreviouslySelected\n\n    }\n\n    private fun updateSelectedItemsList() {\n        selectedItems.clear()\n        adapterItems.forEach { if (it.isSelected) selectedItems.add(it) }\n    }\n}\n</code></pre> <p>Lets try to understand it line by line</p> <ol> <li> <p><code>onCreateViewHolder</code> ,<code>getItemCount</code> , <code>onBindViewHolder</code> are your normal overridden functions the adapter is controlled by <code>adapterItems</code>, a mutable list of Items. It is interesting to note the implementation of <code>itemClick</code> in <code>onBindViewHolder</code>. Usually if the adapter parent is providing a listener (as in this case too), we just directly attach it to view on-click, But here we are instead calling a custom public function <code>performOnClickActions</code> to perform <code>onItemClick?.invoke(item)</code> After performing various actions.    </p> </li> <li> <p>This is because we don't want the caller adapter parent to end up performing selections and creating a convenient plug-and-play adapter that handles the clicks on its own. So checking onto the <code>performOnClickActions</code> , its calling another function <code>toggleSelection</code> followed by <code>updateSelectedItemsList</code> and then ultimately invoking the user click listener  </p> </li> <li> <p>the <code>toggleSelection</code> is a very interesting function as it sets every item as selected and unselected based on the behavior we expect from the adapter:         a. If the adapter is multi selection, its just going to set that particular item as selected/unselected, giving us a simple min-0 multi select adapter         b. if the adapter is single selection, its going to run through a loop ,making all items as unselected and then updating the state of clicked item, giving us a cool little min-0 single select adapter  </p> </li> <li> <p>the last call to <code>updateSelectedItemsList()</code> is simply to update the state of selectable items list . </p> </li> <li> <p>So since the adapter is handling all the complications of dealing with single/multi selections, we need to invoke the onclick AFTER the adapter is done updating the internal list. But why is <code>performOnClickActions</code> kept as public ? Because it  could be then used for making clicks via code.</p> </li> </ol> <p>So that was all in this mini problem statement . Please drop a \ud83d\udc4f if you find this useful . Connect with me on My social links  to discuss anything, android or otherwise. Thank you for reading!</p>"},{"location":"tab_notes/assistant/404/","title":"4004","text":"<p>Will add stuff later</p>"},{"location":"tab_notes/blockchain/public_and_private_key/","title":"Public and Private Keys","text":"<p>(Todo: add introduction pages about blockchain) </p> <p>I have been thinking about learning blockchain for so long, But i didn't ever gave it some serious thoughts or inputs. Everyone I try talking to, they are like, saying random combination of sexy phrases like \"Encrypted\", \"Public key/private key\", \"Super secure\" , \"Hash\" ,\"Distributed\", ... etc , and although i can't make sense about it for most of the time, I get prety excited about it.  </p> <p>Yesterday I was watching a techalter video on something similar topic. And he gave a very nice analogy of public and private key : think of it as your email id and password.    </p> <p>For eg, a Public Key could look like: c344c090-6652-4678-8215-1338acd2f102 a Private Key could look like: b9ef4856-ebdc-4b85-8c3f-c3455c25540f  </p> <p>Google knew its difficult to remember this, so in gmail, </p> <p>a Public Key could look like: anshsachdeva.w.5798@gmail.com  a Private Key could look like: mySuperSecretpassword123</p> <p>Characterstics of a public key: - It is unique in nature and is somewhat controlled by the issuer of the key( like every gmail has @gmail.com at the end) - It is visible to anyone, so that they can contact you. - It thus acts as your identity on a network. - It can be very less harmful on its own, as a threat cannot retrieve your other info or details via this key.the only way to do that will be to hack the key provider's server(google in this case), which is a non avoidable problem from your end, or somehow lure YOU into interacting with his action( like writing a phisihing mail that could lure you into giving private details to hacker), but accessing that action would also require private key.  </p> <p>Characterstics of a private key: - It is also unique in nature, but completely controlled by the user( except some pttern rules that companies apply to prevent guessing) - It is not visible to anyone, and is used as a firewall to prevent unauthorised access to information and mails that are addressed to YOU (i.e your public key)  - It thus acts as a sole layer of authentication to access your space on a network.  '' - It can be very harmful if leaked: because a person X having access to person Y's private key can literally take identity of Person Y since public keys are already accessible   </p>"},{"location":"tab_notes/firebase/RealtimeDb/","title":"Firebase","text":"<p>TODO : shitty article, need to replace all those \"follow the assistant/visit links\" with actual data</p> <p>So i was recently working on a project with firebase. Firebase is really simple  to get started with and has strong functionalities and capabilities. Its a  full fledged scalable , realtime cloud server.  </p> <p>Firebase provides security at almost every aspect, but for my present project, The integration with the cloud server was more important than the security  aspects. So i ended up using only the firebase Realtime database and nothing  else.  </p>"},{"location":"tab_notes/firebase/RealtimeDb/#firebase-realtime-database","title":"Firebase Realtime database.","text":"<p>Firebase Realtime database is one of the 2 Realtime syncing database solution  from Google's firebase, the other being cloud firestore. RealtimeDB stores all user's data in json format, while firestore would store data in documents format. More details here </p> <p>the data will look something like this:</p> <pre><code>{ \n  \"users\" :\n  {\n        \"2f4587e9e837a9bd\" : \n        {\n          \"id\" : \"2f4587e9e837a9bd\",\n          \"name\" : \"Joey\"\n        },\n\n        \"3955e55ae50efd8c\" : \n        {\n          \"id\" : \"3955e55ae50efd8c\",\n          \"name\" : \"Jon Snow\"\n        },\n\n\n        \"4f154d1107547ca0\" : \n        {\n          \"id\" : \"4f154d1107547ca0\",\n          \"name\" : \"Sheldon\"\n        },\n\n\n        \"5f5be88cbfd41d46\" :\n        {\n          \"id\" : \"5f5be88cbfd41d46\",\n          \"name\" : \"Morty\"\n        }\n\n  }\n\n}\n</code></pre>"},{"location":"tab_notes/firebase/RealtimeDb/#getting-started-with-firebase-realtime-database","title":"Getting Started with Firebase realtime database","text":""},{"location":"tab_notes/firebase/RealtimeDb/#the-easy-way","title":"The easy way.","text":"<ol> <li>Create your account on firebase.google.com </li> <li>Login to Android studio with same account. </li> <li>Click on tools&gt;&gt;Firebase and create new account. All the necessities would be automatically done</li> </ol>"},{"location":"tab_notes/firebase/RealtimeDb/#the-hard-way","title":"The Hard way.","text":"<ol> <li>https://firebase.google.com/docs/android/setup?authuser=0#console</li> </ol>"},{"location":"tab_notes/firebase/RealtimeDb/#integrating-realtime-database-with-our-app","title":"integrating Realtime database with our app","text":"<ul> <li>simply add the neccessary dependencies via firebase assistant( it will add old  dependencies, but those are the most stable)</li> </ul>"},{"location":"tab_notes/firebase/RealtimeDb/#using-firebase-db","title":"using firebase db","text":"<p>download data: for above, we have to make an instance using the \"users\" child. Firebase doesn't allow getting a data directly on our main thread. Instead it sends data to us via its listener callbacks.  </p> <p>NOTE</p> <p>Firebase Realtime database can only store data of type allowed by json syandards. to add data of any other format(image/video/audio,etc), use Firebase cloud storage.</p> <p>Downloading data from firebase <pre><code>DatabaseReference dbRef= FirebaseDatabase.getInstance().getReference().child(\"users\"); // non-null\n\n dbRef.addValueEventListener(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                //do stuff here\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n        // OR\n\n dbRef.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                //do stuff here\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n</code></pre></p> <p>There are 2 kinds of callbacks: <code>ref.addListenerForSingleValueEvent(&lt;valueEventListener)</code>  and simply <code>ref.addvalueEventListener(&lt;valueEventListener)</code>. As the name indicates the formaer will be recieving an update only once, while the latter will recieve updates every time the server updates.  </p> <p><code>addListenerForSingleValueEvent(..)</code> is a lot useful when accessing data from  multiple activites inside an app because firebase reference is powerful enough to remain live  and bring our destroyed activity  from the activity stack! (i am guessing it  does not allow activities with active listeners to die).</p> <p>inside the <code>onDataChange(...)</code>, you can do something like:</p> <pre><code> for(DataSnapshot usersSnap:dataSnapshot.getChildren()){\n\n    String userKey=\"\"+usersSnap.getKey();\n\n    Object u = usersSnap.getValue();            //instance of object class\n    User u = usersSnap.getValue(User.class);    //instance of User class\n\n }\n</code></pre> <p>As you can see, you can deserialise the data if its coming in a specific format.  </p> <p>** Uploading data to firebase **  </p> <pre><code>  DatabaseReference.CompletionListener completionListener = new DatabaseReference.CompletionListener() {\n            @Override\n            public void onComplete(@Nullable DatabaseError databaseError, @NonNull DatabaseReference databaseReference) {\n\n                Log.e(TAG, \"onComplete: Successfully updated data\");\n\n                //...\n\n            }\n        };\n\n  User u = new User(\"name\",\"some_key\");\n  partyRef.child(\"some_key\").setValue(u, completionListener);\n</code></pre> <p>currently i have to research on weather its possible to add hashmaps or sets to firebase, because we are facing an issue with that</p>"},{"location":"tab_notes/firebase/RealtimeDb/#pro-tipsnot-exactly-pro-tbh-but-from-experience","title":"Pro Tips(not exactly pro tbh, but from experience)","text":"<ol> <li> <p><code>addListenerForSingleValueEvent(..)</code> is a lot useful when accessing data from  multiple activites inside an app because firebase reference is powerful enough to remain live  and bring our destroyed activity  from the activity stack! (i am guessing it  does not allow activities with active listeners to die).  </p> </li> <li> <p>LIST IS A BAD IDEA FOR FIREBASE . It can store data as list when passed, because a list of objects is an acceptable entry for json. But it is most often a bad idea because the entries of a list are also stored as a key value pairs, the key being their index i.e <code>List&lt;Object&gt;</code> would be listed as <code>{ 0: someObj ,1:someObj}</code> . and its very often that when 2 users are adding their entry at the same time in that list, both will be adding at the end, and their data would be uploaded with the same key ,i.e <code>{...,last_index: objectOfUser1}</code> and <code>{...,last_index: objectOfUser2}</code> , causing a race condition. Rather use a <code>hashmap&lt;UniqueStringKey,Object&gt;</code></p> </li> </ol>"},{"location":"tab_notes/git/autopush/","title":"Mini Tutorial : automatically push your code on commit.","text":"<p>Disclaimer: not the best thing to do for every situation, but definitely worth considering</p> <p>Platform : windows ( but you can figure out for other platforms too)</p> <p>STEPS:  </p> <ol> <li>open .git/hooks folder  </li> <li>create file post-commit (no extension) and open via text editor  </li> <li>add code:  </li> </ol> <p><pre><code>#!/bin/sh\ngit push --all origin\n</code></pre> ( or any other push statement like git push -u origin master / dev/whatever)</p> <ol> <li>You are done. now next time you add a commit, it is automatically pushed to vcs.</li> </ol> <p>good luck.</p> <p>PS : if you liked this tutorial and are a super smart ninja pro hackerman/women dev, then please make multiple accounts handling git credentials manager  </p>"},{"location":"tab_notes/git/intro/","title":"The World of Linux","text":"<p>I often learn a lot of fun stuff when i do git.  </p>"},{"location":"tab_notes/git/intro/#october-27-2019","title":"October 27, 2019.","text":"<p>today i found out that: - <code>git config --global -l</code> will give away all your globally setted default values/aliases, eg:  </p> <pre><code>&gt;&gt;&gt; git config --global -l\nuser.email=anshsachdevaprofessional@gmail.com\nuser.name=root-ansh\nuser.password=**********\n</code></pre> <ul> <li><code>git config --global user.x \"some value\"</code> will set a value for that key x</li> </ul> <p>linux works and building a linux from scratch. So let's get going.</p>"},{"location":"tab_notes/kotlin/intro/","title":"KOTLIN","text":"<p>So, after procrastinating a lot, a have finally decided to learn kotlin. This will be my safeplace for all the knowledge i gather up around this language,  as well its use in Android dev. I have downloaded a bunch of resources and signed up a few courses and my target is to cover atleast enough to kotlin to make 3-5 production level apps and in  future get an aad certification for kotlin.</p> <p>I will be using google docs for making the notes. The mkdocs is causing  problems with python 3.8 and i  am unable to view any changes i do unless i deploy them to production. I am  thinking of adding all my resources in the blogs folder only, providing a github link for that, but i guess that will make the repo sie very large and cause  issues in push/pull. So i will be adding them to gdrive and adding them to my  .ignore lists .Hope mkdocs doesn't break </p> <p>(Update feb 17,20 : A few posts are with me in my local system, would try to update links here earliest as possible. i am currently looking for a better approach for a website, so i would be either creating one myself{i.e a without using static website frameworks} or using a better blogsite approach {i am having a thought of using reddit for blogging as an idea})</p>"},{"location":"tab_notes/misc/SetupANewLap/","title":"Setup a new PC or Laptop for development","text":"<ol> <li>Installing tools</li> <li>Setting up specific tools</li> </ol>"},{"location":"tab_notes/misc/SetupANewLap/#installing-tools","title":"Installing tools","text":"<p>Some common tools for development are:</p> tool name usage additional notes Android Studio Developing Apps VS Code Opening Code files brew for installing tools add to path, ensure its access openjdk11(via brew) for running java code add to path, ensure its access python3 for running python apps add to path, ensure its access nvm for managing node+pip versions add to path, ensure its access gradle for running gradle commands on apps add to path, ensure its access git for vcs usually already present, but setup local ssh misc mac enable hidden files"},{"location":"tab_notes/misc/SetupANewLap/#setup-specific-tools","title":"Setup Specific tools","text":""},{"location":"tab_notes/misc/SetupANewLap/#git","title":"Git","text":"<ol> <li>Git is already installed in most of the OS, if its not there, simply install via https://git-scm.com/downloads</li> <li>ensure its access via <code>git -v</code></li> </ol>"},{"location":"tab_notes/misc/SetupANewLap/#setting-up-git-ssh-access","title":"Setting up Git SSH Access","text":"<p>Git basically connects to VCS Repo Hosting Sites like Github via some form of authentication. Before 2019, we would usually use  username+password, which git would store in a credentials manager and automatically use while making an Https Request.</p> <p>However, it was deprecated and now we are left with either setting Https mechanims, or setting up SSH . SSH is relatively easy and very helpful.  In SSH, there are basically 2 entities : Local key and server key</p> <ol> <li>(If steps 1-4 fail, redo them, BUT first delete the contents of <code>~/.ssh</code></li> <li>We generate 2 keys with the following command <code>ssh-keygen -o -t rsa -C \"myemail.work@company.com\"</code></li> <li>It will ask some question for passphrase, and name, just press enter</li> <li>It will create 2 keys id_rsa and id_rsa.pub . both are text files if you try opening them in a text editor</li> <li>add those keys in <code>~/.ssh</code> folder (read steps for enabling hidden files in the section below)</li> </ol> <p>So now you have a local ssh environment setup! </p> <p>Next time you want to use SSH login with any Online VCS Dashboard account for \"myemail.work@company.com\", you simply have to do the following steps:</p> <ol> <li>goto the VCS dashboard and register your ssh public key there (the contents of <code>id_rsa.pub</code>)</li> <li><code>git clone &lt;ssh_url_of_dashboards_repo&gt;</code></li> <li>it will show a message like this:  ```shell root:user:username$ git pull</li> </ol> <p>The authenticity of host 'github.com (88.888.88.88)' can't be established. XY12XYZ12 key fingerprint is SHA256:+XXXxxxxXXXXxxxxXXX/yyyYYYYyyyYYYyyyYYYyy. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? <pre><code>4. press yes, and it will start downloading the content!\n\n```shell\nWarning: Permanently added 'github.com' (XY12XYZ12) to the list of known hosts.\nremote: Enumerating objects: 60209, done.\nremote: Counting objects: 100% (7498/7498), done.\nremote: Compressing objects: 100% (2083/2083), done.\nremote: Total 60209 (delta 4238), reused 6922 (delta 3850), pack-reused 52711\nReceiving objects: 100% (60209/60209), 152.98 MiB | 7.63 MiB/s, done.\nResolving deltas: 100% (31395/31395), done.\n</code></pre></p> <ul> <li>[ ] TODO : Add Details for all the tools that needs to be installed</li> </ul>"},{"location":"tab_notes/misc/daily_logs/","title":"Daily Logs","text":"<p>(Disclaimer: This is my personal daily log book, and i would be writing a lot of personal  shit here without caring much about anyone. You might not wanna read it)</p>"},{"location":"tab_notes/misc/daily_logs/#291119","title":"29/11/19","text":"<p>I went to an interview a few days ago, just out of curiousity, even though i was sure that i won't be getting any \"android developer jobs\" there . it was a mega job fair. in one company, me and my friend neil(fake name) went. the interviewer guy was willing to give neil a package upto 10LPA (its a great offer for freshers in my country) based on his current skills of php js, ... web stuff . I had this assumption( and neil did too we both kind off had the same mindset) that a company teaches us things, we just have to be a little famous/accomplished. So i thought why not? i am accomplished. i got 2 apps on playstore, i know a lot of android stuff, i am quite famous. i am equally as deserving as neil.  </p> <p>But what happenned was something different.  When my turn came, the interviewer said \" If you have no knwledge of phy/js/node/angular, why are you sitting here?\" to which i said \" i presumed company would teach me, since i bring some level of expertise from other fields\"  </p> <p>so he told me some hard truths \"Companies are fast paced. they don't have time to train you in everything. we seek for candidates having some level of knowledge in the domain, so that we could brush up your skills, increase your knowledge to current requirement and push you to production engineer asap, so that you could be worthy of your salary\" </p> <p>This is completely correct. i have stuck myself in such a career that its very difficult to sell myself for other job profiles. And from what i have seen, companies seek a very high level of proficiency in this field and rarely recruit freshers( or even if they do, salaries will be aweful). Now i am so unsure about what to do next:  </p> <p>A.) keep learning more and more of android and look for job in it. And even if am getting an aweful job offer, just sulk and take it B.) do open source work/gsoc work?( its a good way to earn more recognition/stipend/knowledge and sometimes even job offers) C.) learn web dev, data sciences, blockchain, cloud or other stuff that i don't yet know D.) go back to ds algo / competitive? (because having good competitive knowledge is a safe zone. you are assumed as apure fresher with 0 level of practical knowledge but good level of mathemetics)</p> <p>I know i am going suck in all of the above except maybe (A) or (B) because (C) is something that am unsure would grab my interest (and even if it did, i am sure i need another 1-2 years to be somewhat good at it) and (D) is something i myself know am uncapable of , i am an average shit in maths(but might mug it all up if i pull all nighters for 1 year)</p>"},{"location":"tab_notes/misc/daily_logs/#71119","title":"7/11/19","text":"<p>So... i am in a bit of confusion. I cannot dedicate my full time to any company until i graduate in august 2020. But at the same time many companies are offering me good internship opportunities  because i have been doing android for last 2 years. If i go there, i will be doing Android stuff and that's fine by me.  </p> <p>But  I am kind of done with android. I know what are the things i know and what are the things that i don't. But I feel this learning will never stop and i should have a knowledge of other stuff too. Web dev, Ai,ML ,AR/VR, Security,... stuff  </p> <p>Answer: Be around android, you know. Android is so full of stuff. learn it. Or simply go around it and learn other stuff \"via\" android. Wanna learn ai/ml? good. learn mlkit, intel's npl library, other stuff , and learn ml whenever needed. wanna learn web? -learn react native/ angular, make android apps.But first learn javascript. like python? learn kiwi  </p>"},{"location":"tab_notes/misc/daily_logs/#201019-61119","title":"20/10/19 - 6/11/19","text":"<p>no idea what happenned. some biggies : went to droid con india all alone via FLIGHT!(first time), mom bday, left z1media,... don't remember anymore </p>"},{"location":"tab_notes/misc/daily_logs/#81019-191019","title":"8/10/19 -19/10/19","text":"<p>meh. lots of boring stuff might had happenned, i kinda forgot to update myself here or didn't felt like writing it, whatever.so what happenned last week/weeks? Umm,.. completed office's sdk, pushed it into repo, shown to my manager, got some more bugs to fix, and still working on those. regarding those bugs, my eyes are now tird of looking at exoplayer/tubitv/ima sdk/video view's github issues, group discussions  and SO questions. FUCK this SHIT.  </p> <p>Other than that, maybe i went to clg someday, some interview in SRM(ooh that was a wickedly adeventures day!3 friends roaming in wild farms in haryana all alnoe with no man is sight for an hour...ooh , chills and thrills!), small fight with bro, office to clg clg to office ,yaada yaada yaada. shit.  </p> <p>Hey, am thinking moving all my arcghitecture's images to github. fast uploads, easier to access, always available. Know what, that's what we will do </p>"},{"location":"tab_notes/misc/daily_logs/#71019","title":"7/10/19","text":"<p>wrote a small article on Android architecture. basically copied some person's full medium article,i am no good at those theory stuff, hehe. I know its bad, i should rather be learning those, but eh. Will do someday when required B). Anyways going forward I completed my task at office today, yess! But nobody was there to see it :| mehhhh I think i am really getting interested in VLC media player. I can try GSOC for that, thing's lit dude .just wrote a mail to them. oof, their docs say it must be build on linux. hmm, looks like i am in a situtaion but alright, will see to it. VM ftw! i really think i have to work on kotlin. When I feel all boasty about how good I am with Android, I kind off forget that I ain't no shit about kotlin X( and that just moves me from 90% topper to 60% average :o ! NOPE, daddy is not gonna go down, Daddy is king! kotlin, i see you: you on my death list now valar morghulis dear X| </p>"},{"location":"tab_notes/misc/daily_logs/#61019","title":"6/10/19","text":"<p>went to kirtan after so long . it felt so peaceful.Lately i was having some bad thoughts  regarding a lot of things: aim of life, my losses, my weaknesses , my failures and stuff. But kirtan is very peaceful, it helps me feel good, think solutions rather than problems. Couple of thoughts: - i am going to continue working in Android for a long time. There are many things that I    still need to learn, and there are many milions of devs I am better than them, in terms    of knowledge. So I am going to continue working in that. Dont worry about the other    stuff ,Ansh . LEt the boasters boast.Android is a vast thing to work upon, if you know   every tid bits of it, from the tp most layer of apps to the bottommost layer of    networking,OS and hardware, you will be valued. plus these blogs are here to share your   knowledge and get known to people. There will be always someone in need of an    android dev and you can be useful then.   Plus today almost every tech is mergeing with each other. At a point you will be    knowing a lot about other things too than just android. So Next week, try adding blogs on basic android lifecycles and fragments . Then we will    add mini blogs on buttons, switches, tect views and basic ui components(+ all the    possible modifications i have ever done to them, for a project).   Then we will do firebase  - Success needs to be celebrated. Not to be boasted in demeaning way , but in a healthy,    confidence gaining way. For eg, I got a AAD certiication , i could celebrate in 3 ways:   <pre><code>- Either i should throw a big party . invite my friends, and discuss only about my aad, \n  demaining them in beween, like hehe i got aad  you didn't, i earn this much , you don't,\n  ,... etc\n- Or I could throw a small party for my friends abut this, but we discussing \n  everything else they wanna discuss, with no demaning of anybody involved\n- Or i could just keep quiet about that, and keep working in my home, thinking this \n  success is small and not worth much and i should wait for a bigger success to throw \n  a party\n</code></pre> <p>I think both 1st and 3rd approach would be wrong. Rather enjoy your moment but don't be    an asshole about it</p> <ul> <li>Bullying anyone is always wrong, even if it is very small or in the name of fun. Never    let anyone tell you that you are not worth something or you are a useless person.   Remember, you--( i had so much to say about this, but i am tired, so forgetting a lot    of points).   Just wanna say that you need to stop being around those who bully you, no matter how    much useful those people might be.And also don't stop to to tell people about how really   you feel, just because it might hurt them, because they don't.  </li> </ul>"},{"location":"tab_notes/misc/daily_logs/#11019-51019","title":"1/10/19 - 5/10/19","text":"<p>was back to work with full power. able to crack how to run custom ads using video_view.  </p> <p>Something very terrible happenned . My poor baby cat kiwi passed away on 4th . it was so shocking  and why the fuck can't I shed tears? Man i have grown emotionless. I am devastated with  his loss and i want to cry . He was such a cute life living with full health among us. Never even though this  could happen. He was fine the last night and next morning, mom wake us crying. Turns out  he got a heart attack due to constipation. These poor souls can't communicate their  problems and that's what got him :\"{</p> <p>Other than this I was somewhat hyped about gsoc since 1st october. apparently  Hacktoberfest has made it tough to get tshirts this year. I was also excited about gsoc  cause that would help me learn. But looks like gsoc is 1 hell of a tough ride: - People have started as early as september.(not much of a problem but yeah, tough) - The projects are shit large(not much of a problem but yeah, tough) - These projects need good knowledge of a topic's language/framework and are not meant to    be \"learn as you code\", they are rather like a challange: \"You have to do this, their    are a 1000 others who can do the same thing. let's see if you can do this code faster    and better than others\" - These projects will need at least 8hr/day or 56hr/week attention and that too in    jul/aug/sept2020 - Still though i am going to try for it, currently looking into their code per weekend    and let's see if we can make this through</p>"},{"location":"tab_notes/misc/daily_logs/#30919","title":"30/9/19","text":"<p>Gotta confess, didn't do much stuff. watched a lot of web series( currently it crows and  futurama) . also checked into popup window and made an issue on prebid repo.  would check into that later </p>"},{"location":"tab_notes/misc/daily_logs/#29919","title":"29/9/19","text":"<p>SATURDAY! After an ass busting week of papers, i am happy to relax for sometime.  I didn't applied for leave for today at my office, they are gonna cut the salary, damn :/ Also, fuck i didn't recieved pass for the devfest delhi :'( . Anyways today i am continuing my work with exoplayer from the last week, but before that ,</p> <p>i am in a mood for learning something new : like making this site. i am torn between using mkdocs, jekyll wordpress or simply html/css .  </p> <ul> <li> <p>mkdocs is cool, but i still need to run 4 commands and update yaml everytime i add a  page. It also has a lot of theme limitations and require knowledge of html/css to fix  them.</p> </li> <li> <p>jekyll is also ok, but does not come with a defualy theme, You will have to create  your own theme in order to make it look nice. but it too had support for external themes. But again, it had some stuff which needed to be updated manually.</p> </li> <li> <p>wordpress is something i am curious about. i heard it is somewhat paid, but a parts of    it are free too . it is seen as a very advance version with all those tags and dynamic    content support, but also needs html/css/js knowledge for advance customizations</p> </li> <li> <p>I don't wanna use html/css because i hate them(Damn, my biggest weakness: why i hate the most popular type of development in this industry, the web dev? Ugh, i don't know. so much shit goin on, so many tags, so much sophistication in small stuffs... i had to learn theses stuff, else i would lag behind... aagh fuck)  </p> </li> </ul> <p>Anyhoo, currently going with this mkdocs theme . did some refactoring in yml file, and  about to add some general articles.  </p>"},{"location":"tab_notes/misc/misc_random_learnings/","title":"Miscallanous : Random learnings in android","text":"<pre><code>https://android-developers.googleblog.com/2011/11/android-40-graphics-and-animations.html\n\nhttps://source.android.com/devices/graphics/arch-tv.html#surface_or_texture\n</code></pre> <p>Choosing SurfaceView or TextureView Note: In API 24 and higher, it's recommended to implement SurfaceView instead of TextureView. SurfaceView and TextureView fill similar roles and are both citizens of the view hierarchy. However, SurfaceView and TextureView have different implementations. A SurfaceView takes the same parameters as other views, but SurfaceView contents are transparent when rendered.</p> <p>A TextureView has better alpha and rotation handling than a SurfaceView, but a SurfaceView has performance advantages when compositing UI elements layered over videos. When a client renders with a SurfaceView, the SurfaceView provides the client with a separate composition layer. SurfaceFlinger composes the separate layer as a hardware overlay if supported by the device. When a client renders with a TextureView, the UI toolkit composites the TextureView's content into the view hierarchy with the GPU. Updates to the content may cause other view elements to redraw, for example, if the other views are positioned on top of a TextureView. After view rendering completes, SurfaceFlinger composites the app UI layer and all other layers, so that every visible pixel is composited twice.</p> <p>Note: DRM-protected video can be presented only on an overlay plane. Video players that support protected content must be implemented with SurfaceView</p> <pre><code>https://stackoverflow.com/search?q=%5Bexoplayer%5D+ads  \n\nAn application level media player for Android that supports features not currently provided by MediaPlayer including Dynamic adaptive streaming over HTTP (DASH), SmoothStreaming, and persistent caching.\n</code></pre> <p>So apparently, media player DOES NOT support dash, smooth streaming, etc</p>"},{"location":"tab_notes/readings/intro/","title":"Book Readings","text":"<p>I am making this goal that from April 1, 2021, i am going to read some chapters / pages of a book each day, for atleast 30 minutes and write a para or 2 about it for next 30 mins. My Main goal will be to read atleast 3 books this year. Kindly suggest me some good books to read ! My area of interests Include Computer Science, Computer architectures, Fiances , How to be a better person, Mindfullness, etc</p> <p>Current books that i hope to read are :</p> <ul> <li>Clean architecture</li> <li>Thinking fast and slow</li> <li>Clean Code</li> <li>Clean Coder</li> </ul> <p>book reference : - https://fernandocejas.com/blog/engineering/2019-05-08-architecting-android-reloaded/ - https://github.com/sdcuike/Clean-Code-Collection-Books</p>"},{"location":"tab_notes/readings/part1/","title":"Part1","text":""},{"location":"tab_notes/readings/part1/#march-30-2021-java-the-complete-reference-11th-edition-herbert-schmidt","title":"March 30 2021 Java, the complete reference ,11th edition , Herbert Schmidt","text":"<p>~pg 1-73~ : Mostly index pages, about author, history of java etc pg 74-75</p> <ul> <li>These Pages cover the basic principles on Java language is based. it goes on about process oriented approach and object oriented approach. the former is an approach in which we try to find a solution to a problem based on \"How to do it\" or \"What is happenning\" . This is used by languages like C. The latter is an approach in which we try to find a solution by keeping \"data\" in the center , and based on \"who is being affected\" . The object oriented approach is considered to be superior to process oriented approach and process oriented approach is considered to get complicated as the code base grows.</li> <li>We then jump onto the second principle i.e abstraction. abstraction is about hiding the complexity behind multiple layers of hierarchial classifications and how java utilizes it to be easily maintainable and manageable.</li> </ul> <p>My Thoughts :  - Not completely in agreement with the first point. A bad application of \"Data oriented\" programming , in my opinion is webdev where we only handle the successful case and ignore the errors/wrong program. a page with malformed html will still run almost perfectly, however it would be pita(pain in the a**) to debug and find the cause of breakage.  - Completely agree with the second point.I love abstracting code into smaller, testable parts not only does it help hiding complexity, it also helps in seperating the concerns and making code more easy to debug/reuse.</p> <p>What is this about?</p>"},{"location":"tab_notes/web/mkdocs/basic_syntax/","title":"Basic Syntax","text":"<pre><code>image loaded from the web\n![htttps://www.google.com](https://images.emojiterra.com/mozilla/512px/1f517.png)   \n\nimage loaded from img/logo.png![pic](../../../a_blog_imgs/logo.png)  \n\n image loaded from the web with a link(uses HTML)\n[&lt;img src=\"http://www.google.com.au/images/nav_logo7.png\"&gt;](http://google.com/)  \n\n\nimage loaded from img/logo.png with a link(uses HTML) \n[&lt;img src=\"../a_blog_imgs/logo.png\"&gt;](http://google.com/)  \n\n\nif you are not seeing thisimage , well , simply put: if your blog resides in following \ndirectory:\n\n\n\ndocs/\n |\n |----x/\n |  |\n |  |----y/\n |  |  |\n |  |  |\n |  |  |---z/\n |  |  |  |\n |  |  |  |\n |  |  |  |---myblog.md\n |  |  |  |\n\n then you should create a folder img in the z/ folder and add pics there and access it using\n .../img/imagename.png . so your final structure will be:  \n\n\ndocs/\n |\n |----x/\n |  |\n |  |----y/\n |  |  |\n |  |  |\n |  |  |---z/\n |  |  |  |\n |  |  |  |\n |  |  |  |---img/\n |  |  |  |  |-----imagename.png\n |  |  |  |---myblog.md\n |  |  |  |\n\n\n\n\n\nlike this : ![../img/logo.png](../img/logoxxx.png)\n\n[**except for index.md and its pictures, which are already in the root directory**( path \nfor index is docs/index.md and path for images used in index would be docs/img/picname.png\n)]\n\n\n# CodeHilite\n\n[CodeHilite][1] is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.\n\n!!! failure \"Syntax highlighting not working?\"\n\n    Please ensure that [Pygments][2] is installed. See the next section for\n    further directions on how to set up Pygments or use the official\n    [Docker image][3] with all dependencies pre-installed.\n\n  [1]: https://python-markdown.github.io/extensions/code_hilite/\n  [2]: http://pygments.org\n  [3]: https://hub.docker.com/r/squidfunk/mkdocs-material/\n\n## Installation\n\nCodeHilite parses code blocks and wraps them in pre tags. If [Pygments][2]\nis installed, which is a generic syntax highlighter with support for over\n[300 languages][4], CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:\n\n\n\n sh\npip install pygments\n\n\nTo enable CodeHilite, add the following lines to your mkdocs.yml:\n\n yaml\nmarkdown_extensions:\n  - codehilite\n\n\n\n  [4]: http://pygments.org/languages\n\n## Usage\n\n### Specifying the language\n\nThe CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.\n\n#### via Markdown syntax &lt;small&gt;recommended&lt;/small&gt;\n\nIn Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.\n\nExample:\n\n\n python\nimport tensorflow as tf\n\n\nResult:\n\n python\nimport tensorflow as tf\n\n\n\n#### via Shebang\n\nAlternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.\n\nExample:\n\n\n\n markdown\n    #!/usr/bin/python\n    import tensorflow as tf\n\n\n\nResult:\n\n\n python\n#!/usr/bin/python\nimport tensorflow as tf\n\n\n\n#### via three colons\n\nIf the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.\n\nExample:\n\n\n markdown\n    :::python\n    import tensorflow as tf\n\n\n\nResult:\n\n    :::python\n    import tensorflow as tf\n\n### Adding line numbers\n\nLine numbers can be added by enabling the linenums flag in your mkdocs.yml:\n\n\n\n yaml\nmarkdown_extensions:\n  - codehilite:\n      linenums: true\n\n\n\n\nExample:\n\n markdown\n python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n\n\n\nResult:\n\n    #!python\n    \"\"\" Bubble sort \"\"\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] &gt; items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n\n### Grouping code blocks\n\nThe [SuperFences][5] extension which is part of the [PyMdown Extensions][6]\npackage adds support for grouping code blocks with tabs. This is especially\nuseful for documenting projects with multiple language bindings.\n\nExample:\n\n\n bash tab=\"Bash\"\n#!/bin/bash\n\necho \"Hello world!\"\n\n\n c tab=\"C\"\n#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n}\n\n\n c++ tab=\"C++\"\n#include &lt;iostream&gt;\n\nint main() {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n\n\n c# tab=\"C#\"\nusing System;\n\nclass Program {\n  static void Main(string[] args) {\n    Console.WriteLine(\"Hello world!\");\n  }\n}\n\n\n\nResult:\n\n bash tab=\"Bash\"\n#!/bin/bash\n\necho \"Hello world!\"\n\n\n c tab=\"C\"\n#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n}\n\n\n c++ tab=\"C++\"\n#include &lt;iostream&gt;\n\nint main() {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n\n\n c# tab=\"C#\"\nusing System;\n\nclass Program {\n  static void Main(string[] args) {\n    Console.WriteLine(\"Hello world!\");\n  }\n}\n\n\n  [5]: https://facelessuser.github.io/pymdown-extensions/extensions/superfences/\n  [6]: https://facelessuser.github.io/pymdown-extensions\n\n### Highlighting specific lines\n\nSpecific lines can be highlighted by passing the line numbers to the hl_lines\nargument placed right after the language identifier. Line counts start at 1.\n\nExample:\n\n markdown\n python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n\n\n\nResult:\n\n    #!python hl_lines=\"3 4\"\n    \"\"\" Bubble sort \"\"\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] &gt; items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n\n## Supported languages &lt;small&gt;excerpt&lt;/small&gt;\n\nCodeHilite uses [Pygments][2], a generic syntax highlighter with support for\nover [300 languages][3], so the following list of examples is just an excerpt.\n\n### Bash\n\n bash\n#!/bin/bash\n\nfor OPT in \"$@\"\ndo\n  case \"$OPT\" in\n    '-f' )  canonicalize=1 ;;\n    '-n' )  switchlf=\"-n\" ;;\n  esac\ndone\n\n# readlink -f\nfunction __readlink_f {\n  target=\"$1\"\n  while test -n \"$target\"; do\n    filepath=\"$target\"\n    cd dirname \"$filepath\"\n    target=readlink \"$filepath\"\n  done\n  /bin/echo $switchlf pwd -P/basename \"$filepath\"\n}\n\nif [ ! \"$canonicalize\" ]; then\n  readlink $switchlf \"$@\"\nelse\n  for file in \"$@\"\n  do\n    case \"$file\" in\n      -* )  ;;\n      *  )  __readlink_f \"$file\" ;;\n    esac\n    done\nfi\n\nexit $?\n\n\n### C\n\n c\nextern size_t\npb_varint_scan(const uint8_t data[], size_t left) {\n  assert(data &amp;&amp; left);\n  left = left &gt; 10 ? 10 : left;\n\n#ifdef __SSE2__\n\n  /* Mapping: remaining bytes ==&gt; bitmask */\n  static const int mask_map[] = {\n    0x0000, 0x0001, 0x0003, 0x0007,\n    0x000F, 0x001F, 0x003F, 0x007F,\n    0x00FF, 0x01FF, 0x03FF\n  };\n\n  /* Load buffer into 128-bit integer and create high-bit mask */\n  __m128i temp = _mm_loadu_si128((const __m128i *)data);\n  __m128i high = _mm_set1_epi8(0x80);\n\n  /* Intersect and extract mask with high-bits set */\n  int mask = _mm_movemask_epi8(_mm_and_si128(temp, high));\n  mask = (mask &amp; mask_map[left]) ^ mask_map[left];\n\n  /* Count trailing zeroes */\n  return mask ? __builtin_ctz(mask) + 1 : 0;\n\n#else\n\n  /* Linear scan */\n  size_t size = 0;\n  while (data[size++] &amp; 0x80)\n    if (!--left)\n      return 0;\n  return size;\n\n#endif /* __SSE2__ */\n\n}\n\n\n### C++\n\n cpp\nExtension::\nExtension(const Descriptor *descriptor, const Descriptor *scope) :\n    descriptor_(descriptor),\n    scope_(scope) {\n\n  /* Extract full name for signature */\n  variables_[\"signature\"] = descriptor_-&gt;full_name();\n\n  /* Prepare message symbol */\n  variables_[\"message\"] = StringReplace(\n    variables_[\"signature\"], \".\", \"_\", true);\n  LowerString(&amp;(variables_[\"message\"]));\n\n  /* Suffix scope to identifiers, if given */\n  string suffix (\"\");\n  if (scope_) {\n    suffix = scope_-&gt;full_name();\n\n    /* Check if the base and extension types are in the same package */\n    if (!scope_-&gt;file()-&gt;package().compare(descriptor_-&gt;file()-&gt;package()))\n      suffix = StripPrefixString(suffix,\n        scope_-&gt;file()-&gt;package() + \".\");\n\n    /* Append to signature */\n    variables_[\"signature\"] += \".[\" + suffix +\"]\";\n    suffix = \"_\" + suffix;\n  }\n\n  /* Prepare extension symbol */\n  variables_[\"extension\"] = StringReplace(\n    suffix, \".\", \"_\", true);\n  LowerString(&amp;(variables_[\"extension\"]));\n}\n\n\n### C&amp;#35;\n\n csharp\npublic static void Send(\n    Socket socket, byte[] buffer, int offset, int size, int timeout) {\n  int startTickCount = Environment.TickCount;\n  int sent = 0;\n  do {\n    if (Environment.TickCount &gt; startTickCount + timeout)\n      throw new Exception(\"Timeout.\");\n    try {\n      sent += socket.Send(buffer, offset + sent,\n        size - sent, SocketFlags.None);\n    } catch (SocketException ex) {\n      if (ex.SocketErrorCode == SocketError.WouldBlock ||\n          ex.SocketErrorCode == SocketError.IOPending ||\n          ex.SocketErrorCode == SocketError.NoBufferSpaceAvailable) {\n        /* Socket buffer is probably full, wait and try again */\n        Thread.Sleep(30);\n      } else {\n        throw ex;\n      }\n    }\n  } while (sent &lt; size);\n}\n\n\n### Clojure\n\n clojure\n(clojure-version)\n\n(defn partition-when\n  [f]\n  (fn [rf]\n    (let [a (java.util.ArrayList.)\n          fval (volatile! false)]\n      (fn\n        ([] (rf))\n        ([result]\n           (let [result (if (.isEmpty a)\n                          result\n                          (let [v (vec (.toArray a))]\n                            ;; Clear first\n                            (.clear a)\n                            (unreduced (rf result v))))]\n             (rf result)))\n        ([result input]\n            (if-not (and (f input)  @fval)\n               (do\n                 (vreset! fval true)\n                 (.add a input)\n                 result)\n               (let [v (vec (.toArray a))]\n                 (.clear a)\n                 (let [ret (rf result v)]\n                   (when-not (reduced? ret)\n                     (.add a input))\n                   ret))))))))\n\n\n(into [] (partition-when\n          #(.startsWith % \"&gt;&gt;\"))\n          [\"1d\" \"33\" \"&gt;&gt; 1\" \"&gt;&gt; 2\" \"22\" \"&gt;&gt; 3\"])\n\n\n### Diff\n\n diff\nIndex: grunt.js\n===================================================================\n--- grunt.js    (revision 31200)\n+++ grunt.js    (working copy)\n@@ -12,6 +12,7 @@\n\n module.exports = function (grunt) {\n\n+  console.log('hello world');\n   // Project configuration.\n   grunt.initConfig({\n     lint: {\n@@ -19,10 +20,6 @@\n         'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ],\n-      scripts: [\n-        'grunt.js',\n-        'db/**/*.js'\n-      ],\n       browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',\n\n\n### Docker\n\n docker\nFROM ubuntu\n\n# Install vnc, xvfb in order to create a 'fake' display and firefox\nRUN apt-get update &amp;&amp; apt-get install -y x11vnc xvfb firefox\nRUN mkdir ~/.vnc\n\n# Setup a password\nRUN x11vnc -storepasswd 1234 ~/.vnc/passwd\n\n# Autostart firefox (might not be the best way, but it does the trick)\nRUN bash -c 'echo \"firefox\" &gt;&gt; /.bashrc'\n\nEXPOSE 5900\nCMD [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]\n\n\n### Elixir\n\n elixir\nrequire Logger\n\ndef accept(port) do\n  {:ok, socket} = :gen_tcp.listen(port,\n                    [:binary, packet: :line, active: false, reuseaddr: true])\n  Logger.info \"Accepting connections on port #{port}\"\n  loop_acceptor(socket)\nend\n\ndefp loop_acceptor(socket) do\n  {:ok, client} = :gen_tcp.accept(socket)\n  serve(client)\n  loop_acceptor(socket)\nend\n\ndefp serve(socket) do\n  socket\n  |&gt; read_line()\n  |&gt; write_line(socket)\n\n  serve(socket)\nend\n\ndefp read_line(socket) do\n  {:ok, data} = :gen_tcp.recv(socket, 0)\n  data\nend\n\ndefp write_line(line, socket) do\n  :gen_tcp.send(socket, line)\nend\n\n\n### Erlang\n\n erlang\ncircular(Defs) -&gt;\n  [ { { Type, Base }, Fields } ||\n    { { Type, Base }, Fields } &lt;- Defs, Type == msg, circular(Base, Defs) ].\n\ncircular(Base, Defs) -&gt;\n  Fields = proplists:get_value({ msg, Base }, Defs),\n  circular(Defs, Fields, [Base]).\n\ncircular(_Defs, [], _Path) -&gt;\n  false;\ncircular(Defs, [Field | Fields], Path) -&gt;\n  case Field#field.type of\n    { msg, Type } -&gt;\n      case lists:member(Type, Path) of\n        false -&gt;\n          Children = proplists:get_value({ msg, Type }, Defs),\n          case circular(Defs, Children, [Type | Path]) of\n            false -&gt; circular(Defs, Fields, Path);\n            true  -&gt; true\n          end;\n        true -&gt;\n          Type == lists:last(Path) andalso\n            (length(Path) == 1 orelse not is_tree(Path))\n      end;\n    _ -&gt;\n      circular(Defs, Fields, Path)\n  end.\n\n\n### F&amp;#35;\n\n fsharp\n/// Asynchronously download retangles from the server\n/// and decode the JSON format to F# Rectangle record\nlet [&lt;Js&gt;] getRectangles () : Async&lt;Rectangle[]&gt; = async {\n  let req = XMLHttpRequest()\n  req.Open(\"POST\", \"/get\", true)\n  let! resp = req.AsyncSend()\n  return JSON.parse(resp) }\n\n/// Repeatedly update rectangles after 0.5 sec\nlet [&lt;Js&gt;] updateLoop () = async {\n  while true do\n    do! Async.Sleep(500)\n    let! rects = getRectangles()\n    cleanRectangles()\n    rects |&gt; Array.iter createRectangle }\n\n\n### Go\n\n go\npackage main\n\nimport \"fmt\"\n\nfunc counter(id int, channel chan int, closer bool) {\n  for i := 0; i &lt; 10000000; i++ {\n    fmt.Println(\"process\", id,\" send\", i)\n    channel &lt;- 1\n  }\n  if closer { close(channel ) }\n}\n\nfunc main() {\n  channel := make(chan int)\n  go counter(1, channel, false)\n  go counter(2, channel, true)\n\n  x := 0\n\n  // receiving data from channel\n  for i := range channel {\n    fmt.Println(\"receiving\")\n    x += i\n  }\n\n  fmt.Println(x)\n}\n\n\n### HTML\n\n html\n&lt;!doctype html&gt;\n&lt;html class=\"no-js\" lang=\"\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"&gt;\n    &lt;title&gt;HTML5 Boilerplate&lt;/title&gt;\n    &lt;meta name=\"description\" content=\"\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n\n    &lt;link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/normalize.css\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/main.css\"&gt;\n    &lt;script src=\"js/vendor/modernizr-2.8.3.min.js\"&gt;&lt;/script&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello world! This is HTML5 Boilerplate.&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n### Java\n\n java\nimport java.util.LinkedList;\nimport java.lang.reflect.Array;\n\npublic class UnsortedHashSet&lt;E&gt; {\n\n  private static final double LOAD_FACTOR_LIMIT = 0.7;\n\n  private int size;\n  private LinkedList&lt;E&gt;[] con;\n\n  public UnsortedHashSet() {\n    con  = (LinkedList&lt;E&gt;[])(new LinkedList[10]);\n  }\n\n  public boolean add(E obj) {\n    int oldSize = size;\n    int index = Math.abs(obj.hashCode()) % con.length;\n    if (con[index] == null)\n      con[index] = new LinkedList&lt;E&gt;();\n    if (!con[index].contains(obj)) {\n      con[index].add(obj);\n      size++;\n    }\n    if (1.0 * size / con.length &gt; LOAD_FACTOR_LIMIT)\n      resize();\n    return oldSize != size;\n  }\n\n  private void resize() {\n    UnsortedHashSet&lt;E&gt; temp = new UnsortedHashSet&lt;E&gt;();\n    temp.con = (LinkedList&lt;E&gt;[])(new LinkedList[con.length * 2 + 1]);\n    for (int i = 0; i &lt; con.length; i++) {\n      if (con[i] != null)\n        for (E e : con[i])\n          temp.add(e);\n    }\n    con = temp.con;\n  }\n\n  public int size() {\n    return size;\n  }\n}\n\n\n### JavaScript\n\n javascript\nvar Math = require('lib/math');\n\nvar _extends = function (target) {\n  for (var i = 1; i &lt; arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n};\n\nvar e = exports.e = 2.71828182846;\nexports['default'] = function (x) {\n  return Math.exp(x);\n};\n\nmodule.exports = _extends(exports['default'], exports);\n\n\n### JSON\n\n json\n{\n  \"name\": \"mkdocs-material\",\n  \"version\": \"0.2.4\",\n  \"description\": \"A Material Design theme for MkDocs\",\n  \"homepage\": \"http://squidfunk.github.io/mkdocs-material/\",\n  \"authors\": [\n    \"squidfunk &lt;martin.donath@squidfunk.com&gt;\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"Gulpfile.js\",\n  \"scripts\": {\n    \"start\": \"./node_modules/.bin/gulp watch --mkdocs\",\n    \"build\": \"./node_modules/.bin/gulp build --production\"\n  }\n  ...\n}\n\n\n### Julia\n\n julia\nusing MXNet\n\nmlp = @mx.chain mx.Variable(:data)             =&gt;\n  mx.FullyConnected(name=:fc1, num_hidden=128) =&gt;\n  mx.Activation(name=:relu1, act_type=:relu)   =&gt;\n  mx.FullyConnected(name=:fc2, num_hidden=64)  =&gt;\n  mx.Activation(name=:relu2, act_type=:relu)   =&gt;\n  mx.FullyConnected(name=:fc3, num_hidden=10)  =&gt;\n  mx.SoftmaxOutput(name=:softmax)\n\n# data provider\nbatch_size = 100\ninclude(Pkg.dir(\"MXNet\", \"examples\", \"mnist\", \"mnist-data.jl\"))\ntrain_provider, eval_provider = get_mnist_providers(batch_size)\n\n# setup model\nmodel = mx.FeedForward(mlp, context=mx.cpu())\n\n# optimization algorithm\noptimizer = mx.SGD(lr=0.1, momentum=0.9)\n\n# fit parameters\nmx.fit(model, optimizer, train_provider, n_epoch=20, eval_data=eval_provider)\n\n\n### Lua\n\n lua\nlocal ffi = require(\"ffi\")\n\nffi.cdef[[\n  void Sleep(int ms);\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n]]\n\nlocal sleep\nif ffi.os == \"Windows\" then\n  function sleep(s)\n    ffi.C.Sleep(s*1000)\n  end\nelse\n  function sleep(s)\n    ffi.C.poll(nil, 0, s * 1000)\n  end\nend\n\nfor i = 1,160 do\n  io.write(\".\"); io.flush()\n  sleep(0.01)\nend\nio.write(\"\\n\")\n\n\n### MySQL\n\n mysql\nSELECT\n  Employees.EmployeeID,\n  Employees.Name,\n  Employees.Salary,\n  Manager.Name AS Manager\nFROM\n  Employees\nLEFT JOIN\n  Employees AS Manager\nON\n  Employees.ManagerID = Manager.EmployeeID\nWHERE\n  Employees.EmployeeID = '087652';\n\n\n### PHP\n\n php\n&lt;?php\n\n// src/AppBundle/Controller/LuckyController.php\nnamespace AppBundle\\Controller;\n\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass LuckyController {\n\n  /**\n   * @Route(\"/lucky/number\")\n   */\n  public function numberAction() {\n    $number = mt_rand(0, 100);\n\n    return new Response(\n      '&lt;html&gt;&lt;body&gt;Lucky number: '.$number.'&lt;/body&gt;&lt;/html&gt;'\n    );\n  }\n}\n\n\n### Protocol Buffers\n\n proto\nsyntax = \"proto2\";\n\npackage caffe;\n\n// Specifies the shape (dimensions) of a Blob.\nmessage BlobShape {\n  repeated int64 dim = 1 [packed = true];\n}\n\nmessage BlobProto {\n  optional BlobShape shape = 7;\n  repeated float data = 5 [packed = true];\n  repeated float diff = 6 [packed = true];\n\n  // 4D dimensions -- deprecated.  Use \"shape\" instead.\n  optional int32 num = 1 [default = 0];\n  optional int32 channels = 2 [default = 0];\n  optional int32 height = 3 [default = 0];\n  optional int32 width = 4 [default = 0];\n}\n\n\n### Python\n\n python\n\n\"\"\"\n  A very simple MNIST classifier.\n  See extensive documentation at\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n# Import data\nfrom tensorflow.examples.tutorials.mnist import input_data\n\nimport tensorflow as tf\n\nflags = tf.app.flags\nFLAGS = flags.FLAGS\nflags.DEFINE_string('data_dir', '/tmp/data/', 'Directory for storing data')\n\nmnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)\n\nsess = tf.InteractiveSession()\n\n# Create the model\nx = tf.placeholder(tf.float32, [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n\n\n### Ruby\n\n ruby\nrequire 'finity/event'\nrequire 'finity/machine'\nrequire 'finity/state'\nrequire 'finity/transition'\nrequire 'finity/version'\n\nmodule Finity\n  class InvalidCallback &lt; StandardError; end\n  class MissingCallback &lt; StandardError; end\n  class InvalidState    &lt; StandardError; end\n\n  # Class methods to be injected into the including class upon inclusion.\n  module ClassMethods\n\n    # Instantiate a new state machine for the including class by accepting a\n    # block with state and event (and subsequent transition) definitions.\n    def finity options = {}, &amp;block\n      @finity ||= Machine.new self, options, &amp;block\n    end\n\n    # Return the names of all registered states.\n    def states\n      @finity.states.map { |name, _| name }\n    end\n\n    # Return the names of all registered events.\n    def events\n      @finity.events.map { |name, _| name }\n    end\n  end\n\n  # Inject methods into the including class upon inclusion.\n  def self.included base\n    base.extend ClassMethods\n  end\nend\n\n\n### XML\n\n xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]&gt;\n&lt;?oxygen RNGSchema=\"some.rng\" type=\"xml\"?&gt;\n&lt;xs:main-Tag xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;\n  &lt;!-- This is a sample comment --&gt;\n  &lt;childTag attribute=\"Quoted Value\" another-attribute='Single quoted value'\n      a-third-attribute='123'&gt;\n    &lt;withTextContent&gt;Some text content&lt;/withTextContent&gt;\n    &lt;withEntityContent&gt;Some text content with &amp;lt;entities&amp;gt; and\n      mentioning uint8_t and int32_t&lt;/withEntityContent&gt;\n    &lt;otherTag attribute='Single quoted Value'/&gt;\n  &lt;/childTag&gt;\n  &lt;![CDATA[ some CData ]]&gt;\n&lt;/main-Tag&gt;\n\n\n\n## Body copy\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero,\nmollis sed massa vel, *ornare viverra ex*. Mauris a ullamcorper lacus. Nullam\nurna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales\npulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan\ntempor.\n\n**Sed suscipit**, orci non pretium pretium, quam mi gravida metus, vel\nvenenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum\neros. [Nulla aliquam](#) orci sit amet nisl posuere malesuada. Proin aliquet\nnulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin\ntincidunt. Aenean ullamcorper sit amet nulla at interdum.\n\n## Headings\n\n### The 3rd level\n\n#### The 4th level\n\n##### The 5th level\n\n###### The 6th level\n\n## Headings &lt;small&gt;with secondary text&lt;/small&gt;\n\n### The 3rd level &lt;small&gt;with secondary text&lt;/small&gt;\n\n#### The 4th level &lt;small&gt;with secondary text&lt;/small&gt;\n\n##### The 5th level &lt;small&gt;with secondary text&lt;/small&gt;\n\n###### The 6th level &lt;small&gt;with secondary text&lt;/small&gt;\n\n## Blockquotes\n\n&gt; Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc\n  mauris, a ultricies libero efficitur sed. *Class aptent* taciti sociosqu ad\n  litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie\n  imperdiet consectetur.\n\n### Blockquote nesting\n\n&gt; **Sed aliquet**, neque at rutrum mollis, neque nisi tincidunt nibh, vitae\n  faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem\n  [libero fermentum](#) urna, ut efficitur elit ligula et nunc.\n\n&gt; &gt; Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla.\n    Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio.\n    Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum.\n    eu odio.\n\n&gt; &gt; &gt; Suspendisse rutrum facilisis risus, eu posuere neque commodo a.\n      Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo\n      bibendum, sodales mauris ut, tincidunt massa.\n\n### Other content blocks\n\n&gt; Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\n  sit amet laoreet nibh.\n   js hl_lines=\"8\"\n  var _extends = function(target) {\n    for (var i = 1; i &lt; arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  };\n\n\n  &gt; &gt; Praesent at :::js return target, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.\n\n## Lists\n\n### Unordered lists\n\n* Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\n  non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\n  at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.\n\n    * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    * Nam vulputate tincidunt fringilla.\n    * Nullam dignissim ultrices urna non auctor.\n\n* Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut\n  eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam\n  ac, aliquet sed mauris.\n\n* Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur\n  accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh\n  lacinia sed. Aenean in finibus diam.\n\n### Ordered lists\n\n1. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\n  elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\n  consectetur feugiat sodales.\n\n2. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam\n  pellentesque lacinia eu vel odio.\n\n    1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n      quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n      ultricies libero efficitur sed.\n\n        1. Mauris dictum mi lacus\n        2. Ut sit amet placerat ante\n        3. Suspendisse ac eros arcu\n\n    2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n      rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed\n      aliquet, neque at rutrum mollis, neque nisi tincidunt nibh.\n\n    3. Pellentesque eget :::js var _extends ornare tellus, ut gravida mi.\n     js hl_lines=\"1\"\n    var _extends = function(target) {\n      for (var i = 1; i &lt; arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          target[key] = source[key];\n        }\n      }\n      return target;\n    };\n\n\n3. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n  nulla. Vivamus a pharetra leo.\n\n### Definition lists\n\nLorem ipsum dolor sit amet\n\n:   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\n    tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor\n    lobortis orci, at elementum urna sodales vitae. In in vehicula nulla.\n\n    Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    Nam vulputate tincidunt fringilla.\n    Nullam dignissim ultrices urna non auctor.\n\nCras arcu libero\n\n:   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\n    ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at\n    aliquam ac, aliquet sed mauris.\n\n## Code blocks\n\n### Inline\n\nMorbi eget dapibus felis. Vivamus *venenatis porttitor* tortor sit amet\nrutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\nper inceptos himenaeos. [Pellentesque aliquet quam enim](#), eu volutpat urna\nrutrum a.\n\nNam vehicula nunc :::js return target mauris, a ultricies libero efficitur\nsed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque\neget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.\n\n### Listing\n\n    #!js hl_lines=\"8\"\n    var _extends = function(target) {\n      for (var i = 1; i &lt; arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          target[key] = source[key];\n        }\n      }\n      return target;\n    };\n\n## Horizontal rules\n\nAenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet\ndui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna\nnon auctor.\n\n***\n\nInteger vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis\nelementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla\nconsectetur feugiat sodales.\n\n## Data tables\n\n| Sollicitudo / Pellentesi | consectetur | adipiscing | elit    | arcu | sed |\n| ------------------------ | ----------- | ---------- | ------- | ---- | --- |\n| Vivamus a pharetra       | yes         | yes        | yes     | yes  | yes |\n| Ornare viverra ex        | yes         | yes        | yes     | yes  | yes |\n| Mauris a ullamcorper     | yes         | yes        | partial | yes  | yes |\n| Nullam urna elit         | yes         | yes        | yes     | yes  | yes |\n| Malesuada eget finibus   | yes         | yes        | yes     | yes  | yes |\n| Ullamcorper              | yes         | yes        | yes     | yes  | yes |\n| Vestibulum sodales       | yes         | -          | yes     | -    | yes |\n| Pulvinar nisl            | yes         | yes        | yes     | -    | -   |\n| Pharetra aliquet est     | yes         | yes        | yes     | yes  | yes |\n| Sed suscipit             | yes         | yes        | yes     | yes  | yes |\n| Orci non pretium         | yes         | partial    | -       | -    | -   |\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus\nnon sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci,\nat elementum urna sodales vitae. In in vehicula nulla, quis ornare libero.\n\n| Left       | Center   | Right   |\n| :--------- | :------: | ------: |\n| Lorem      | *dolor*  | amet  |\n| [ipsum](#) | **sit**  |         |\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\nlectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl,\nsit amet laoreet nibh.\n\n&lt;table&gt;\n  &lt;colgroup&gt;\n    &lt;col width=\"30%\"&gt;\n    &lt;col width=\"70%\"&gt;\n  &lt;/colgroup&gt;\n  &lt;thead&gt;\n    &lt;tr class=\"header\"&gt;\n      &lt;th&gt;Table&lt;/th&gt;\n      &lt;th&gt;with colgroups (Pandoc)&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Lorem&lt;/td&gt;\n      &lt;td&gt;ipsum dolor sit amet.&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n      &lt;td&gt;Sed sagittis&lt;/td&gt;\n      &lt;td&gt;eleifend rutrum. Donec vitae suscipit est.&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n\n# Admonition\n\n[Admonition][1] is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.\n\n  [1]: https://python-markdown.github.io/extensions/admonition/\n\n## Installation\n\nAdd the following lines to your mkdocs.yml:\n\n yaml\nmarkdown_extensions:\n  - admonition\n\n\n## Usage\n\nAdmonition blocks follow a simple syntax: every block is started with !!!,\nfollowed by a single keyword which is used as the [type qualifier][2] of the\nblock. The content of the block then follows on the next line, indented by\nfour spaces.\n\nExample:\n\n markdown\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n  [2]: #types\n\n### Changing the title\n\nBy default, the block title will equal the type qualifier in titlecase. However,\nit can easily be changed by adding a quoted string after the type qualifier.\n\nExample:\n\n markdown\n!!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n### Removing the title\n\nSimilar to setting a [custom title][3], the icon and title can be omitted by\nproviding an empty string after the type qualifier:\n\nExample:\n\n markdown\n!!! note \"\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! note \"\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n  [3]: #changing-the-title\n\n### Embedded code blocks\n\nBlocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.\n\nHowever, the [PyMdown Extensions][4] package adds an extension called\n[SuperFences][5], which makes it possible to nest code blocks within other\nblocks, respectively Admonition blocks.\n\n  [4]: https://facelessuser.github.io/pymdown-extensions\n  [5]: https://facelessuser.github.io/pymdown-extensions/extensions/superfences/\n\nExample:\n\n!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n     mysql\n    SELECT\n      Employees.EmployeeID,\n      Employees.Name,\n      Employees.Salary,\n      Manager.Name AS Manager\n    FROM\n      Employees\n    LEFT JOIN\n      Employees AS Manager\n    ON\n      Employees.ManagerID = Manager.EmployeeID\n    WHERE\n      Employees.EmployeeID = '087652';\n\n\n    Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\n    sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\n    Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.\n\n### Collapsible blocks\n\nThe [Details][6] extension which is also part of the [PyMdown Extensions][4]\npackage adds support for rendering collapsible Admonition blocks. This is\nuseful for FAQs or content that is of secondary nature.\n\nExample:\n\n markdown\n??? note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n??? note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nBy adding a + sign directly after the start marker, blocks can be rendered\nopen by default.\n\n  [6]: https://facelessuser.github.io/pymdown-extensions/extensions/details/\n\n## Types\n\nAdmonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers provided by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is note.\n\n### Note\n\nExample:\n\n markdown\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* note\n* seealso\n\n### Abstract\n\nExample:\n\n markdown\n!!! abstract\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! abstract\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* abstract\n* summary\n* tldr\n\n### Info\n\nExample:\n\n markdown\n!!! info\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! info\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* info\n* todo\n\n### Tip\n\nExample:\n\n markdown\n!!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! tip\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* tip\n* hint\n* important\n\n### Success\n\nExample:\n\n markdown\n!!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! success\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* success\n* check\n* done\n\n### Question\n\nExample:\n\n markdown\n!!! question\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! question\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* question\n* help\n* faq\n\n### Warning\n\nExample:\n\n markdown\n!!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! warning\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* warning\n* caution\n* attention\n\n### Failure\n\nExample:\n\n markdown\n!!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! failure\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* failure\n* fail\n* missing\n\n### Danger\n\nExample:\n\n markdown\n!!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! danger\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* danger\n* error\n\n### Bug\n\nExample:\n\n markdown\n!!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! bug\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* bug\n\n### Example\n\nExample:\n\n markdown\n!!! example\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! example\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* example\n* snippet\n\n### Quote\n\nExample:\n\n markdown\n!!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\nResult:\n\n!!! quote\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nQualifiers:\n\n* quote\n* cite\n</code></pre>"},{"location":"tab_projects/project_summary/","title":"Portfolio","text":""},{"location":"tab_projects/project_summary/#portfolio","title":"Portfolio","text":""},{"location":"tab_projects/project_summary/#1-personal-projectsandroid","title":"1. Personal projects(Android):","text":""},{"location":"tab_projects/project_summary/#pdf-widgets","title":"PDF Widgets","text":"<ul> <li>A utility app that can make widgets of PDFs available on mobile</li> <li>Links : Playstore</li> </ul>"},{"location":"tab_projects/project_summary/#varabhaya-mobile-app","title":"Varabhaya Mobile App","text":"<ul> <li>A Native Mobile App for an NGO. Serves as an interactive platform for receiving event information and watching media content.</li> <li>Uses MVVM, APIs from WordPress, Firebase and Amazon AWS for various tasks.</li> <li>Links : Playstore</li> </ul>"},{"location":"tab_projects/project_summary/#self-notes","title":"Self Notes","text":"<ul> <li>A simple note taking app that can give pin-able notifications for each note. </li> <li>Uses latest Architecture Components and MVVM pattern.  </li> <li>Links : Playstore</li> </ul>"},{"location":"tab_projects/project_summary/#menu-maker_v1","title":"Menu-Maker_v1","text":"<ul> <li>A small , easy to use app for restaurants for storing data, immediately creating a PDF, add/modify items, etc</li> <li>Links : Playstore | Github</li> </ul>"},{"location":"tab_projects/project_summary/#body-building-app","title":"Body building app","text":"<p>An open source app built with Latest Jetpack components,Water manager is a full fledged  Intake tracker app that can remind users to drink water, log their data and provide  meaningful analysis. Github(java) | Github(kotlin)</p> <p> </p>"},{"location":"tab_projects/project_summary/#water-manager-water-intake-tracker-and-reminder","title":"Water Manager : Water Intake Tracker and Reminder","text":"<p>An open source app built with Latest Jetpack components,Water manager is a full fledged  Intake tracker app that can remind users to drink water, log their data and provide  meaningful analysis.  </p> <p>Links: Playstore |  Github</p> <p> </p>"},{"location":"tab_projects/project_summary/#2-other-mini-projectsandroid","title":"2. Other Mini Projects(Android)","text":"<ul> <li>Android Experiments : A repository having various samples of architecture components (room, livedata, paging, navigation,etc)</li> <li>Attendance tracker : A simple way to track your subject wise Attendance manually.</li> <li>File Manager : Full fledged file manager using storage access framework (SAF Api).</li> <li>#100DaysOfCode : A utility reminder app to remind the user to code for 1 hr each day.  </li> <li>m-player : a basic music player using media libraries.</li> <li>CareAid : A hackathon project this is an app. It is a mobile client for an iot based  emergency sensor button that will send the message to the app and or receiving such message app will start ringing and notifying the registered emergency helpers.</li> <li>B-Browser :A single screen mobile browser. made while learning about android WebView.  </li> <li>MyJIMS : One of my first full fledged app from 2017-18. Its an app for showing my college details.It Also has a chat-based announcement portal which uses Firebase Auth and Firebase Realtime Database as backend server. </li> <li>9Notes :  The first version of my note taking app.</li> <li>NewsView : A basic news app</li> <li> <p>2048 :  A puzzle game.</p> </li> <li> <p>Sensor game | google-groups web view | Report card</p> </li> </ul>"},{"location":"tab_projects/project_summary/#3-other-mini-projectsweb","title":"3. Other Mini Projects(Web)","text":"<ul> <li>Web Experiments :A set of utility websites that I created.</li> <li>Menu maker web :Web version of my menu maker app</li> <li>URL Shortner  :A small url shortner web app made using flask(python and Bootstrap) | Demo</li> <li>Bank Manager : Bulma and Flask based bank management system. currently only ui is present</li> <li>PHP Experiments :Some small web apps i made using php</li> </ul>"},{"location":"tab_projects/project_summary/#4-other-mini-projectsmisc","title":"4. Other Mini Projects(Misc)","text":"<ul> <li>All in one convertor : A react based file conversion platform that we made as major project in college.</li> <li> <p>PicsaBiz : A small art selling e commerce platform that we made as minor project.</p> </li> <li> <p>\"Talk to Super jarvis\" : Super Jarvis a trivia on Marvel Avengers made for Google assistant.</p> </li> <li>Venturebeat article analysis : The following project aims to display how the use of scrapy, matplotlib and NLTK library can be put together to get some meaningful analysis. Here we crawl around 600+ articles of december 2018 from a tech-news site Venturebeat.com , put them in a large text file, and then read that file using NLTK library to build a hashmap of unique words, filtering out the non usefult stopwords.  </li> <li>Python Experiments : Random stuff i do in python</li> </ul>"},{"location":"tab_projects/project_summary/#5-gallery","title":"5. Gallery","text":""},{"location":"tab_travel/summary/","title":"My Travel Stories","text":"<p>I love to travel! I want to visit a lot of places, see the various cultures and sights, interact with people and have fun.   </p> <p>However this is a bit hypocritical statement as of now \ud83d\ude05  . Being a single child from an  over protective family with struggling finances meant that I ended up being a frog of a well . I wasn't allowed to go for school picnics, nor i took any far off tutions, or a hostel in college. I didn't learn to drive and our family rarely ever went for a journey outside our state( there were neither much finances nor any interest for going out)  </p> <p>So I am trying to change all of this. I am learning to drive, and i try to go places on my own. I am still a conservative introvert, but I don't shy away from  connecting with strangers and am always up for a tech event or community gathering. I have different social circles of friends which makes plans for trips from time to time and sometimes those actually get implemented too \ud83d\ude02.    </p> <p>So far, here is the summary of places that i have visited:  </p> <ol> <li>2019 : <ul> <li>January  : Jaipur ( trip with friends)  </li> <li>November : Chennai (Droidcon event)  </li> <li>December : Pundag, WB (A village between Jharkhand and West Bengal, Religious event)  </li> </ul> </li> <li>2020 : </li> <li>2021 : <ul> <li>July     : Shimla ( trip with family)  </li> </ul> </li> <li> <p>2022 :  </p> <ul> <li>January  : Pundag(Religious event)  </li> <li>March    : Haridwar, Dehradun, Mussoorie,UK (trip with friends)  </li> <li>May      : Mumbai (visiting office)  </li> <li>June     : Rishikesh, Haridwar (trip with friends)</li> <li>December : Mumbai (visiting the office)</li> <li>December : Pundag,WB (religious trip)</li> </ul> </li> <li> <p>2023 :</p> <ul> <li>January : Mumbai (Visiting office and friends)</li> <li>May     : Tirthan Valley,HP (Solo trip \u2764\ufe0f)</li> <li>July    : Moradabad,UP (Road trip, Sis Engagement)</li> <li>December: Udaipur, Rajasthan (family trip, friend's sister marriage)</li> <li>December: Pundag,WB (religious trip)</li> </ul> </li> </ol>"},{"location":"tab_work_exp/work_exp/","title":"Work Experience","text":"<p>I have been keeping myself busy with professional works since 2017 .  I would often do internships/open source work in my free time (and sometimes during my college too  )   </p> <p>I haven't updated this website for sometime, but i am planning to keep atleast this section up to date, as not only it serves as a place to display my professional skills, it will also help me remember , who i was and how far i have come \ud83e\uddff</p>"},{"location":"tab_work_exp/work_exp/#current","title":"Current","text":""},{"location":"tab_work_exp/work_exp/#software-engineer-tata-aig-mar23-present","title":"Software Engineer | TATA AIG | Mar23-Present","text":"<ul> <li> <p>Roles and Responsibilities:</p> <ul> <li>One of the 3 Core Android Engineers responsible for maintenance, development and releases of the  official Consumer Android App.</li> <li>Pod Lead for All kinds of claims, endorsements, policies and policy features of the Health and Home insurance domain.</li> <li>Daily tasks include creating and assigning Task Tickets, Discuss new features with QAs, Management, Development of those features, Gathering Information, Deploying the releases, Taking Interviews and helping Interns/ new Joiners.</li> </ul> </li> <li> <p>Devops:</p> <ul> <li>Bringing in Best practises and modularizing the existing code to improve readability and performance</li> <li>Setting up a \"Help Me\" framework for everyone to get guidance from peers,stakeholders and subject-matter experts in an efficient manner</li> <li>Automating mundane tasks with Circle CI and Mockito</li> </ul> </li> <li> <p>Tech</p> <ul> <li>Revamped existing camera module from Camera2 to CameraX</li> <li>Improved analytics and user engagement by adding notification frameworks and user surveys</li> <li>Built a whole new Smart Home feature where I was involved in creating it from scratch to public release . Interacted with multiple stakeholders to ensure bugproof and robust shipping which resulted in a 30% user growth within 15 days of release and the app crossing the much awaited 1 million installs benchmark.</li> <li>Shared insights and took sessions on improving git branching, app flavours and improving build speeds.</li> </ul> </li> </ul>"},{"location":"tab_work_exp/work_exp/#past-experience","title":"Past Experience","text":""},{"location":"tab_work_exp/work_exp/#sdk-engineer-clevertap-nov21-mar23","title":"SDK Engineer | CleverTap | Nov21-Mar23","text":"<p>Maintaining CleverTap's core(android), Unity, Flutter and React-Native SDK alongside many awesome devs.  </p> <ul> <li> <p>Devops: </p> <ul> <li>improving quality of code by writing test cases, converting the Java codebase to Kotlin and fixing bugs </li> <li>Built a CI/CD pipeline that automated the whole process of testing , lint checks , code checks, building, deploying and publishing the sdks on cloud for various workflows , cutting the release time by almost 60% and paving way for faster and quality controlled future releases </li> <li>documented all the new tech/pocs i worked with, to help team with easy handover</li> </ul> </li> <li> <p>Team Spirit</p> <ul> <li>helped ios and web teams with domain/general product knowledge</li> <li>guided interns and fresher engineers as a buddy engineer</li> </ul> </li> <li> <p>Tech</p> <ul> <li>Core Android SDK (Java/kotlin) : added new features , fixed existing bugs in inbox, profile ,etc . Added unit tests, cicd automation </li> <li>Leanplum SDK : ported Variables feature from leanplum to clevertap sdk </li> <li>Worked on react-native,cordova,unity and flutter sdks : These were mainly wrappers over the original android/ios sdk, so added new api support, added features and maintained the repos</li> <li>Proof of concept and Demo Apps : Created multiple proof of concepts for different technologies like wear os devices, tv os devices, ios devices, react native based framework apps, flutter apps , ecommerce POC etc</li> <li>NOC Support : interacting with various 3rd party Unicorn/MNC clients to understand their issues in using CT sdks and resolving them  </li> </ul> </li> </ul>"},{"location":"tab_work_exp/work_exp/#sde-1-android-skuad-oct20-nov21","title":"SDE-1 Android | Skuad| Oct20-Nov21","text":"<p>Contributed to the product used by 10 million+ students, teachers and parents , solving various innovative challenges.  </p> <ul> <li>refactored and revamped the payment experiences. Integrated multiple 3rd party payment sdks . Implemented a whole new installment based payment feature for the previously one time payment system  </li> <li>implemented cart based publishing of videos in classroom for teachers   </li> <li>improved the architecture, brought the app to support view binding  </li> </ul> <p>More details Here.</p>"},{"location":"tab_work_exp/work_exp/#web-developer-intern-connected-inc-july-2020-september-2020","title":"Web Developer Intern | Connected Inc | [July 2020 -September 2020]","text":"<ul> <li>Responsible for Development and Deployment of the website of company\u2019s new product, \u201cPause-Play\u201d  </li> </ul>"},{"location":"tab_work_exp/work_exp/#android-dev-intern-z1-media-september-2019-november-2019","title":"Android Dev Intern | Z1 Media | September 2019 \u2013 November 2019","text":"<ul> <li>Researched and Built a native B2B SDK prototype for displaying Video Ads on Android.</li> </ul>"},{"location":"tab_work_exp/work_exp/#interactive-web-games-developer-ncert-march-2019-march-2019","title":"Interactive Web Games Developer | NCERT | March 2019 \u2013 March 2019","text":"<ul> <li>Developed online educative games (classes 4 and 5) aimed to make various concepts easier to understand.</li> <li>The games are on the official NCERT portal and are being accessible by millions of students via their NCERT books.</li> </ul>"},{"location":"tab_work_exp/work_exp/#android-dev-intern-cloudblocks-inc-july-2018-september-2018","title":"Android Dev Intern | Cloudblocks Inc | July 2018 \u2013 September 2018","text":"<ul> <li>Worked on fixing bugs and adding new features in the live Cloudblocks mobile app  .</li> <li>Contributed to 2 major releases.  </li> </ul>"},{"location":"tab_work_exp/work_exp/#teacher-assistant-coding-blocks-june-2018-september-2018","title":"Teacher Assistant | Coding Blocks | June 2018 \u2013 September 2018","text":"<ul> <li>Worked as Teacher Assistant for the weekend batch.</li> <li>Created Assignments, took doubt sessions, helped students build new apps.</li> </ul>"},{"location":"tab_work_exp/work_exp/#android-dev-intern-claro-energy-february-2018-march-2018","title":"Android Dev Intern | Claro Energy | February 2018 \u2013 March 2018","text":"<ul> <li>Developed 2 IOT/Mobile Apps using technologies like Bluetooth, Android broadcasts and Arduino devices for internal usage.</li> <li>Reduced the office manual workload by half, automating the crucial tasks of sending messages.</li> </ul>"}]}